{"code":"import * as tslib_1 from \"tslib\";\r\nimport { CreepTaskRequest } from \"../CreepTaskRequest\";\r\nimport { CreepTask } from \"../CreepTask\";\r\nimport * as utils from \"utils/utils\";\r\nimport { CreepTaskQueue } from \"../CreepTaskQueue\";\r\nimport { TaskStatus } from \"../Task\";\r\nvar MineRequest = /** @class */ (function (_super) {\r\n    tslib_1.__extends(MineRequest, _super);\r\n    function MineRequest(roomName, sourceID) {\r\n        var _this = _super.call(this, roomName, \"\\uD83D\\uDCB2\", sourceID) || this;\r\n        _this.priority = 1;\r\n        _this.requiredRole = 2 /* ROLE_MINER */;\r\n        _this.name = \"Mine\";\r\n        var roomMem = Game.rooms[roomName].memory;\r\n        console.log(\"source id in mine req ctor: \" + sourceID);\r\n        _this.source = _.find(roomMem.harvestLocations, function (h) { return h.sourceID == sourceID; });\r\n        if (_this.source == undefined)\r\n            console.log(\"You cant init a mine request with an undefined source.\");\r\n        console.log(\"after finding source: \" + _this.source.sourceID);\r\n        _this.id = _.random(0, 10);\r\n        _this.maxConcurrent = utils.sourceCount(_this.roomName);\r\n        return _this;\r\n    }\r\n    return MineRequest;\r\n}(CreepTaskRequest));\r\nexport { MineRequest };\r\nvar Mine = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Mine, _super);\r\n    function Mine(taskInfo) {\r\n        return _super.call(this, taskInfo) || this;\r\n    }\r\n    Mine.prototype.init = function () {\r\n        _super.prototype.init.call(this);\r\n        console.log(\"mine init assigned to \" + this.request.assignedTo);\r\n        var request = this.request;\r\n        var source = request.source;\r\n        source.assignedTo = request.assignedTo;\r\n        this.request.status = TaskStatus.PREPARE;\r\n    };\r\n    Mine.prototype.prepare = function () {\r\n        _super.prototype.prepare.call(this);\r\n        if (this.request.status == TaskStatus.FINISHED)\r\n            return;\r\n        this.request.status = TaskStatus.IN_PROGRESS;\r\n    };\r\n    Mine.prototype.continue = function () {\r\n        _super.prototype.continue.call(this);\r\n        if (this.request.status == TaskStatus.FINISHED)\r\n            return;\r\n        if (this.creep.carry.energy < this.creep.carryCapacity)\r\n            this.harvest();\r\n        else\r\n            this.deliver();\r\n    };\r\n    Mine.addRequests = function (roomName) {\r\n        var room = Game.rooms[roomName];\r\n        var mem = room.memory;\r\n        var unassigned = _.filter(mem.harvestLocations, function (h) { return h.assignedTo === null; });\r\n        if (unassigned.length === 0)\r\n            return;\r\n        for (var key in unassigned) {\r\n            var smartSource = unassigned[key];\r\n            console.log(\"about to add source for this id: \" + smartSource.sourceID);\r\n            var request = new MineRequest(roomName, smartSource.sourceID);\r\n            CreepTaskQueue.addPending(request);\r\n        }\r\n    };\r\n    Mine.prototype.harvest = function () {\r\n        var creep = Game.creeps[this.request.assignedTo];\r\n        var source = Game.getObjectById(this.request.targetID);\r\n        if (creep.harvest(source) == ERR_NOT_IN_RANGE) {\r\n            creep.moveTo(source, { visualizePathStyle: { stroke: '#ffaa00' } });\r\n        }\r\n    };\r\n    Mine.prototype.deliver = function () {\r\n        var creep = Game.creeps[this.request.assignedTo];\r\n        var container = utils.findClosestContainer(this.request.roomName, creep.id, true, true);\r\n        if (container == undefined) {\r\n            creep.drop(RESOURCE_ENERGY);\r\n            return;\r\n        }\r\n        if (container.store.energy == container.storeCapacity)\r\n            return;\r\n        if (creep.transfer(container, RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {\r\n            creep.moveTo(container, { visualizePathStyle: { stroke: '#ffffff' } });\r\n        }\r\n    };\r\n    return Mine;\r\n}(CreepTask));\r\nexport { Mine };\r\n//# sourceMappingURL=Mine.js.map","map":{"version":3,"file":"Mine.js","sourceRoot":"","sources":["../../src/tasks/creep/Mine.ts"],"names":[],"mappings":"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"}}
