{"code":"import { Queue } from \"utils/queue\";\r\nvar TaskQueue = /** @class */ (function () {\r\n    function TaskQueue() {\r\n        this._waitingTasks = new Queue();\r\n        this._runningTasks = [];\r\n    }\r\n    TaskQueue.prototype.clear = function () {\r\n        this._waitingTasks.clear();\r\n        this._runningTasks = [];\r\n    };\r\n    TaskQueue.prototype.runningCount = function (name) {\r\n        if (name === void 0) { name = \"\"; }\r\n        var count = 0;\r\n        for (var value in this._runningTasks) {\r\n            var task = this._runningTasks[value];\r\n            if (task.name == name || name == \"\")\r\n                count++;\r\n        }\r\n        return count;\r\n    };\r\n    TaskQueue.prototype.waitingCount = function () {\r\n        return this._waitingTasks.length();\r\n    };\r\n    TaskQueue.prototype.addTask = function (task) {\r\n        if (task == undefined || task == null)\r\n            return;\r\n        var total = this._waitingTasks.count(task.name) + this.runningCount(task.name);\r\n        if (total > task.maxConcurrentCount)\r\n            return;\r\n        this._waitingTasks.push(task);\r\n    };\r\n    TaskQueue.prototype.runningTasks = function () {\r\n        return this._runningTasks;\r\n    };\r\n    TaskQueue.prototype.waitingTasks = function () {\r\n        return this._waitingTasks.toArray();\r\n    };\r\n    TaskQueue.prototype.any = function () {\r\n        return this._waitingTasks.any();\r\n    };\r\n    TaskQueue.prototype.remove = function (task) {\r\n        var index = this._runningTasks.indexOf(task);\r\n        if (index > -1) {\r\n            this._runningTasks.splice(index, 1);\r\n        }\r\n    };\r\n    TaskQueue.prototype.startNext = function (creepID, context) {\r\n        if (this._waitingTasks.any() == false)\r\n            return;\r\n        var task = this._waitingTasks.pop();\r\n        if (task != undefined) {\r\n            task.start(creepID, context);\r\n            this._runningTasks.push(task);\r\n        }\r\n    };\r\n    return TaskQueue;\r\n}());\r\nexport { TaskQueue };\r\n//# sourceMappingURL=TaskQueue.js.map","map":{"version":3,"file":"TaskQueue.js","sourceRoot":"","sources":["../src/utils/TaskQueue.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,KAAK,EAAE,MAAM,aAAa,CAAC;AAGpC;IAAA;QAES,kBAAa,GAAa,IAAI,KAAK,EAAK,CAAC;QACzC,kBAAa,GAAQ,EAAE,CAAC;IA6DjC,CAAC;IA3DA,yBAAK,GAAL;QAEC,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;QAC3B,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;IACzB,CAAC;IACD,gCAAY,GAAZ,UAAa,IAAiB;QAAjB,qBAAA,EAAA,SAAiB;QAE7B,IAAI,KAAK,GAAW,CAAC,CAAC;QACtB,KAAK,IAAM,KAAK,IAAI,IAAI,CAAC,aAAa,EACtC;YACC,IAAI,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YACrC,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE;gBAAE,KAAK,EAAE,CAAC;SAC7C;QACD,OAAO,KAAK,CAAC;IACd,CAAC;IACD,gCAAY,GAAZ;QAEC,OAAO,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC;IACpC,CAAC;IACD,2BAAO,GAAP,UAAQ,IAAO;QAEd,IAAI,IAAI,IAAI,SAAS,IAAI,IAAI,IAAI,IAAI;YAAE,OAAO;QAE9C,IAAI,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC/E,IAAI,KAAK,GAAG,IAAI,CAAC,kBAAkB;YAAE,OAAO;QAE5C,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC/B,CAAC;IACD,gCAAY,GAAZ;QAEC,OAAO,IAAI,CAAC,aAAa,CAAC;IAC3B,CAAC;IACD,gCAAY,GAAZ;QAEC,OAAO,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;IACrC,CAAC;IACD,uBAAG,GAAH;QAEC,OAAO,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE,CAAC;IACjC,CAAC;IACD,0BAAM,GAAN,UAAO,IAAO;QAEb,IAAI,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAC7C,IAAI,KAAK,GAAG,CAAC,CAAC,EACd;YACC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;SACpC;IACF,CAAC;IACD,6BAAS,GAAT,UAAU,OAAe,EAAE,OAAY;QAEtC,IAAI,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE,IAAI,KAAK;YAAE,OAAO;QAC9C,IAAI,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,EAAO,CAAC;QACzC,IAAI,IAAI,IAAI,SAAS,EACrB;YACC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;YAC7B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC9B;IACF,CAAC;IAEF,gBAAC;AAAD,CAAC,AAhED,IAgEC"}}
