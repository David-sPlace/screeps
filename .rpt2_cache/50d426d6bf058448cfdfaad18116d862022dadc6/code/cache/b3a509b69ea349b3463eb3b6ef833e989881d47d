{"code":"import * as utils from \"utils/utils\";\r\nimport { RestockTask } from \"tasks/RestockTask\";\r\nimport { BuildTask } from \"tasks/BuildTask\";\r\nimport { UpgradeTask } from \"tasks/UpgradeTask\";\r\nimport { TaskQueue } from \"utils/TaskQueue\";\r\nvar TaskManager = /** @class */ (function () {\r\n    function TaskManager() {\r\n    }\r\n    TaskManager.initializeTaskQueue = function (roomName) {\r\n        var _this = this;\r\n        this._workerTasks.clear();\r\n        _.each(this._currentWorkerTasks, function (task) { return _this._workerTasks.addTask(task); });\r\n        console.log(\"TaskManager: taskqueue initialized with \" + this._workerTasks.waitingCount() + \" tasks.\");\r\n    };\r\n    TaskManager.processRoomTasks = function (roomName) {\r\n        this.initializeTaskQueue(roomName);\r\n        this.addAllRestockTasks(roomName);\r\n        this.addAllBuildTasks(roomName);\r\n        this.addUpgradeTask(roomName);\r\n        //console.log(`Task count: ${this._workerTasks.length()}`)\r\n        this.assignTasks(roomName);\r\n    };\r\n    TaskManager.assignTasks = function (roomName) {\r\n        //var roomMem = Game.rooms[roomName].memory as RoomMemory;\r\n        this.assignExistingTasks(roomName);\r\n        this.assignWaitingTasks(roomName);\r\n        this._currentWorkerTasks = this._workerTasks.runningTasks();\r\n        if (Game.time % 10 == 0) {\r\n            console.log(\"Waiting tasks: \" + this._workerTasks.waitingCount());\r\n            console.log(\"Active tasks: \" + this._currentWorkerTasks.length);\r\n        }\r\n    };\r\n    TaskManager.assignExistingTasks = function (roomName) {\r\n        //var handledTasks = this._workerTasks.tasksBeingHandled;\r\n        //console.log(\"Handled tasks: \" + handledTasks.length);\r\n        var _this = this;\r\n        _.each(this._workerTasks.runningTasks(), function (task) {\r\n            var creep = Game.creeps[task.assignedCreepName];\r\n            if (creep == undefined) //could have died\r\n             {\r\n                task.finished = true;\r\n                _this._workerTasks.remove(task);\r\n                return;\r\n            }\r\n            if (task.finished) {\r\n                _this._workerTasks.remove(task);\r\n                task.finish(creep.id, undefined);\r\n            }\r\n            else\r\n                task.continue(creep.id, undefined);\r\n        });\r\n    };\r\n    TaskManager.assignWaitingTasks = function (roomName) {\r\n        var idleCreeps = this.findIdleCreeps(roomName);\r\n        for (var id in idleCreeps) {\r\n            var creep = idleCreeps[id];\r\n            this._workerTasks.startNext(creep.id, undefined);\r\n        }\r\n        //_.each(idleCreeps, (creep) => this._workerTasks.startNext(creep.id, undefined));\r\n        _.each(idleCreeps, function (creep) {\r\n            var mem = creep.memory;\r\n            if (mem.idle) {\r\n                var spawn = Game.getObjectById(mem.spawnID);\r\n                creep.moveTo(spawn);\r\n            }\r\n        });\r\n    };\r\n    TaskManager.findIdleCreeps = function (roomName) {\r\n        return Game.rooms[roomName].find(FIND_MY_CREEPS, {\r\n            filter: function (creep) {\r\n                var mem = creep.memory;\r\n                return mem.idle;\r\n            }\r\n        });\r\n    };\r\n    TaskManager.addAllRestockTasks = function (roomName) {\r\n        var restockables = utils.getRestockables(roomName);\r\n        for (var id in restockables) {\r\n            this._workerTasks.addTask(new RestockTask(roomName, restockables[id]));\r\n        }\r\n        // _.each(utils.getRestockables(roomName), target =>\r\n        // {\r\n        // })\r\n    };\r\n    TaskManager.addAllBuildTasks = function (roomName) {\r\n        var _this = this;\r\n        var room = Game.rooms[roomName];\r\n        _.each(room.find(FIND_CONSTRUCTION_SITES), function (site) {\r\n            if (site.progressTotal > 0) {\r\n                _this._workerTasks.addTask(new BuildTask(roomName, site.id));\r\n            }\r\n        });\r\n    };\r\n    TaskManager.addUpgradeTask = function (roomName) {\r\n        var controller = Game.rooms[roomName].controller;\r\n        this._workerTasks.addTask(new UpgradeTask(roomName, controller.id));\r\n    };\r\n    TaskManager._workerTasks = new TaskQueue();\r\n    TaskManager._currentWorkerTasks = [];\r\n    return TaskManager;\r\n}());\r\nexport { TaskManager };\r\n//# sourceMappingURL=taskManager.js.map","map":{"version":3,"file":"taskManager.js","sourceRoot":"","sources":["src/taskManager.ts"],"names":[],"mappings":"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"}}
