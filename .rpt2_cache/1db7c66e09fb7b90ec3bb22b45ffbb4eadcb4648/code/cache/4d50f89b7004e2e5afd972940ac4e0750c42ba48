{"code":"import * as tslib_1 from \"tslib\";\r\nimport { StructureTask, StructureTaskInfo } from \"abstract/WorkerTask\";\r\nimport { StructureTaskQueue } from \"utils/taskQueue\";\r\nvar TowerRepairTaskInfo = /** @class */ (function (_super) {\r\n    tslib_1.__extends(TowerRepairTaskInfo, _super);\r\n    function TowerRepairTaskInfo(roomName, siteID) {\r\n        var _this = _super.call(this, roomName) || this;\r\n        _this.name = \"TowerRepair\";\r\n        _this.maxConcurrentCount = 5;\r\n        _this.repairSiteId = siteID;\r\n        return _this;\r\n    }\r\n    TowerRepairTaskInfo.maxHitPoints = 500000;\r\n    return TowerRepairTaskInfo;\r\n}(StructureTaskInfo));\r\nexport { TowerRepairTaskInfo };\r\nvar TowerAttackTaskInfo = /** @class */ (function (_super) {\r\n    tslib_1.__extends(TowerAttackTaskInfo, _super);\r\n    function TowerAttackTaskInfo(roomName, hostileID) {\r\n        var _this = _super.call(this, roomName) || this;\r\n        _this.name = \"TowerAttack\";\r\n        _this.maxConcurrentCount = 100;\r\n        _this.hostileID = hostileID;\r\n        return _this;\r\n    }\r\n    return TowerAttackTaskInfo;\r\n}(StructureTaskInfo));\r\nexport { TowerAttackTaskInfo };\r\nvar TowerAttackTask = /** @class */ (function (_super) {\r\n    tslib_1.__extends(TowerAttackTask, _super);\r\n    function TowerAttackTask(taskInfo) {\r\n        return _super.call(this, taskInfo) || this;\r\n    }\r\n    TowerAttackTask.prototype.doWork = function () {\r\n        var info = this.taskInfo;\r\n        var hostile = Game.getObjectById(info.hostileID);\r\n        // if(site.structureType == \"rampart\")  console.log(\"got a rampart!\");\r\n        var tower = Game.getObjectById(info.assignedTo);\r\n        //console.log(\"Tower: \" + tower.structureType + \" \" + tower.owner)\r\n        if (tower == null || hostile == undefined || hostile.hits == 0) {\r\n            this.taskInfo.finished = true;\r\n            return;\r\n        }\r\n        tower.attack(hostile);\r\n    };\r\n    TowerAttackTask.addTask = function (roomName) {\r\n        var room = Game.rooms[roomName];\r\n        var targets = room.find(FIND_HOSTILE_CREEPS)\r\n            .sort(function (a, b) { return a.hits - b.hits; });\r\n        for (var id in targets) {\r\n            var thing = targets[id];\r\n            var taskInfo = new TowerAttackTaskInfo(roomName, thing.id);\r\n            if (StructureTaskQueue.totalCount(roomName, taskInfo.name) < taskInfo.maxConcurrentCount) {\r\n                StructureTaskQueue.addPending(taskInfo, roomName);\r\n            }\r\n        }\r\n    };\r\n    return TowerAttackTask;\r\n}(StructureTask));\r\nexport { TowerAttackTask };\r\nvar TowerRepairTask = /** @class */ (function (_super) {\r\n    tslib_1.__extends(TowerRepairTask, _super);\r\n    function TowerRepairTask(taskInfo) {\r\n        return _super.call(this, taskInfo) || this;\r\n    }\r\n    TowerRepairTask.prototype.doWork = function () {\r\n        var info = this.taskInfo;\r\n        var site = Game.getObjectById(info.repairSiteId);\r\n        // if(site.structureType == \"rampart\")  console.log(\"got a rampart!\");\r\n        var tower = Game.getObjectById(info.assignedTo);\r\n        //console.log(\"Tower: \" + tower.structureType + \" \" + tower.owner)\r\n        if (tower == null || site == null) {\r\n            console.log(\"something went wrong\");\r\n        }\r\n        if (site.hits == site.hitsMax || tower.energy < tower.energyCapacity * .5) {\r\n            this.taskInfo.finished = true;\r\n            return;\r\n        }\r\n        tower.repair(site);\r\n    };\r\n    TowerRepairTask.addTask = function (roomName) {\r\n        var room = Game.rooms[roomName];\r\n        var targets = room.find(FIND_STRUCTURES)\r\n            .filter(function (structure) { return structure.hits < structure.hitsMax * .75 && structure.hits < TowerRepairTaskInfo.maxHitPoints; })\r\n            .sort(function (a, b) { return a.hits - b.hits; });\r\n        for (var id in targets) {\r\n            var thing = targets[id];\r\n            //if(thing.structureType == \"rampart\") console.log(\"found 1\");\r\n            var taskInfo = new TowerRepairTaskInfo(roomName, thing.id);\r\n            var existingTaskCount = StructureTaskQueue.totalCount(roomName, taskInfo.name);\r\n            if (existingTaskCount < taskInfo.maxConcurrentCount) {\r\n                StructureTaskQueue.addPending(taskInfo, roomName);\r\n            }\r\n        }\r\n    };\r\n    return TowerRepairTask;\r\n}(StructureTask));\r\nexport { TowerRepairTask };\r\n//# sourceMappingURL=TowerRepairTask.js.map","map":{"version":3,"file":"TowerRepairTask.js","sourceRoot":"","sources":["../src/tasks/TowerRepairTask.ts"],"names":[],"mappings":"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"}}
