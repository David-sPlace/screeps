{"code":"var HarvesterManager = /** @class */ (function () {\r\n    function HarvesterManager(home, creepCount) {\r\n        if (creepCount === void 0) { creepCount = 3; }\r\n        this.homeName = \"default\";\r\n        this.creepCount = 3;\r\n        this.homeName = home;\r\n        this.creepCount = creepCount;\r\n        this.creeps = new Array();\r\n    }\r\n    HarvesterManager.prototype.directHarvesters = function () {\r\n        this.creeps.forEach(function (creep) {\r\n            creep.Run();\r\n        });\r\n    };\r\n    HarvesterManager.prototype.cleanUpStaleHarvesters = function (period) {\r\n        if (Game.time % period == 0) {\r\n            for (var name_1 in this.creeps) {\r\n                if (!(name_1 in Game.creeps)) {\r\n                    delete this.creeps[name_1];\r\n                }\r\n            }\r\n        }\r\n    };\r\n    HarvesterManager.prototype.onLoop = function () {\r\n        this.directHarvesters();\r\n        this.trySpawnHarvester();\r\n        this.cleanUpStaleHarvesters(100);\r\n    };\r\n    HarvesterManager.prototype.trySpawnHarvester = function (bodyParts) {\r\n        if (bodyParts === void 0) { bodyParts = [WORK, CARRY, MOVE]; }\r\n        if (this.harvestersNeeded() === false)\r\n            return;\r\n        if (this.canAfford(TotalCreepCost(bodyParts)) === false) {\r\n            console.log(\"Can't afford to spawn harvester creeps! \");\r\n            return;\r\n        }\r\n        console.log(\"Spawning new harvester...\");\r\n        var harvester = new Harvester(this.homeName, 1);\r\n        harvester.Spawn();\r\n        this.creeps.push(harvester);\r\n    };\r\n    HarvesterManager.prototype.canAfford = function (totalCost) {\r\n        return Game.spawns[this.homeName].energy > totalCost;\r\n    };\r\n    HarvesterManager.prototype.harvestersNeeded = function () {\r\n        return true;\r\n    };\r\n    return HarvesterManager;\r\n}());\r\nexport { HarvesterManager };\r\nexport function BodyPartCost(part) {\r\n    switch (part) {\r\n        case MOVE: return 50;\r\n        case WORK: return 100;\r\n        case CARRY: return 50;\r\n        case ATTACK: return 80;\r\n        case RANGED_ATTACK: return 150;\r\n        case HEAL: return 250;\r\n        case TOUGH: return 10;\r\n        case CLAIM: return 600;\r\n        default: return 0;\r\n    }\r\n}\r\nexport function TotalCreepCost(parts) {\r\n    var total = 0;\r\n    parts.forEach(function (part) {\r\n        console.log(\"Getting cost for body part \" + part);\r\n        total += BodyPartCost(part);\r\n    });\r\n    console.log(\"Total Creep Cost: \" + total);\r\n    return total;\r\n}\r\nvar Harvester = /** @class */ (function () {\r\n    function Harvester(homeBase, count) {\r\n        this.name = \"Harvester_\" + homeBase + \"_\" + (count + 1);\r\n        this.home = homeBase;\r\n        console.log(\"Harvester::ctor: \" + homeBase + \", \" + this.name);\r\n    }\r\n    Harvester.prototype.Spawn = function () {\r\n        Game.spawns[this.home].spawnCreep([WORK, CARRY, MOVE], this.name);\r\n    };\r\n    Harvester.prototype.ID = function () {\r\n        var me = Game.creeps[this.name];\r\n        return me.id;\r\n    };\r\n    Harvester.prototype.Run = function () {\r\n        var me = Game.creeps[this.name];\r\n        if (me == undefined) {\r\n            console.log(\"Harvester::Run() - me is undefined\");\r\n            return;\r\n        }\r\n        if (me.carry.energy < me.carryCapacity) {\r\n            var sources = me.room.find(FIND_SOURCES);\r\n            if (me.harvest(sources[0]) == ERR_NOT_IN_RANGE) {\r\n                me.moveTo(sources[0]);\r\n            }\r\n        }\r\n        else {\r\n            if (me.transfer(Game.spawns[this.home], RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {\r\n                me.moveTo(Game.spawns[this.home]);\r\n            }\r\n        }\r\n    };\r\n    return Harvester;\r\n}());\r\nexport { Harvester };\r\n//# sourceMappingURL=harvester.js.map","map":{"version":3,"file":"harvester.js","sourceRoot":"","sources":["../src/roles/harvester.ts"],"names":[],"mappings":"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"}}
