{"code":"import * as utils from \"utils/utils\";\r\nimport { RestockTask } from \"tasks/RestockTask\";\r\nimport { BuildTask } from \"tasks/BuildTask\";\r\nimport { UpgradeTask } from \"tasks/UpgradeTask\";\r\nimport { TaskQueue } from \"utils/TaskQueue\";\r\nvar TaskManager = /** @class */ (function () {\r\n    function TaskManager() {\r\n    }\r\n    TaskManager.initializeTaskQueue = function (roomName) {\r\n        var _this = this;\r\n        var room = Game.rooms[roomName];\r\n        var roomMemory = room.memory;\r\n        var currentTasks = roomMemory.currentWorkerTasks;\r\n        this._taskQueue.clear();\r\n        _.each(currentTasks, function (task) { return _this._taskQueue.addItem(roomName, task); });\r\n        console.log(\"TaskManager: taskqueue initialized with \" + this._taskQueue.length() + \" tasks.\");\r\n    };\r\n    TaskManager.processRoomTasks = function (roomName) {\r\n        this.initializeTaskQueue(roomName);\r\n        this.addAllRestockTasks(roomName);\r\n        this.addAllBuildTasks(roomName);\r\n        this.addUpgradeTask(roomName);\r\n        this.assignTasks(roomName);\r\n    };\r\n    TaskManager.assignTasks = function (roomName) {\r\n        var roomMem = Game.rooms[roomName].memory;\r\n        this.assignExistingTasks(roomName);\r\n        this.assignWaitingTasks(roomName);\r\n        roomMem.currentWorkerTasks = this._taskQueue.tasksBeingHandled();\r\n        if (Game.time % 10 == 0) {\r\n            console.log(\"Waiting tasks: \" + this._taskQueue.length());\r\n            console.log(\"Active tasks: \" + roomMem.currentWorkerTasks.length);\r\n        }\r\n    };\r\n    TaskManager.assignExistingTasks = function (roomName) {\r\n        var _this = this;\r\n        _.each(this._taskQueue.tasksBeingHandled(), function (t) {\r\n            var task = t;\r\n            var creep = Game.creeps[task.assignedCreepName];\r\n            if (creep == undefined) //could have died\r\n             {\r\n                task.finished = true;\r\n                _this._taskQueue.finish(task);\r\n                return;\r\n            }\r\n            if (task.finished) {\r\n                _this._taskQueue.finish(task);\r\n                task.finish(creep.id, undefined);\r\n            }\r\n            else\r\n                task.continue(creep.id, undefined);\r\n        });\r\n    };\r\n    TaskManager.assignWaitingTasks = function (roomName) {\r\n        var _this = this;\r\n        var idleCreeps = this.findIdleCreeps(roomName);\r\n        _.each(idleCreeps, function (creep) { return _this._taskQueue.startNext(creep.id, undefined); });\r\n        _.each(idleCreeps, function (creep) {\r\n            var mem = creep.memory;\r\n            if (mem.idle) {\r\n                var spawn = Game.getObjectById(mem.spawnID);\r\n                creep.moveTo(spawn);\r\n            }\r\n        });\r\n    };\r\n    TaskManager.findIdleCreeps = function (roomName) {\r\n        return Game.rooms[roomName].find(FIND_MY_CREEPS, {\r\n            filter: function (creep) {\r\n                var mem = creep.memory;\r\n                return mem.idle;\r\n            }\r\n        });\r\n    };\r\n    TaskManager.addAllRestockTasks = function (roomName) {\r\n        var _this = this;\r\n        _.each(utils.getRestockables(roomName), function (target) {\r\n            _this._taskQueue.addItem(roomName, new RestockTask(roomName, target));\r\n        });\r\n    };\r\n    TaskManager.addAllBuildTasks = function (roomName) {\r\n        var _this = this;\r\n        var room = Game.rooms[roomName];\r\n        _.each(room.find(FIND_CONSTRUCTION_SITES), function (site) {\r\n            if (site.progressTotal > 0) {\r\n                _this._taskQueue.addItem(roomName, new BuildTask(roomName, site.id));\r\n            }\r\n        });\r\n    };\r\n    TaskManager.addUpgradeTask = function (roomName) {\r\n        var controller = Game.rooms[roomName].controller;\r\n        this._taskQueue.addItem(roomName, new UpgradeTask(roomName, controller.id));\r\n    };\r\n    TaskManager._taskQueue = new TaskQueue();\r\n    return TaskManager;\r\n}());\r\nexport { TaskManager };\r\n//# sourceMappingURL=taskManager.js.map","map":{"version":3,"file":"taskManager.js","sourceRoot":"","sources":["src/taskManager.ts"],"names":[],"mappings":"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"}}
