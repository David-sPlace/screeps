{"code":"import { UpgradeTask } from \"tasks/UpgradeTask\";\r\nimport { BuildTask } from \"tasks/BuildTask\";\r\nimport { m, HarvestSpot } from \"utils/memory\";\r\nimport { TaskQueue } from \"tasks/taskQueue\";\r\nimport { CreepFactory } from \"CreepFactory\";\r\nimport { RestockTask } from \"tasks/CollectTask\";\r\nexport var creeps;\r\nexport var creepCount = 0;\r\nexport var harvesters = [];\r\nexport var upgraders = [];\r\nvar RoomManager = /** @class */ (function () {\r\n    function RoomManager() {\r\n        this.roomTasks = new TaskQueue();\r\n        this.creeps = [];\r\n        this.creepCount = 0;\r\n        this.maxCreepsPerRoom = 5;\r\n    }\r\n    RoomManager.prototype.redirectIdleCreeps = function (roomName, idleCreeps) {\r\n        var spawn = this.findStructureSpawns(roomName)[0];\r\n        for (var _i = 0, idleCreeps_1 = idleCreeps; _i < idleCreeps_1.length; _i++) {\r\n            var creep = idleCreeps_1[_i];\r\n            var mem = creep.memory;\r\n            if (mem.idle) {\r\n                creep.moveTo(spawn);\r\n            }\r\n        }\r\n    };\r\n    RoomManager.prototype.Run = function (roomName) {\r\n        RoomManager.loadHarvestingSpots(roomName);\r\n        this.loadCreeps(roomName);\r\n        this.loadRoomTasks(roomName);\r\n        this.spawnMissingCreeps(roomName);\r\n        this.assignRoomTasks(roomName);\r\n    };\r\n    RoomManager.prototype.loadCreeps = function (roomName) {\r\n        //console.log(\"loading creeps\");\r\n        var room = Game.rooms[roomName];\r\n        creeps = room.find(FIND_MY_CREEPS);\r\n        creepCount = creeps.length;\r\n        //console.log(\"found \" + creepCount + \" creeps in this room.\");\r\n        for (var name_1 in creeps) {\r\n            var creep = creeps[name_1];\r\n            var mem = creep.memory;\r\n            if (mem.name === undefined || mem.name === null) {\r\n                console.log(\"resetting creep from previous revision\");\r\n                var memory = {\r\n                    idle: true,\r\n                    moving: false,\r\n                    // building: false,\r\n                    currentTask: \"\",\r\n                    name: name_1,\r\n                    preppingForTask: false,\r\n                };\r\n                creep.memory = memory;\r\n            }\r\n        }\r\n    };\r\n    RoomManager.prototype.findStructureSpawns = function (roomName, onlyNonSpawning) {\r\n        if (onlyNonSpawning === void 0) { onlyNonSpawning = true; }\r\n        var room = Game.rooms[roomName];\r\n        return room.find(FIND_MY_STRUCTURES, {\r\n            filter: function (structure) {\r\n                if (structure.structureType == STRUCTURE_SPAWN) {\r\n                    var spawner = structure;\r\n                    return onlyNonSpawning ? spawner.spawning === null : true;\r\n                }\r\n                return false;\r\n            }\r\n        });\r\n    };\r\n    RoomManager.prototype.spawnMissingCreeps = function (roomID) {\r\n        var spawns = this.findStructureSpawns(roomID);\r\n        var creepsNeeded = this.maxCreepsPerRoom - creeps.length;\r\n        if (creepsNeeded === 0)\r\n            return;\r\n        var creepsSpawned = 0;\r\n        _.each(spawns, function (spawn) {\r\n            if (creepsSpawned < creepsNeeded) {\r\n                var spawner = spawn;\r\n                if (CreepFactory.trySpawnCreep(spawner, [WORK, MOVE, MOVE, CARRY], 12 /* ROLE_UPGRADER */)) {\r\n                    creepsSpawned++;\r\n                }\r\n            }\r\n        });\r\n    };\r\n    RoomManager.initRoomMemory = function (roomName) {\r\n        var room = Game.rooms[roomName];\r\n        var rm = m().rooms[room.name];\r\n        // rm.controllerBeingUpgraded = false;\r\n        rm.harvestLocations = [];\r\n    };\r\n    RoomManager.prototype.assignExistingTasks = function (roomName) {\r\n        var room = Game.rooms[roomName];\r\n        //roomtasks should be in room memory...\r\n        var runningTasks = this.roomTasks.workingTasks();\r\n        //console.log(`processing ${runningTasks.length} existing tasks`);\r\n        for (var _i = 0, runningTasks_1 = runningTasks; _i < runningTasks_1.length; _i++) {\r\n            var runningTask = runningTasks_1[_i];\r\n            var task = runningTask;\r\n            var assignedCreepName = task.assignedCreepName;\r\n            creeps = room.find(FIND_MY_CREEPS, {\r\n                filter: function (creep) {\r\n                    return creep.name == assignedCreepName;\r\n                }\r\n            });\r\n            var creep = creeps[0];\r\n            //console.log(\"!!!!found \" + creep.name);\r\n            if (runningTask.finished) {\r\n                runningTask.finish(creep.id, undefined);\r\n                this.roomTasks.finish(runningTask);\r\n            }\r\n            else {\r\n                runningTask.continue(creep.id, undefined);\r\n            }\r\n        }\r\n    };\r\n    RoomManager.prototype.assignRoomTasks = function (roomName) {\r\n        this.assignExistingTasks(roomName);\r\n        var room = Game.rooms[roomName];\r\n        if (this.roomTasks.any() == false)\r\n            return;\r\n        var idleCreeps = room.find(FIND_MY_CREEPS, {\r\n            filter: function (creep) {\r\n                var mem = creep.memory;\r\n                return mem.idle;\r\n            }\r\n        });\r\n        // console.log(`Found ${idleCreeps.length} idle creeps.`)\r\n        for (var _i = 0, _a = idleCreeps.sort((function (a, b) {\r\n            if (a.name > b.name)\r\n                return 1;\r\n            if (b.name > a.name)\r\n                return -1;\r\n            return 0;\r\n        })); _i < _a.length; _i++) {\r\n            var creep = _a[_i];\r\n            this.roomTasks.startNext(roomName, creep.id, undefined);\r\n        }\r\n        this.redirectIdleCreeps(roomName, idleCreeps);\r\n    };\r\n    RoomManager.prototype.loadRoomTasks = function (roomName) {\r\n        this.checkForUpgradeTasks(roomName);\r\n        this.checkForRestockTasks(roomName);\r\n        this.checkForBuildTasks(roomName);\r\n    };\r\n    RoomManager.prototype.checkForRestockTasks = function (roomName) {\r\n        var targets = this.getRestockables(roomName);\r\n        if (targets.length > 0) {\r\n            for (var id in targets) {\r\n                var target = targets[id];\r\n                this.roomTasks.addItem(roomName, new RestockTask(roomName, target));\r\n            }\r\n        }\r\n    };\r\n    RoomManager.prototype.checkForBuildTasks = function (roomName) {\r\n        var room = Game.rooms[roomName];\r\n        var buildSites = room.find(FIND_CONSTRUCTION_SITES);\r\n        if (buildSites.length > 0) {\r\n            for (var id in buildSites) {\r\n                var site = buildSites[id];\r\n                if (site.progressTotal > 0) {\r\n                    this.roomTasks.addItem(roomName, new BuildTask(roomName, site.id));\r\n                }\r\n            }\r\n        }\r\n    };\r\n    RoomManager.prototype.checkForUpgradeTasks = function (roomName) {\r\n        var room = Game.rooms[roomName];\r\n        var controller = room.controller;\r\n        if (controller != null) {\r\n            this.roomTasks.addItem(room.name, new UpgradeTask(roomName, controller.id));\r\n        }\r\n        else {\r\n            console.log(\"room controller was null!\");\r\n        }\r\n    };\r\n    RoomManager.prototype.getRestockables = function (roomName) {\r\n        var room = Game.rooms[roomName];\r\n        return room.find(FIND_STRUCTURES, {\r\n            filter: function (structure) {\r\n                return (structure.structureType == STRUCTURE_EXTENSION || structure.structureType == STRUCTURE_SPAWN) &&\r\n                    structure.energy < structure.energyCapacity;\r\n            }\r\n        });\r\n    };\r\n    RoomManager.loadHarvestingSpots = function (roomName) {\r\n        var room = Game.rooms[roomName];\r\n        var roomMemory = room.memory;\r\n        if (roomMemory.harvestLocations.length > 0)\r\n            return;\r\n        var sources = room.find(FIND_SOURCES);\r\n        var possibles = [];\r\n        var spots = [];\r\n        for (var sourceID in sources) {\r\n            var source = sources[sourceID];\r\n            var sourcePosition = source.pos;\r\n            var right = room.getPositionAt(sourcePosition.x + 1, sourcePosition.y);\r\n            if (right != null)\r\n                possibles.push(new HarvestSpot(source.id, right));\r\n            var left = room.getPositionAt(sourcePosition.x - 1, sourcePosition.y);\r\n            if (left != null)\r\n                possibles.push(new HarvestSpot(source.id, left));\r\n            var top = room.getPositionAt(sourcePosition.x, sourcePosition.y - 1);\r\n            if (top != null)\r\n                possibles.push(new HarvestSpot(source.id, top));\r\n            var bot = room.getPositionAt(sourcePosition.x, sourcePosition.y + 1);\r\n            if (bot != null)\r\n                possibles.push(new HarvestSpot(source.id, bot));\r\n            var tr = room.getPositionAt(sourcePosition.x + 1, sourcePosition.y - 1);\r\n            if (tr != null)\r\n                possibles.push(new HarvestSpot(source.id, tr));\r\n            var tl = room.getPositionAt(sourcePosition.x - 1, sourcePosition.y - 1);\r\n            if (tl != null)\r\n                possibles.push(new HarvestSpot(source.id, tl));\r\n            var br = room.getPositionAt(sourcePosition.x + 1, sourcePosition.y + 1);\r\n            if (br != null)\r\n                possibles.push(new HarvestSpot(source.id, br));\r\n            var bl = room.getPositionAt(sourcePosition.x - 1, sourcePosition.y + 1);\r\n            if (bl != null)\r\n                possibles.push(new HarvestSpot(source.id, bl));\r\n        }\r\n        for (var id in possibles) {\r\n            var possible = possibles[id];\r\n            if (possible.spot !== null) {\r\n                var found = possible.spot.lookFor(LOOK_TERRAIN);\r\n                if (found != \"wall\") {\r\n                    spots.push(possible);\r\n                }\r\n            }\r\n        }\r\n        roomMemory.harvestLocations = spots;\r\n    };\r\n    RoomManager.GetClosestOpenHarvestingLocation = function (roomName, creepID) {\r\n        var creep = Game.getObjectById(creepID);\r\n        var room = Game.rooms[roomName];\r\n        var roomMemory = room.memory;\r\n        if (roomMemory.harvestLocations == []) {\r\n            RoomManager.loadHarvestingSpots(roomName);\r\n        }\r\n        var harvestingSpots = roomMemory.harvestLocations;\r\n        //console.log(\"Found \" + harvestingSpots.length + \" harvesting spots\")\r\n        _.sortBy(harvestingSpots, function (s) { return creep.pos.getRangeTo(s.spot); });\r\n        for (var id in harvestingSpots) {\r\n            var spot = harvestingSpots[id];\r\n            if (spot.assignedTo == null) {\r\n                console.log(\"assigning spot to \" + creep.name);\r\n                spot.assignedTo = creep.name;\r\n                return spot;\r\n            }\r\n            else if (spot.assignedTo == creep.name) {\r\n                return spot;\r\n            }\r\n        }\r\n        return undefined;\r\n    };\r\n    return RoomManager;\r\n}());\r\nexport { RoomManager };\r\n//# sourceMappingURL=RoomManager.js.map","map":{"version":3,"file":"RoomManager.js","sourceRoot":"","sources":["src/RoomManager.ts"],"names":[],"mappings":"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"}}
