{"code":"import { RoomManager } from \"RoomManager\";\r\nvar CreepTask = /** @class */ (function () {\r\n    function CreepTask(roomName) {\r\n        this.started = false;\r\n        this.finished = false;\r\n        this.assignedCreepName = \"\";\r\n        this.roomName = roomName;\r\n    }\r\n    CreepTask.prototype.start = function (creepID, context) {\r\n        console.log(creepID + \" is starting task \" + this.name);\r\n        var creep = Game.getObjectById(creepID);\r\n        var creepMem = creep.memory;\r\n        this.assignedCreepName = creep.name;\r\n        creepMem.currentTask = this.name;\r\n        this.started = true;\r\n        creepMem.idle = false;\r\n    };\r\n    CreepTask.prototype.continue = function (creepID, context) {\r\n        var creep = Game.getObjectById(creepID);\r\n        if (creep === undefined || creep.memory === undefined || this.assignedCreepName == \"\") {\r\n            console.log(\"cant continue, don't have a creep. - completing task.\");\r\n            this.finish(creepID, context);\r\n            return;\r\n        }\r\n        var creepMemory = creep.memory;\r\n        if (creep.carry.energy == 0) {\r\n            creepMemory.preppingForTask = true;\r\n        }\r\n        if (creepMemory.preppingForTask) {\r\n            this.collect(this.roomName, creep.id, \"Build\", function () { creepMemory.preppingForTask = false; });\r\n        }\r\n        else {\r\n            this.doWork(creepID, context);\r\n        }\r\n        // else\r\n        // {\r\n        // \tconsole.log(`processing existing task for ${creep.name}`)\r\n        // }\r\n        //console.log(\"found \" + creep.name);\r\n    };\r\n    CreepTask.prototype.finish = function (creepID, context) {\r\n        var creep = Game.getObjectById(creepID);\r\n        if (creep !== undefined) {\r\n            creep.say(\"ðŸš§Finished!\");\r\n            var mem = creep.memory;\r\n            mem.idle = true;\r\n            mem.preppingForTask = false;\r\n            mem.currentTask = \"\";\r\n        }\r\n        this.finished = true;\r\n        //var timeTaken = Game.time - this.timeRequested\r\n        //console.log(`Time taken for ${this.name}: ${timeTaken}`);\r\n    };\r\n    CreepTask.prototype.collect = function (roomName, creepID, sayText, energyFullCallback) {\r\n        var creep = Game.getObjectById(creepID);\r\n        var spot = RoomManager.GetClosestOpenHarvestingLocation(roomName, creepID);\r\n        if (creep.carry.energy < creep.carryCapacity) {\r\n            creep.say(\"\\uD83D\\uDD04\" + sayText);\r\n            if (spot != undefined) {\r\n                var test = Game.getObjectById(spot.sourceID);\r\n                if (creep.harvest(test) == ERR_NOT_IN_RANGE) {\r\n                    creep.moveTo(spot.spot.x, spot.spot.y, { visualizePathStyle: { stroke: '#ffaa00' } });\r\n                }\r\n            }\r\n            else {\r\n                console.log(\"spot was undefined...\");\r\n            }\r\n        }\r\n        else {\r\n            console.log(spot.assignedTo + \" has been unassigned.\");\r\n            spot.assignedTo = null;\r\n            energyFullCallback();\r\n        }\r\n    };\r\n    return CreepTask;\r\n}());\r\nexport { CreepTask };\r\n//# sourceMappingURL=CreepTask.js.map","map":{"version":3,"file":"CreepTask.js","sourceRoot":"","sources":["../src/tasks/CreepTask.ts"],"names":[],"mappings":"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"}}
