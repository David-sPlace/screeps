{"code":"import { UpgradeTask, TaskQueue } from \"queue\";\r\nimport { roleToString, m } from \"utils/MemUtils\";\r\nexport var creeps;\r\nexport var creepCount = 0;\r\nexport var harvesters = [];\r\nexport var upgraders = [];\r\nvar RoomManager = /** @class */ (function () {\r\n    function RoomManager() {\r\n        this.roomTasks = new TaskQueue();\r\n        this.creeps = [];\r\n        this.creepCount = 0;\r\n        this.harvesters = [];\r\n        this.builders = [];\r\n        this.builders_per_room = 1;\r\n        this.harvesters_per_room = 3;\r\n        this.upgraders_per_room = 2;\r\n    }\r\n    RoomManager.initRoomMemory = function (room) {\r\n        var rm = m().rooms[room.name];\r\n        rm.controllerBeingUpgraded = false;\r\n    };\r\n    RoomManager.prototype.processRoomTasks = function (room) {\r\n        if (this.roomTasks.any() == false)\r\n            return;\r\n        var idleCreeps = room.find(FIND_MY_CREEPS, {\r\n            filter: function (creep) {\r\n                var mem = creep.memory;\r\n                return mem.idle;\r\n            }\r\n        });\r\n        for (var _i = 0, idleCreeps_1 = idleCreeps; _i < idleCreeps_1.length; _i++) {\r\n            var creep = idleCreeps_1[_i];\r\n            this.roomTasks.startNext(creep, undefined);\r\n        }\r\n        var runningTasks = this.roomTasks.processing();\r\n        for (var _a = 0, runningTasks_1 = runningTasks; _a < runningTasks_1.length; _a++) {\r\n            var runningTask = runningTasks_1[_a];\r\n            if (runningTask.finished) {\r\n                this.roomTasks.finish(runningTask);\r\n            }\r\n        }\r\n    };\r\n    RoomManager.prototype.loadRoomTasks = function (room, roomMemory) {\r\n        console.log(\"loading tasks...\");\r\n        var controller = room.controller;\r\n        if (controller != null) {\r\n            console.log(\"ticks to downgrade: \" + controller.ticksToDowngrade);\r\n            console.log(\"room controller being upgraded: \" + roomMemory.controllerBeingUpgraded);\r\n            if (controller.ticksToDowngrade < 20000 &&\r\n                roomMemory.controllerBeingUpgraded == false) {\r\n                var upgradeTask = new UpgradeTask(room, controller);\r\n                this.roomTasks.addItem(upgradeTask);\r\n            }\r\n        }\r\n        else {\r\n            console.log(\"room controller was null!\");\r\n        }\r\n        console.log(\"Task count: \" + this.roomTasks.length());\r\n    };\r\n    RoomManager.prototype.Run = function (room, roomMemory) {\r\n        console.log(\"Running room.\");\r\n        this.loadCreeps(room);\r\n        this.loadRoomTasks(room, roomMemory);\r\n        this.spawnMissingHarvesters(room);\r\n        this.spawnMissingUpgraders(room);\r\n        this.loadCreeps(room);\r\n        //build any missing creeps\r\n        this.processRoomTasks(room);\r\n    };\r\n    RoomManager.prototype.loadCreeps = function (room) {\r\n        //console.log(\"loading creeps\");\r\n        creeps = room.find(FIND_MY_CREEPS);\r\n        creepCount = creeps.length;\r\n        //console.log(\"found \" + creepCount + \" creeps in this room.\");\r\n        harvesters = room.find(FIND_MY_CREEPS, {\r\n            filter: function (creep) {\r\n                var creepMemory = cm(creep);\r\n                return creepMemory.role === 3 /* ROLE_MINER */;\r\n            }\r\n        });\r\n        upgraders = room.find(FIND_MY_CREEPS, {\r\n            filter: function (creep) {\r\n                var creepMemory = cm(creep);\r\n                return creepMemory.role === 12 /* ROLE_UPGRADER */;\r\n            }\r\n        });\r\n    };\r\n    RoomManager.prototype.getSpawns = function (room) {\r\n        return room.find(FIND_MY_STRUCTURES, {\r\n            filter: function (structure) {\r\n                if (structure.structureType == STRUCTURE_SPAWN) {\r\n                    var spawner = structure;\r\n                    return spawner.spawning === null;\r\n                }\r\n                return false;\r\n            }\r\n        });\r\n    };\r\n    RoomManager.prototype.spawnMissingUpgraders = function (room) {\r\n        var _this = this;\r\n        var spawns = this.getSpawns(room);\r\n        var upgradersNeeded = this.upgraders_per_room - upgraders.length;\r\n        if (upgradersNeeded === 0)\r\n            return;\r\n        var upgradersSpawned = 0;\r\n        if (upgradersNeeded > 0) {\r\n            console.log(\"need to spawn \" + upgradersNeeded + \" upgraders for room \" + room.name);\r\n        }\r\n        _.each(spawns, function (spawn) {\r\n            if (upgradersSpawned < upgradersNeeded) {\r\n                var spawner = spawn;\r\n                if (_this.tryToSpawnCreep(spawner, [WORK, MOVE, MOVE, CARRY], 12 /* ROLE_UPGRADER */)) {\r\n                    upgradersSpawned++;\r\n                }\r\n            }\r\n        });\r\n    };\r\n    RoomManager.prototype.spawnMissingHarvesters = function (room) {\r\n        var _this = this;\r\n        var spawns = this.getSpawns(room);\r\n        var harvestersNeeded = this.harvesters_per_room - harvesters.length;\r\n        if (harvestersNeeded === 0)\r\n            return;\r\n        var harvestersSpawned = 0;\r\n        if (harvestersNeeded > 0) {\r\n            console.log(\"harvester count: \" + harvesters.length);\r\n            console.log(\"need to spawn \" + harvestersNeeded + \" harvesters for room \" + room.name);\r\n        }\r\n        _.each(spawns, function (spawn) {\r\n            if (harvestersSpawned < harvestersNeeded) {\r\n                //console.log(\"Spawning a harvester!\")\r\n                var spawner = spawn;\r\n                if (_this.tryToSpawnCreep(spawner, [WORK, MOVE, MOVE, CARRY], 3 /* ROLE_MINER */)) {\r\n                    harvestersSpawned++;\r\n                }\r\n                // else\r\n                // {\r\n                // \t  console.log(\"Couldn't spawn a harvester!\")\r\n                // }\r\n            }\r\n        });\r\n    };\r\n    RoomManager.prototype.tryToSpawnCreep = function (spawn, bodyParts, role) {\r\n        var spawned = false;\r\n        if (!spawned) {\r\n            if (this.spawnCreep(spawn, bodyParts, role) === OK) {\r\n                spawned = true;\r\n            }\r\n        }\r\n        return spawned;\r\n    };\r\n    RoomManager.prototype.spawnCreep = function (spawn, bodyParts, role) {\r\n        var uuid = Memory.uuid;\r\n        var creepName = spawn.room.name + \"-\" + roleToString(role) + \"-\" + (uuid + 1);\r\n        var status = spawn.spawnCreep(bodyParts, creepName, { dryRun: true });\r\n        status = _.isString(status) ? OK : status;\r\n        if (status === OK) {\r\n            Memory.uuid = uuid + 1;\r\n            var creepName_1 = spawn.room.name + \"-\" + roleToString(role) + \"-\" + uuid;\r\n            var properties = {\r\n                idle: true,\r\n                moving: false,\r\n                building: false,\r\n                name: creepName_1,\r\n                gathering: false,\r\n                role: role,\r\n                roleString: roleToString(role),\r\n                isUpgradingController: false\r\n            };\r\n            console.log(\"Started creating new creep: \" + creepName_1);\r\n            status = spawn.spawnCreep(bodyParts, creepName_1, { memory: properties });\r\n            return _.isString(status) ? OK : status;\r\n        }\r\n        else {\r\n            console.log(\"Coudldn't spawn: \" + errorToString(status));\r\n            // if (Config.ENABLE_DEBUG_MODE && status !== ERR_NOT_ENOUGH_ENERGY)\r\n            // {\r\n            // \tlog.info(\"Failed creating new creep: \" + status);\r\n            // }\r\n            return status;\r\n        }\r\n    };\r\n    return RoomManager;\r\n}());\r\nexport { RoomManager };\r\nexport function cm(creep) {\r\n    return creep.memory;\r\n}\r\nexport var CantBuildReasons;\r\n(function (CantBuildReasons) {\r\n    CantBuildReasons[CantBuildReasons[\"NotTheOwner\"] = -1] = \"NotTheOwner\";\r\n    CantBuildReasons[CantBuildReasons[\"NameAlreadyExists\"] = -3] = \"NameAlreadyExists\";\r\n    CantBuildReasons[CantBuildReasons[\"BuildingBusy\"] = -4] = \"BuildingBusy\";\r\n    CantBuildReasons[CantBuildReasons[\"NotEnoughEnergy\"] = -6] = \"NotEnoughEnergy\";\r\n    CantBuildReasons[CantBuildReasons[\"InvalidArguments\"] = -10] = \"InvalidArguments\";\r\n    CantBuildReasons[CantBuildReasons[\"RCLNotHighEnough\"] = -14] = \"RCLNotHighEnough\";\r\n})(CantBuildReasons || (CantBuildReasons = {}));\r\nexport function errorToString(job) {\r\n    switch (job) {\r\n        case CantBuildReasons.NotTheOwner: return \"You don't own this building...?\";\r\n        case CantBuildReasons.NameAlreadyExists: return \"Name already exists...\";\r\n        case CantBuildReasons.BuildingBusy: return \"Name already exists...\";\r\n        case CantBuildReasons.NotEnoughEnergy: return \"You can't afford it!\";\r\n        case CantBuildReasons.InvalidArguments: return \"Invalid arguments passed to spawnCreep\";\r\n        case CantBuildReasons.RCLNotHighEnough: return \"Your RCL level is not high enough\";\r\n        default: return \"unknown error\";\r\n    }\r\n}\r\n//# sourceMappingURL=RoomManager.js.map","map":{"version":3,"file":"RoomManager.js","sourceRoot":"","sources":["src/RoomManager.ts"],"names":[],"mappings":"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"}}
