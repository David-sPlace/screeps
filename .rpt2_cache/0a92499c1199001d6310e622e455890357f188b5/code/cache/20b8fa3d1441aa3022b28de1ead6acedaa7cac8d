{"code":"import * as utils from \"utils/utils\";\r\nvar CreepFactory = /** @class */ (function () {\r\n    function CreepFactory() {\r\n    }\r\n    CreepFactory.trySpawnCreep = function (spawn, bodyParts, role) {\r\n        var spawned = false;\r\n        if (!spawned) {\r\n            if (this.spawnCreep(spawn, bodyParts, role) === OK) {\r\n                spawned = true;\r\n            }\r\n        }\r\n        return spawned;\r\n    };\r\n    CreepFactory.spawnCreep = function (spawn, bodyParts, role) {\r\n        var uuid = Memory.uuid;\r\n        var creepName = spawn.room.name + \"-\" + utils.getRoleString(role) + \"-\" + (uuid + 1);\r\n        var status = spawn.spawnCreep(bodyParts, creepName, { dryRun: true });\r\n        status = _.isString(status) ? OK : status;\r\n        while (status == -3) {\r\n            uuid++;\r\n            creepName = spawn.room.name + \"-\" + utils.getRoleString(role) + \"-\" + (uuid + 1);\r\n            status = spawn.spawnCreep(bodyParts, creepName, { dryRun: true });\r\n            status = _.isString(status) ? OK : status;\r\n        }\r\n        if (status === OK && spawn.spawning == null) {\r\n            Memory.uuid = uuid + 1;\r\n            var creepName_1 = spawn.room.name + \"-\" + utils.getRoleString(role) + \"-\" + uuid;\r\n            var memory = {\r\n                spawnID: spawn.id,\r\n                idle: true,\r\n                currentTask: \"\",\r\n                alive: true,\r\n                role: role\r\n            };\r\n            console.log(\"Started creating new creep: \" + creepName_1);\r\n            status = spawn.spawnCreep(bodyParts, creepName_1, { memory: memory });\r\n            return _.isString(status) ? OK : status;\r\n        }\r\n        else {\r\n            //console.log(\"Coudldn't spawn: \" + Utils.errorToString(status))\r\n            // if (Config.ENABLE_DEBUG_MODE && status !== ERR_NOT_ENOUGH_ENERGY)\r\n            // {\r\n            // \tlog.info(\"Failed creating new creep: \" + status);\r\n            // }\r\n            return status;\r\n        }\r\n    };\r\n    return CreepFactory;\r\n}());\r\nexport { CreepFactory };\r\n//# sourceMappingURL=CreepFactory.js.map","map":{"version":3,"file":"CreepFactory.js","sourceRoot":"","sources":["src/CreepFactory.ts"],"names":[],"mappings":"AAEA,OAAO,KAAK,KAAK,MAAM,aAAa,CAAA;AAEpC;IAAA;IA4DA,CAAC;IA1DO,0BAAa,GAApB,UAAqB,KAAqB,EAAE,SAA6B,EAAE,IAAe;QAEzF,IAAI,OAAO,GAAY,KAAK,CAAC;QAC7B,IAAI,CAAC,OAAO,EACZ;YACC,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,SAAS,EAAE,IAAI,CAAC,KAAK,EAAE,EAClD;gBACC,OAAO,GAAG,IAAI,CAAC;aACf;SACD;QACD,OAAO,OAAO,CAAC;IAEhB,CAAC;IACc,uBAAU,GAAzB,UAA0B,KAAqB,EAAE,SAA6B,EAAE,IAAe;QAE9F,IAAI,IAAI,GAAW,MAAM,CAAC,IAAI,CAAC;QAC/B,IAAI,SAAS,GAAW,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG,GAAG,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC;QAC7F,IAAI,MAAM,GAAoB,KAAK,CAAC,UAAU,CAAC,SAAS,EAAE,SAAS,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;QACvF,MAAM,GAAG,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC;QAE1C,OAAM,MAAM,IAAI,CAAC,CAAC,EAAC;YAClB,IAAI,EAAE,CAAC;YACP,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG,GAAG,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC;YACjF,MAAM,GAAG,KAAK,CAAC,UAAU,CAAC,SAAS,EAAE,SAAS,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;YAClE,MAAM,GAAG,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC;SAC1C;QAED,IAAI,MAAM,KAAK,EAAE,IAAI,KAAK,CAAC,QAAQ,IAAI,IAAI,EAC3C;YACC,MAAM,CAAC,IAAI,GAAG,IAAI,GAAG,CAAC,CAAC;YACvB,IAAM,WAAS,GAAW,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG,GAAG,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC;YAEzF,IAAM,MAAM,GACZ;gBACC,OAAO,EAAE,KAAK,CAAC,EAAE;gBACjB,IAAI,EAAE,IAAI;gBACV,WAAW,EAAE,EAAE;gBACf,KAAK,EAAE,IAAI;gBACX,IAAI,EAAE,IAAI;aACV,CAAC;YAEF,OAAO,CAAC,GAAG,CAAC,8BAA8B,GAAG,WAAS,CAAC,CAAC;YAExD,MAAM,GAAG,KAAK,CAAC,UAAU,CAAC,SAAS,EAAE,WAAS,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;YAEpE,OAAO,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC;SACxC;aAED;YACC,gEAAgE;YAChE,oEAAoE;YACpE,IAAI;YACJ,qDAAqD;YACrD,IAAI;YAEJ,OAAO,MAAM,CAAC;SACd;IACF,CAAC;IACF,mBAAC;AAAD,CAAC,AA5DD,IA4DC"}}
