{"code":"import { HarvestSpot } from \"utils/memory\";\r\nimport { WorkerTaskQueue } from \"utils/taskQueue\";\r\nimport { CreepFactory } from \"CreepFactory\";\r\nimport * as utils from \"utils/utils\";\r\nimport { TaskManager } from \"taskManager\";\r\nexport var creeps;\r\nexport var creepCount = 0;\r\nexport var harvesters = [];\r\nexport var upgraders = [];\r\nvar RoomManager = /** @class */ (function () {\r\n    function RoomManager() {\r\n        this.creeps = [];\r\n        this.creepCount = 0;\r\n        this.maxCreepsPerRoom = 12;\r\n        this.taskManager = new TaskManager();\r\n    }\r\n    RoomManager.prototype.Run = function (roomName) {\r\n        //console.log(\"Running room \" + roomName);\r\n        this.workerTasks = new WorkerTaskQueue();\r\n        RoomManager.loadHarvestingSpots(roomName);\r\n        this.loadCreeps(roomName);\r\n        this.spawnMissingWorkers(roomName);\r\n        TaskManager.processRoomTasks(roomName);\r\n    };\r\n    RoomManager.prototype.loadCreeps = function (roomName) {\r\n        var room = Game.rooms[roomName];\r\n        creeps = room.find(FIND_MY_CREEPS);\r\n        var spawn = room.find(FIND_MY_SPAWNS)[0];\r\n        creepCount = creeps.length;\r\n        for (var id in creeps) {\r\n            var creep = creeps[id];\r\n            var mem = creep.memory;\r\n            if (mem.alive === undefined || mem.alive == false) {\r\n                console.log(\"resetting creep from previous revision\");\r\n                var memory = {\r\n                    spawnID: spawn.id,\r\n                    idle: true,\r\n                    alive: true,\r\n                    //moving: false,\r\n                    currentTask: \"\",\r\n                    preppingForTask: false,\r\n                };\r\n                creep.memory = memory;\r\n            }\r\n        }\r\n    };\r\n    RoomManager.prototype.spawnMissingWorkers = function (roomID) {\r\n        var _this = this;\r\n        var spawns = utils.findStructureSpawns(roomID);\r\n        var creepsNeeded = this.maxCreepsPerRoom - creeps.length;\r\n        if (creepsNeeded === 0)\r\n            return;\r\n        var creepsSpawned = 0;\r\n        _.each(spawns, function (spawn) {\r\n            if (creepsSpawned < creepsNeeded) {\r\n                var spawner = spawn;\r\n                if (CreepFactory.trySpawnCreep(spawner, _this.getWorkerBodyParts(roomID), 2 /* ROLE_WORKER */)) {\r\n                    creepsSpawned++;\r\n                }\r\n            }\r\n        });\r\n    };\r\n    RoomManager.prototype.getWorkerBodyParts = function (roomID) {\r\n        var energyLevel = this.getRoomEnergyLevel(roomID);\r\n        //console.log(\"Room energy level: \" + energyLevel)\r\n        switch (energyLevel) {\r\n            case 1: return [WORK, MOVE, MOVE, CARRY];\r\n            //case 2: return [WORK, WORK, MOVE, MOVE, CARRY, CARRY];\r\n            case 2: return [WORK, WORK, WORK, MOVE, MOVE, MOVE, CARRY, CARRY, CARRY];\r\n            //case 3: return [WORK, WORK, WORK, WORK, MOVE, MOVE, MOVE, MOVE, CARRY, CARRY, CARRY, CARRY]\r\n            case 3: return [WORK, WORK, WORK, WORK, MOVE, MOVE, MOVE, MOVE, MOVE, CARRY, CARRY, CARRY];\r\n            default: return [WORK, MOVE, MOVE, CARRY];\r\n        }\r\n    };\r\n    RoomManager.prototype.getRoomEnergyLevel = function (roomID) {\r\n        var room = Game.rooms[roomID];\r\n        var cap = room.energyCapacityAvailable;\r\n        if (cap < 500)\r\n            return 1;\r\n        else if (cap <= 800)\r\n            return 2;\r\n        else\r\n            return 3;\r\n    };\r\n    RoomManager.loadHarvestingSpots = function (roomName) {\r\n        var room = Game.rooms[roomName];\r\n        var roomMemory = room.memory;\r\n        if (roomMemory.harvestLocations.length > 0)\r\n            return;\r\n        var sources = room.find(FIND_SOURCES);\r\n        var possibles = [];\r\n        var spots = [];\r\n        for (var sourceID in sources) {\r\n            var source = sources[sourceID];\r\n            var sourcePosition = source.pos;\r\n            var right = room.getPositionAt(sourcePosition.x + 1, sourcePosition.y);\r\n            if (right != null)\r\n                possibles.push(new HarvestSpot(source.id, right));\r\n            var left = room.getPositionAt(sourcePosition.x - 1, sourcePosition.y);\r\n            if (left != null)\r\n                possibles.push(new HarvestSpot(source.id, left));\r\n            var top = room.getPositionAt(sourcePosition.x, sourcePosition.y - 1);\r\n            if (top != null)\r\n                possibles.push(new HarvestSpot(source.id, top));\r\n            var bot = room.getPositionAt(sourcePosition.x, sourcePosition.y + 1);\r\n            if (bot != null)\r\n                possibles.push(new HarvestSpot(source.id, bot));\r\n            var tr = room.getPositionAt(sourcePosition.x + 1, sourcePosition.y - 1);\r\n            if (tr != null)\r\n                possibles.push(new HarvestSpot(source.id, tr));\r\n            var tl = room.getPositionAt(sourcePosition.x - 1, sourcePosition.y - 1);\r\n            if (tl != null)\r\n                possibles.push(new HarvestSpot(source.id, tl));\r\n            var br = room.getPositionAt(sourcePosition.x + 1, sourcePosition.y + 1);\r\n            if (br != null)\r\n                possibles.push(new HarvestSpot(source.id, br));\r\n            var bl = room.getPositionAt(sourcePosition.x - 1, sourcePosition.y + 1);\r\n            if (bl != null)\r\n                possibles.push(new HarvestSpot(source.id, bl));\r\n        }\r\n        for (var id in possibles) {\r\n            var possible = possibles[id];\r\n            if (possible.pos !== null) {\r\n                var found = possible.pos.lookFor(LOOK_TERRAIN);\r\n                if (found != \"wall\") {\r\n                    spots.push(possible);\r\n                }\r\n            }\r\n        }\r\n        roomMemory.harvestLocations = spots;\r\n    };\r\n    RoomManager.GetClosestOrAssignedHarvestLocation = function (roomName, creepID) {\r\n        var creep = Game.getObjectById(creepID);\r\n        var room = Game.rooms[roomName];\r\n        var roomMemory = room.memory;\r\n        if (roomMemory.harvestLocations == []) {\r\n            console.log(\"this should never happen...\");\r\n            RoomManager.loadHarvestingSpots(roomName);\r\n        }\r\n        var harvestingSpots = roomMemory.harvestLocations.filter(function (spot) {\r\n            var source = Game.getObjectById(spot.sourceID);\r\n            return source.energy > 0;\r\n        });\r\n        //console.log(\"Found \" + harvestingSpots.length + \" harvesting spots\")\r\n        //_.sortByAll(harvestingSpots, s => creep.pos.getRangeTo(s.spot))\r\n        var assignedSpot = harvestingSpots.filter(function (spot) {\r\n            return spot.assignedTo == creep.name;\r\n        })[0];\r\n        if (assignedSpot !== undefined)\r\n            return assignedSpot;\r\n        else {\r\n            var openSpots = harvestingSpots.filter(function (spot) {\r\n                return spot.assignedTo == null;\r\n            });\r\n            _.sortBy(openSpots, function (spot) {\r\n                return creep.pos.getRangeTo(spot.pos.x, spot.pos.y);\r\n            }).reverse();\r\n            if (openSpots == undefined)\r\n                return undefined;\r\n            var firstOpen = openSpots[0];\r\n            if (firstOpen == undefined)\r\n                return undefined;\r\n            firstOpen.assignedTo = creep.name;\r\n            return firstOpen;\r\n        }\r\n    };\r\n    return RoomManager;\r\n}());\r\nexport { RoomManager };\r\n//# sourceMappingURL=RoomManager.js.map","map":{"version":3,"file":"RoomManager.js","sourceRoot":"","sources":["src/RoomManager.ts"],"names":[],"mappings":"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"}}
