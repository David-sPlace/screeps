{"code":"import * as tslib_1 from \"tslib\";\r\nimport { WorkerTask, WorkerTaskInfo } from \"abstract/WorkerTask\";\r\nimport { WorkerTaskQueue } from \"utils/TaskQueue\";\r\nvar UpgradeTaskInfo = /** @class */ (function (_super) {\r\n    tslib_1.__extends(UpgradeTaskInfo, _super);\r\n    function UpgradeTaskInfo(roomName, controllerID) {\r\n        var _this = _super.call(this, roomName) || this;\r\n        _this.wingDing = \"\\uD83C\\uDF87\";\r\n        _this.name = \"Upgrade\";\r\n        _this.maxConcurrentCount = 4;\r\n        _this.controllerID = controllerID;\r\n        return _this;\r\n    }\r\n    return UpgradeTaskInfo;\r\n}(WorkerTaskInfo));\r\nexport { UpgradeTaskInfo };\r\nvar FillTowerTaskInfo = /** @class */ (function (_super) {\r\n    tslib_1.__extends(FillTowerTaskInfo, _super);\r\n    function FillTowerTaskInfo(roomName, controllerID) {\r\n        var _this = _super.call(this, roomName) || this;\r\n        _this.wingDing = \"\\uD83D\\uDC31\\u200D\\uD83D\\uDC09\";\r\n        _this.name = \"FillTower\";\r\n        _this.maxConcurrentCount = 1;\r\n        _this.towerID = controllerID;\r\n        return _this;\r\n    }\r\n    return FillTowerTaskInfo;\r\n}(WorkerTaskInfo));\r\nexport { FillTowerTaskInfo };\r\nvar ChargeRampartTaskInfo = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ChargeRampartTaskInfo, _super);\r\n    function ChargeRampartTaskInfo(roomName, controllerID) {\r\n        var _this = _super.call(this, roomName) || this;\r\n        _this.wingDing = \"\\uD83C\\uDF87\";\r\n        _this.name = \"ChargeRampart\";\r\n        _this.maxConcurrentCount = 1;\r\n        _this.rampartID = controllerID;\r\n        return _this;\r\n    }\r\n    return ChargeRampartTaskInfo;\r\n}(WorkerTaskInfo));\r\nexport { ChargeRampartTaskInfo };\r\nvar ChargeRampartTask = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ChargeRampartTask, _super);\r\n    function ChargeRampartTask(taskInfo) {\r\n        var _this = _super.call(this, taskInfo) || this;\r\n        _this.taskInfo = taskInfo;\r\n        return _this;\r\n    }\r\n    ChargeRampartTask.prototype.doWork = function () {\r\n        //console.log(\"Upgrade task: do work: \"+ this.taskInfo.assignedCreepName);\r\n        var rampart = Game.getObjectById(this.taskInfo.rampartID);\r\n        var creep = Game.creeps[this.taskInfo.assignedCreepName];\r\n        //console.log(\"controller: \" + controller.id);\r\n        if (creep.repair(rampart) == ERR_NOT_IN_RANGE && creep.carry.energy > 0) {\r\n            creep.moveTo(rampart, { visualizePathStyle: { stroke: '#ffffff' } });\r\n        }\r\n        else if (creep.carry.energy == 0) {\r\n            this.taskInfo.finished = true;\r\n            return;\r\n        }\r\n    };\r\n    ChargeRampartTask.addRepairTask = function (roomName) {\r\n        var room = Game.rooms[roomName];\r\n        var targets = room.find(FIND_MY_STRUCTURES).filter(function (t) { return t.structureType == \"rampart\" && t.hits < 2000000; });\r\n        var mem = room.memory;\r\n        mem.test = targets;\r\n        //console.log(\"rampart targets: \" + targets.length)\r\n        targets.sort(function (a, b) { return a.hits - b.hits; });\r\n        for (var id in targets) {\r\n            var thing = targets[id];\r\n            var taskInfo = new ChargeRampartTaskInfo(roomName, thing.id);\r\n            var existingTaskCount = WorkerTaskQueue.totalCount(roomName, taskInfo.name);\r\n            if (existingTaskCount < taskInfo.maxConcurrentCount) {\r\n                //console.log(\"Adding fill tower task\")\r\n                WorkerTaskQueue.addPendingTask(taskInfo, roomName);\r\n            }\r\n        }\r\n    };\r\n    return ChargeRampartTask;\r\n}(WorkerTask));\r\nexport { ChargeRampartTask };\r\nvar FillTowerTask = /** @class */ (function (_super) {\r\n    tslib_1.__extends(FillTowerTask, _super);\r\n    function FillTowerTask(taskInfo) {\r\n        var _this = _super.call(this, taskInfo) || this;\r\n        _this.taskInfo = taskInfo;\r\n        return _this;\r\n    }\r\n    FillTowerTask.prototype.doWork = function () {\r\n        //console.log(\"Upgrade task: do work: \"+ this.taskInfo.assignedCreepName);\r\n        var tower = Game.getObjectById(this.taskInfo.towerID);\r\n        var creep = Game.creeps[this.taskInfo.assignedCreepName];\r\n        //console.log(\"controller: \" + controller.id);\r\n        if (creep.transfer(tower, RESOURCE_ENERGY) == ERR_NOT_IN_RANGE && creep.carry.energy > 0) {\r\n            creep.moveTo(tower, { visualizePathStyle: { stroke: '#ffffff' } });\r\n        }\r\n        else if (creep.carry.energy == 0 || tower.energy == tower.energyCapacity) {\r\n            this.taskInfo.finished = true;\r\n            return;\r\n        }\r\n    };\r\n    FillTowerTask.addRepairTask = function (roomName) {\r\n        var room = Game.rooms[roomName];\r\n        var towers = room.find(FIND_MY_STRUCTURES).filter(function (t) { return t.structureType == \"tower\" && t.energy < t.energyCapacity; });\r\n        var mem = room.memory;\r\n        mem.test = towers;\r\n        //console.log(\"tower targets: \" + towers.length)\r\n        towers.sort(function (a, b) { return a.energy - b.energy; });\r\n        for (var id in towers) {\r\n            var thing = towers[id];\r\n            var taskInfo = new FillTowerTaskInfo(roomName, thing.id);\r\n            var existingTaskCount = WorkerTaskQueue.totalCount(roomName, taskInfo.name);\r\n            if (existingTaskCount < taskInfo.maxConcurrentCount) {\r\n                //console.log(\"Adding tower fill task\")\r\n                WorkerTaskQueue.addPendingTask(taskInfo, roomName);\r\n            }\r\n        }\r\n    };\r\n    return FillTowerTask;\r\n}(WorkerTask));\r\nexport { FillTowerTask };\r\nvar UpgradeTask = /** @class */ (function (_super) {\r\n    tslib_1.__extends(UpgradeTask, _super);\r\n    function UpgradeTask(taskInfo) {\r\n        var _this = _super.call(this, taskInfo) || this;\r\n        _this.taskInfo = taskInfo;\r\n        return _this;\r\n    }\r\n    UpgradeTask.prototype.doWork = function () {\r\n        //console.log(\"Upgrade task: do work: \"+ this.taskInfo.assignedCreepName);\r\n        var controller = Game.getObjectById(this.taskInfo.controllerID);\r\n        var creep = Game.creeps[this.taskInfo.assignedCreepName];\r\n        //console.log(\"controller: \" + controller.id);\r\n        if (creep.upgradeController(controller) == ERR_NOT_IN_RANGE && creep.carry.energy > 0) {\r\n            creep.moveTo(controller, { visualizePathStyle: { stroke: '#ffffff' } });\r\n        }\r\n        else if (creep.carry.energy == 0) {\r\n            this.taskInfo.finished = true;\r\n            return;\r\n        }\r\n    };\r\n    UpgradeTask.addUpgradeTasks = function (roomName) {\r\n        var controller = Game.rooms[roomName].controller;\r\n        var taskInfo = new UpgradeTaskInfo(roomName, controller.id);\r\n        var existingTaskCount = WorkerTaskQueue.totalCount(roomName, taskInfo.name);\r\n        // console.log(\"there are \" + existingTaskCount + \" existing upgrade tasks.\");\r\n        var maxConcurrentCount = taskInfo.maxConcurrentCount;\r\n        var tasksNeeded = maxConcurrentCount - existingTaskCount;\r\n        //console.log(\"Upgrade tasks needed: \" + tasksNeeded);\r\n        for (var i = 0; i < tasksNeeded; i++) {\r\n            WorkerTaskQueue.addPendingTask(taskInfo, roomName);\r\n        }\r\n    };\r\n    return UpgradeTask;\r\n}(WorkerTask));\r\nexport { UpgradeTask };\r\n//# sourceMappingURL=UpgradeTask.js.map","map":{"version":3,"file":"UpgradeTask.js","sourceRoot":"","sources":["../src/tasks/UpgradeTask.ts"],"names":[],"mappings":"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"}}
