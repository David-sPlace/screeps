{"code":"import { roleHarvester, roleUpgrader } from \"roles/role_harvester\";\r\nexport var creeps;\r\nexport var creepCount = 0;\r\nexport var harvesters = [];\r\nexport var upgraders = [];\r\nexport var CantBuildReasons;\r\n(function (CantBuildReasons) {\r\n    CantBuildReasons[CantBuildReasons[\"NotTheOwner\"] = -1] = \"NotTheOwner\";\r\n    CantBuildReasons[CantBuildReasons[\"NameAlreadyExists\"] = -3] = \"NameAlreadyExists\";\r\n    CantBuildReasons[CantBuildReasons[\"BuildingBusy\"] = -4] = \"BuildingBusy\";\r\n    CantBuildReasons[CantBuildReasons[\"NotEnoughEnergy\"] = -6] = \"NotEnoughEnergy\";\r\n    CantBuildReasons[CantBuildReasons[\"InvalidArguments\"] = -10] = \"InvalidArguments\";\r\n    CantBuildReasons[CantBuildReasons[\"RCLNotHighEnough\"] = -14] = \"RCLNotHighEnough\";\r\n})(CantBuildReasons || (CantBuildReasons = {}));\r\nexport function errorToString(job) {\r\n    switch (job) {\r\n        case CantBuildReasons.NotTheOwner: return \"You don't own this building...?\";\r\n        case CantBuildReasons.NameAlreadyExists: return \"Name already exists...\";\r\n        case CantBuildReasons.BuildingBusy: return \"Name already exists...\";\r\n        case CantBuildReasons.NotEnoughEnergy: return \"You can't afford it!\";\r\n        case CantBuildReasons.InvalidArguments: return \"Invalid arguments passed to spawnCreep\";\r\n        case CantBuildReasons.RCLNotHighEnough: return \"Your RCL level is not high enough\";\r\n        default: return \"unknown error\";\r\n    }\r\n}\r\nvar RoomManager = /** @class */ (function () {\r\n    function RoomManager() {\r\n        this.creeps = [];\r\n        this.creepCount = 0;\r\n        this.harvesters = [];\r\n        this.builders = [];\r\n        this.builders_per_room = 1;\r\n        this.harvesters_per_room = 3;\r\n        this.upgraders_per_room = 10;\r\n    }\r\n    RoomManager.prototype.Run = function (room) {\r\n        this.loadCreeps(room);\r\n        this.spawnMissingHarvesters(room);\r\n        this.spawnMissingUpgraders(room);\r\n        this.loadCreeps(room);\r\n        //build any missing creeps\r\n        _.each(creeps, function (creep) {\r\n            console.log(\"running roles for \" + creep.name);\r\n            var creepMemory = cm(creep);\r\n            if (creepMemory.role === 3 /* ROLE_MINER */) {\r\n                roleHarvester.default_run(creep);\r\n            }\r\n            else if (creepMemory.role === 12 /* ROLE_UPGRADER */) {\r\n                roleUpgrader.default_run(creep);\r\n            }\r\n            else {\r\n                console.log(creepMemory.roleString + \" does not have a default action!!!\");\r\n            }\r\n        });\r\n    };\r\n    RoomManager.prototype.loadCreeps = function (room) {\r\n        console.log(\"loading creeps\");\r\n        creeps = room.find(FIND_MY_CREEPS);\r\n        creepCount = creeps.length;\r\n        console.log(\"found \" + creepCount + \" creeps in this room.\");\r\n        harvesters = room.find(FIND_MY_CREEPS, {\r\n            filter: function (creep) {\r\n                var creepMemory = cm(creep);\r\n                return creepMemory.role === 3 /* ROLE_MINER */;\r\n            }\r\n        });\r\n        upgraders = room.find(FIND_MY_CREEPS, {\r\n            filter: function (creep) {\r\n                var creepMemory = cm(creep);\r\n                return creepMemory.role === 12 /* ROLE_UPGRADER */;\r\n            }\r\n        });\r\n    };\r\n    RoomManager.prototype.getSpawns = function (room) {\r\n        return room.find(FIND_MY_STRUCTURES, {\r\n            filter: function (structure) {\r\n                if (structure.structureType == STRUCTURE_SPAWN) {\r\n                    var spawner = structure;\r\n                    return spawner.spawning === null;\r\n                }\r\n                return false;\r\n            }\r\n        });\r\n    };\r\n    RoomManager.prototype.spawnMissingUpgraders = function (room) {\r\n        var _this = this;\r\n        var spawns = this.getSpawns(room);\r\n        var upgradersNeeded = this.upgraders_per_room - upgraders.length;\r\n        if (upgradersNeeded === 0)\r\n            return;\r\n        var upgradersSpawned = 0;\r\n        console.log(\"need to spawn \" + upgradersNeeded + \" upgraders for room \" + room.name);\r\n        _.each(spawns, function (spawn) {\r\n            if (upgradersSpawned < upgradersNeeded) {\r\n                var spawner = spawn;\r\n                if (_this.tryToSpawnCreep(spawner, [WORK, MOVE, MOVE, CARRY], 12 /* ROLE_UPGRADER */)) {\r\n                    upgradersSpawned++;\r\n                }\r\n            }\r\n        });\r\n    };\r\n    RoomManager.prototype.spawnMissingHarvesters = function (room) {\r\n        var _this = this;\r\n        var spawns = this.getSpawns(room);\r\n        var harvestersNeeded = this.harvesters_per_room - harvesters.length;\r\n        if (harvestersNeeded === 0)\r\n            return;\r\n        var harvestersSpawned = 0;\r\n        console.log(\"need to spawn \" + harvestersNeeded + \" harvesters for room \" + room.name);\r\n        _.each(spawns, function (spawn) {\r\n            if (harvestersSpawned < harvestersNeeded) {\r\n                console.log(\"Spawning a harvester!\");\r\n                var spawner = spawn;\r\n                if (_this.tryToSpawnCreep(spawner, [WORK, MOVE, MOVE, CARRY], 3 /* ROLE_MINER */)) {\r\n                    harvestersSpawned++;\r\n                }\r\n                else {\r\n                    console.log(\"Couldn't spawn a harvester!\");\r\n                }\r\n            }\r\n        });\r\n    };\r\n    RoomManager.prototype.tryToSpawnCreep = function (spawn, bodyParts, role) {\r\n        var spawned = false;\r\n        if (!spawned) {\r\n            if (this.spawnCreep(spawn, bodyParts, role) === OK) {\r\n                spawned = true;\r\n            }\r\n        }\r\n        return spawned;\r\n    };\r\n    RoomManager.prototype.spawnCreep = function (spawn, bodyParts, role) {\r\n        var uuid = Memory.uuid;\r\n        var creepName = spawn.room.name + \"-\" + roleToString(role) + \"-\" + (uuid + 1);\r\n        var status = spawn.spawnCreep(bodyParts, creepName, { dryRun: true });\r\n        status = _.isString(status) ? OK : status;\r\n        if (status === OK) {\r\n            Memory.uuid = uuid + 1;\r\n            var creepName_1 = spawn.room.name + \"-\" + roleToString(role) + \"-\" + uuid;\r\n            var properties = {\r\n                moving: false,\r\n                building: false,\r\n                name: creepName_1,\r\n                gathering: false,\r\n                role: role,\r\n                roleString: roleToString(role),\r\n                isUpgradingController: false\r\n            };\r\n            console.log(\"Started creating new creep: \" + creepName_1);\r\n            status = spawn.spawnCreep(bodyParts, creepName_1, { memory: properties });\r\n            return _.isString(status) ? OK : status;\r\n        }\r\n        else {\r\n            console.log(\"Coudldn't spawn: \" + errorToString(status));\r\n            // if (Config.ENABLE_DEBUG_MODE && status !== ERR_NOT_ENOUGH_ENERGY)\r\n            // {\r\n            // \tlog.info(\"Failed creating new creep: \" + status);\r\n            // }\r\n            return status;\r\n        }\r\n    };\r\n    return RoomManager;\r\n}());\r\nexport { RoomManager };\r\nexport function roleToString(job) {\r\n    switch (job) {\r\n        case 2 /* ROLE_BUILDER */: return \"ROLE_BUILDER\";\r\n        case 3 /* ROLE_MINER */: return \"ROLE_MINER\";\r\n        case 4 /* ROLE_MINEHAULER */: return \"ROLE_MINEHAULER\";\r\n        case 5 /* ROLE_HEALER */: return \"ROLE_HEALER\";\r\n        case 6 /* ROLE_FIGHTER */: return \"ROLE_FIGHTER\";\r\n        case 7 /* ROLE_RANGER */: return \"ROLE_RANGER\";\r\n        case 8 /* ROLE_CLAIMER */: return \"ROLE_CLAIMER\";\r\n        case 9 /* ROLE_REMOTEMINER */: return \"ROLE_REMOTEMINER\";\r\n        case 10 /* ROLE_REMOTEMINEHAULER */: return \"ROLE_REMOTEMINEHAULER\";\r\n        case 11 /* ROLE_CUSTOMCONTROL */: return \"ROLE_CUSTOMCONTROL\";\r\n        case 12 /* ROLE_UPGRADER */: return \"ROLE_UPGRADER\";\r\n        default: return \"unknown role\";\r\n    }\r\n}\r\nexport function cm(creep) {\r\n    return creep.memory;\r\n}\r\n//# sourceMappingURL=RoomManager.js.map","map":{"version":3,"file":"RoomManager.js","sourceRoot":"","sources":["src/RoomManager.ts"],"names":[],"mappings":"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"}}
