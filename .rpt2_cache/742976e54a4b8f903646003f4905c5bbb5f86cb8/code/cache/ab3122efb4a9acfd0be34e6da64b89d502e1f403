{"code":"import * as utils from \"utils/utils\";\r\nimport { Restock } from \"tasks/creep/Restock\";\r\nimport { Build } from \"tasks/creep/Build\";\r\nimport { Upgrade } from \"tasks/creep/Upgrade\";\r\nimport { CreepTaskQueue } from \"tasks/CreepTaskQueue\";\r\nimport { StructureTaskQueue } from \"tasks/StructureTaskQueue\";\r\n// import { RepairTask } from \"tasks/creep/Repair\";\r\nimport { FillTower } from \"tasks/creep/FillTower\";\r\nimport { TowerRepair } from \"tasks/structure/TowerRepair\";\r\nimport { TowerAttack } from \"tasks/structure/TowerAttack\";\r\nimport { Mine } from \"tasks/creep/Mine\";\r\nimport { TransferEnergy } from \"tasks/creep/TransferEnergy\";\r\nimport { PickupEnergy } from \"tasks/creep/PickupEnergy\";\r\nimport { TaskState } from \"tasks/Task\";\r\nvar TaskManager = /** @class */ (function () {\r\n    function TaskManager() {\r\n    }\r\n    TaskManager.continueActiveRequests = function (roomName) {\r\n        var activeWorkerTasks = CreepTaskQueue.allActive(roomName);\r\n        for (var assignedName in activeWorkerTasks) {\r\n            var taskInfo = activeWorkerTasks[assignedName];\r\n            if (taskInfo.assignedTo != assignedName)\r\n                taskInfo.assignedTo = assignedName;\r\n            if (taskInfo.name == \"Restock\")\r\n                (new Restock(taskInfo)).run();\r\n            else if (taskInfo.name == \"Upgrade\")\r\n                (new Upgrade(taskInfo)).run();\r\n            else if (taskInfo.name == \"Build\")\r\n                (new Build(taskInfo)).run();\r\n            //else if (taskInfo.name == \"Repair\") (new RepairTask(taskInfo), roomName).run()\r\n            else if (taskInfo.name == \"FillTower\")\r\n                (new FillTower(taskInfo)).run();\r\n            else if (taskInfo.name == \"Mine\")\r\n                (new Mine(taskInfo)).run();\r\n            else if (taskInfo.name == \"TransferEnergy\")\r\n                (new TransferEnergy(taskInfo)).run();\r\n            else if (taskInfo.name == \"PickupEnergy\")\r\n                (new PickupEnergy(taskInfo)).run();\r\n            if (Game.creeps[taskInfo.assignedTo] == undefined)\r\n                taskInfo.status = TaskState.FINISHED;\r\n            if (taskInfo.status == TaskState.FINISHED) {\r\n                delete activeWorkerTasks[assignedName];\r\n                return;\r\n            }\r\n        }\r\n        var activeStructureTasks = StructureTaskQueue.allActive(roomName);\r\n        for (var buildingID in activeStructureTasks) {\r\n            var structureTaskInfo = activeStructureTasks[buildingID];\r\n            if (structureTaskInfo.assignedTo != buildingID)\r\n                structureTaskInfo.assignedTo = buildingID;\r\n            if (structureTaskInfo.name == \"TowerRepair\")\r\n                (new TowerRepair(structureTaskInfo)).run();\r\n            if (structureTaskInfo.name == \"TowerAttack\")\r\n                (new TowerAttack(structureTaskInfo)).run();\r\n        }\r\n    };\r\n    TaskManager.addBuildingTasks = function (roomName) {\r\n        TowerAttack.addTask(roomName);\r\n        //TowerRepair.addTask(roomName);\r\n        //console.log(\"finished building tasks\")\r\n    };\r\n    TaskManager.addWorkerTasks = function (roomName) {\r\n        //PickupEnergy.addRequests(roomName);\r\n        Restock.addRequests(roomName);\r\n        Mine.addRequests(roomName);\r\n        //TransferEnergy.addRequests(roomName);\r\n        //FillTower.addRequests(roomName);\r\n        //Build.addRequests(roomName);\r\n        Upgrade.addRequests(roomName);\r\n    };\r\n    TaskManager.processRoomTasks = function (roomName) {\r\n        this.addBuildingTasks(roomName);\r\n        this.addWorkerTasks(roomName);\r\n        this.assignPendingRequests(roomName);\r\n        this.continueActiveRequests(roomName);\r\n    };\r\n    TaskManager.assignPendingRequests = function (roomName) {\r\n        //console.log(\"assignPendingTasks\");\r\n        var idleCreeps = utils.findIdleCreeps(roomName);\r\n        for (var id in idleCreeps) {\r\n            var creep = idleCreeps[id];\r\n            if (creep != undefined) {\r\n                var mem = creep.memory;\r\n                if (mem.role == 2 /* ROLE_MINER */) {\r\n                    console.log(\"found a miner: \" + creep.name);\r\n                    console.log(\"idle: \" + mem.idle);\r\n                }\r\n                if (mem.idle) {\r\n                    CreepTaskQueue.start(creep.name, roomName);\r\n                }\r\n            }\r\n        }\r\n        var idleStructures = utils.findIdleSmartStructures(roomName);\r\n        for (var id in idleStructures) {\r\n            var structure = idleStructures[id];\r\n            if (structure != undefined) {\r\n                var memory = structure.memory;\r\n                if (memory.idle) {\r\n                    StructureTaskQueue.startTask(structure.id, roomName);\r\n                }\r\n            }\r\n        }\r\n        // let stillIdleCreeps = utils.findIdleCreeps(roomName);\r\n        // for (let id in stillIdleCreeps)\r\n        // {\r\n        // \tlet creep = stillIdleCreeps[id];\r\n        // \tlet m = creep.memory as CreepMemory\r\n        // \tcreep.moveTo(Game.getObjectById(m.spawnID) as StructureSpawn)\r\n        // }\r\n    };\r\n    return TaskManager;\r\n}());\r\nexport { TaskManager };\r\n//# sourceMappingURL=taskManager.js.map","map":{"version":3,"file":"taskManager.js","sourceRoot":"","sources":["src/taskManager.ts"],"names":[],"mappings":"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"}}
