{"code":"import * as tslib_1 from \"tslib\";\r\nimport { CreepTask } from \"tasks/CreepTask\";\r\nimport { CreepTaskRequest } from \"tasks/CreepTaskRequest\";\r\nimport { CreepTaskQueue } from \"../CreepTaskQueue\";\r\nimport * as utils from \"utils/utils\";\r\nvar TransferEnergyRequest = /** @class */ (function (_super) {\r\n    tslib_1.__extends(TransferEnergyRequest, _super);\r\n    function TransferEnergyRequest(roomName, transferToID, transferFromID) {\r\n        var _this = _super.call(this, roomName, \"\\u2196\", transferToID) || this;\r\n        _this.priority = 2;\r\n        _this.name = \"TransferEnergy\";\r\n        _this.requiredRole = 3 /* ROLE_WORKER */;\r\n        _this.maxConcurrentCount = 1;\r\n        _this.transferFromID = transferFromID;\r\n        return _this;\r\n    }\r\n    return TransferEnergyRequest;\r\n}(CreepTaskRequest));\r\nexport { TransferEnergyRequest };\r\nvar TransferEnergy = /** @class */ (function (_super) {\r\n    tslib_1.__extends(TransferEnergy, _super);\r\n    function TransferEnergy(taskInfo) {\r\n        return _super.call(this, taskInfo) || this;\r\n    }\r\n    TransferEnergy.prototype.doWork = function () {\r\n        // let requestInfo = this.request as TransferEnergyRequest;\r\n        // let to = Game.getObjectById(requestInfo.targetID) as StructureContainer | StructureStorage;\r\n        // let from = Game.getObjectById(requestInfo.transferFromID) as StructureContainer | StructureStorage;\r\n        // let creep = Game.creeps[this.request.assignedTo] as Creep;\r\n        // let cMem = creep.memory as CreepMemory;\r\n        // if(cMem.preppingForTask)\r\n        // {\r\n        // \tif (creep.withdraw(from, RESOURCE_ENERGY) == ERR_NOT_IN_RANGE)\r\n        // \t{\r\n        // \t\tcreep.moveTo(from, { visualizePathStyle: { stroke: '#ffaa00' } });\r\n        // \t}\r\n        // }\r\n        // else\r\n        // {\r\n        // \tlet result = creep.transfer(to, RESOURCE_ENERGY);\r\n        // \tif(result == ERR_NOT_IN_RANGE)\r\n        // \t{\r\n        // \t\tcreep.moveTo(to, { visualizePathStyle: { stroke: '#ffaa00' } });\r\n        // \t}\r\n        // \telse if(result == OK){\r\n        // \t\tthis.finish();\r\n        // \t}\r\n        // }\r\n    };\r\n    TransferEnergy.addRequests = function (roomName) {\r\n        var from;\r\n        var to;\r\n        if (roomName = \"E41S4\") {\r\n            var containers = utils.findAllContainers(roomName);\r\n            for (var key in containers) {\r\n                var value = containers[key];\r\n                //from\r\n                if (value.pos.x == 26 && value.pos.y == 26)\r\n                    from = value;\r\n                else\r\n                    to = value;\r\n            }\r\n            if (from === undefined || to === undefined) {\r\n                throw \"something didn't work (TransferEnergy.addRequests)\";\r\n            }\r\n            if (from.store.energy == 0 || to.store.energy == to.storeCapacity) {\r\n                return;\r\n            }\r\n            var request = new TransferEnergyRequest(roomName, to.id, from.id);\r\n            var existingTaskCount = CreepTaskQueue.totalCount(roomName, request.name);\r\n            if (existingTaskCount < request.maxConcurrentCount) {\r\n                CreepTaskQueue.addPending(request);\r\n            }\r\n        }\r\n    };\r\n    return TransferEnergy;\r\n}(CreepTask));\r\nexport { TransferEnergy };\r\n//# sourceMappingURL=TransferEnergy.js.map","map":{"version":3,"file":"TransferEnergy.js","sourceRoot":"","sources":["../../src/tasks/creep/TransferEnergy.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAC5C,OAAO,EAAE,gBAAgB,EAAE,MAAM,wBAAwB,CAAC;AAE1D,OAAO,EAAE,cAAc,EAAE,MAAM,mBAAmB,CAAC;AACnD,OAAO,KAAK,KAAK,MAAM,aAAa,CAAA;AAGpC;IAA2C,iDAAgB;IAO1D,+BAAY,QAAgB,EAAE,YAAoB,EAAE,cAAsB;QAA1E,YAEC,kBAAM,QAAQ,EAAE,QAAG,EAAE,YAAY,CAAC,SAElC;QATD,cAAQ,GAAW,CAAC,CAAC;QACrB,UAAI,GAAW,gBAAgB,CAAC;QAChC,kBAAY,uBAAoC;QAChD,wBAAkB,GAAW,CAAC,CAAC;QAK9B,KAAI,CAAC,cAAc,GAAG,cAAc,CAAC;;IACtC,CAAC;IACF,4BAAC;AAAD,CAAC,AAZD,CAA2C,gBAAgB,GAY1D;;AACD;IAAoC,0CAAS;IA6D5C,wBAAY,QAA0B;eAErC,kBAAM,QAAQ,CAAC;IAChB,CAAC;IA9DS,+BAAM,GAAhB;QAEC,2DAA2D;QAC3D,8FAA8F;QAC9F,sGAAsG;QACtG,6DAA6D;QAC7D,0CAA0C;QAC1C,2BAA2B;QAC3B,IAAI;QACJ,kEAAkE;QAClE,KAAK;QACL,uEAAuE;QACvE,KAAK;QACL,IAAI;QACJ,OAAO;QACP,IAAI;QACJ,qDAAqD;QACrD,kCAAkC;QAClC,KAAK;QACL,qEAAqE;QACrE,KAAK;QACL,0BAA0B;QAC1B,mBAAmB;QACnB,KAAK;QACL,IAAI;IAEL,CAAC;IACM,0BAAW,GAAlB,UAAmB,QAAgB;QAElC,IAAI,IAAoC,CAAC;QACzC,IAAI,EAAkC,CAAC;QACvC,IAAI,QAAQ,GAAG,OAAO,EACtB;YAEC,IAAI,UAAU,GAAG,KAAK,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;YACnD,KAAK,IAAM,GAAG,IAAI,UAAU,EAC5B;gBACC,IAAI,KAAK,GAAG,UAAU,CAAC,GAAG,CAAuB,CAAC;gBAClD,MAAM;gBACN,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE;oBAAE,IAAI,GAAG,KAAK,CAAA;;oBACnD,EAAE,GAAG,KAAK,CAAC;aAChB;YACD,IAAI,IAAI,KAAK,SAAS,IAAI,EAAE,KAAK,SAAS,EAC1C;gBACC,MAAM,oDAAoD,CAAA;aAC1D;YACD,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,MAAM,IAAI,EAAE,CAAC,aAAa,EACjE;gBACC,OAAO;aACP;YACD,IAAI,OAAO,GAAG,IAAI,qBAAqB,CAAC,QAAQ,EAAE,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;YAClE,IAAI,iBAAiB,GAAG,cAAc,CAAC,UAAU,CAAC,QAAQ,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC;YAE1E,IAAI,iBAAiB,GAAG,OAAO,CAAC,kBAAkB,EAClD;gBACC,cAAc,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;aACnC;SACD;IACF,CAAC;IAMF,qBAAC;AAAD,CAAC,AAlED,CAAoC,SAAS,GAkE5C"}}
