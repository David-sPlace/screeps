{"code":"import * as tslib_1 from \"tslib\";\r\nimport { CreepTask } from \"tasks/CreepTask\";\r\nimport { CreepTaskRequest } from \"tasks/CreepTaskRequest\";\r\nimport { CreepTaskQueue } from \"../CreepTaskQueue\";\r\nimport * as utils from \"utils/utils\";\r\nimport { TaskState, Task } from \"../Task\";\r\nvar RestockRequest = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RestockRequest, _super);\r\n    function RestockRequest(roomName, restockID) {\r\n        var _this = _super.call(this, roomName, \"\\uD83D\\uDED2\", restockID) || this;\r\n        _this.priority = 1;\r\n        _this.name = \"Restock\";\r\n        _this.requiredRole = 3 /* ROLE_WORKER */;\r\n        _this.maxConcurrentCount = 3;\r\n        return _this;\r\n    }\r\n    return RestockRequest;\r\n}(CreepTaskRequest));\r\nexport { RestockRequest };\r\nvar Restock = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Restock, _super);\r\n    function Restock(taskInfo) {\r\n        return _super.call(this, taskInfo) || this;\r\n    }\r\n    Restock.prototype.init = function () {\r\n        _super.prototype.init.call(this);\r\n        this.request.status = TaskState.START;\r\n        console.log(\"status after init\" + Task.toStatus(this.request.status));\r\n    };\r\n    Restock.prototype.start = function () {\r\n        _super.prototype.start.call(this);\r\n        this.request.status = TaskState.PREP;\r\n        console.log(\"status after start \" + this.request.status);\r\n    };\r\n    Restock.prototype.prep = function () {\r\n        _super.prototype.prep.call(this);\r\n        if (this.request.status == TaskState.FINISHED) {\r\n            console.log(\"status was finished in restock prep\");\r\n            return;\r\n        }\r\n        var creep = Game.creeps[this.request.assignedTo];\r\n        this.collectFromContainer(this.request.roomName, creep.id);\r\n        if (creep.carry.energy == creep.carryCapacity) {\r\n            this.request.status = TaskState.IN_PROGRESS;\r\n        }\r\n        else {\r\n            this.request.status = TaskState.PREP;\r\n        }\r\n        console.log(\"status after prep \" + this.request.status);\r\n    };\r\n    Restock.prototype.continue = function () {\r\n        _super.prototype.continue.call(this);\r\n        if (this.request.status == TaskState.FINISHED)\r\n            return;\r\n        var creep = Game.creeps[this.request.assignedTo];\r\n        var targets = creep.room.find(FIND_STRUCTURES, {\r\n            filter: function (structure) {\r\n                return (structure.structureType == STRUCTURE_EXTENSION || structure.structureType == STRUCTURE_SPAWN) &&\r\n                    structure.energy < structure.energyCapacity;\r\n            }\r\n        }).sort(function (structureA, structureB) { return creep.pos.getRangeTo(structureA) - creep.pos.getRangeTo(structureB); });\r\n        console.log(\"restock targets: \" + targets.length);\r\n        if (targets.length == 0) {\r\n            this.request.status = TaskState.FINISHED;\r\n        }\r\n        else {\r\n            var result = creep.transfer(targets[0], RESOURCE_ENERGY);\r\n            var target = targets[0];\r\n            if (result == ERR_NOT_IN_RANGE) {\r\n                creep.moveTo(target, { visualizePathStyle: { stroke: '#ffffff' } });\r\n            }\r\n            else if (result == OK) {\r\n                this.request.status = TaskState.FINISHED;\r\n            }\r\n            else {\r\n                console.log(creep.name + \" couldn't restock: \" + result);\r\n                this.request.status = TaskState.FINISHED;\r\n            }\r\n        }\r\n    };\r\n    Restock.addRequests = function (roomName) {\r\n        var restockables = utils.getRestockables(roomName);\r\n        for (var targetID in restockables) {\r\n            var restockable = restockables[targetID];\r\n            var request = new RestockRequest(roomName, restockable.id);\r\n            var existingTaskCount = CreepTaskQueue.totalCount(roomName, request.name);\r\n            var maxConcurrentCount = request.maxConcurrentCount;\r\n            if (existingTaskCount < maxConcurrentCount) {\r\n                CreepTaskQueue.addPending(request);\r\n            }\r\n        }\r\n    };\r\n    return Restock;\r\n}(CreepTask));\r\nexport { Restock };\r\n//# sourceMappingURL=Restock.js.map","map":{"version":3,"file":"Restock.js","sourceRoot":"","sources":["../../src/tasks/creep/Restock.ts"],"names":[],"mappings":"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"}}
