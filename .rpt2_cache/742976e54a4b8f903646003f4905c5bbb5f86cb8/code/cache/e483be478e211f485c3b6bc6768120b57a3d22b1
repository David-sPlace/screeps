{"code":"import * as tslib_1 from \"tslib\";\r\nimport { CreepTaskRequest } from \"../CreepTaskRequest\";\r\nimport { CreepTask } from \"../CreepTask\";\r\nimport * as utils from \"utils/utils\";\r\nimport { CreepTaskQueue } from \"../CreepTaskQueue\";\r\nimport { TaskState } from \"../Task\";\r\nvar MineRequest = /** @class */ (function (_super) {\r\n    tslib_1.__extends(MineRequest, _super);\r\n    function MineRequest(roomName, source) {\r\n        var _this = _super.call(this, roomName, \"\\uD83D\\uDCB2\", source.sourceID) || this;\r\n        _this.priority = 1;\r\n        _this.requiredRole = 2 /* ROLE_MINER */;\r\n        _this.name = \"Mine\";\r\n        _this.source = source;\r\n        _this.maxConcurrentCount = utils.sourceCount(_this.roomName);\r\n        return _this;\r\n    }\r\n    return MineRequest;\r\n}(CreepTaskRequest));\r\nexport { MineRequest };\r\nvar Mine = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Mine, _super);\r\n    function Mine(taskInfo) {\r\n        return _super.call(this, taskInfo) || this;\r\n    }\r\n    Mine.prototype.init = function () {\r\n        _super.prototype.init.call(this);\r\n        console.log(\"mine init assigned to \" + this.request.assignedTo);\r\n        var req = this.request;\r\n        var source = req.source;\r\n        source.assignedTo = req.assignedTo;\r\n        this.request.status = TaskState.START;\r\n    };\r\n    Mine.prototype.start = function () {\r\n        _super.prototype.start.call(this);\r\n        this.request.status = TaskState.PREP;\r\n    };\r\n    Mine.prototype.prep = function () {\r\n        _super.prototype.prep.call(this);\r\n        if (this.request.status == TaskState.FINISHED)\r\n            return;\r\n        this.request.status = TaskState.IN_PROGRESS;\r\n    };\r\n    Mine.prototype.continue = function () {\r\n        _super.prototype.continue.call(this);\r\n        if (this.request.status == TaskState.FINISHED)\r\n            return;\r\n        var creep = Game.creeps[this.request.assignedTo];\r\n        if (creep.carry.energy < creep.carryCapacity)\r\n            this.harvest();\r\n        else\r\n            this.deliver();\r\n    };\r\n    // start()\r\n    // {\r\n    // \tsuper.start();\r\n    // \tlet req = this.request as MineRequest;\r\n    // \tlet source = req.source as HarvestSource;\r\n    // \tconsole.log(\"assigning source \" + source.sourceID + \" to \" + req.assignedTo)\r\n    // \tsource.assignedTo = req.assignedTo;\r\n    // }\r\n    // protected doWork(): void\r\n    // {\r\n    // \tlet creep = Game.creeps[this.request.assignedTo] as Creep;\r\n    // \tif (creep.carry.energy < creep.carryCapacity) this.harvest()\r\n    // \telse this.deliver()\r\n    // }\r\n    Mine.addRequests = function (roomName) {\r\n        var room = Game.rooms[roomName];\r\n        var mem = room.memory;\r\n        var sources = mem.harvestLocations;\r\n        for (var id in sources) {\r\n            var sourceLocation = sources[id];\r\n            //console.log(sourceLocation.sourceID)\r\n            if (sourceLocation.assignedTo == null) {\r\n                sourceLocation.assignedTo = \"pending\";\r\n                var request = new MineRequest(roomName, sourceLocation);\r\n                if (CreepTaskQueue.totalCount(roomName, request.name) < request.maxConcurrentCount) {\r\n                    CreepTaskQueue.addPending(request);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    Mine.prototype.harvest = function () {\r\n        var creep = Game.creeps[this.request.assignedTo];\r\n        var source = Game.getObjectById(this.request.targetID);\r\n        if (creep.harvest(source) == ERR_NOT_IN_RANGE) {\r\n            creep.moveTo(source, { visualizePathStyle: { stroke: '#ffaa00' } });\r\n        }\r\n    };\r\n    Mine.prototype.deliver = function () {\r\n        var creep = Game.creeps[this.request.assignedTo];\r\n        var container = utils.findClosestContainer(this.request.roomName, creep.id, true, true);\r\n        if (container == undefined)\r\n            throw \"Error!\";\r\n        if (container.store.energy == container.storeCapacity)\r\n            return;\r\n        if (creep.transfer(container, RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {\r\n            creep.moveTo(container, { visualizePathStyle: { stroke: '#ffffff' } });\r\n        }\r\n    };\r\n    return Mine;\r\n}(CreepTask));\r\nexport { Mine };\r\n//# sourceMappingURL=Mine.js.map","map":{"version":3,"file":"Mine.js","sourceRoot":"","sources":["../../src/tasks/creep/Mine.ts"],"names":[],"mappings":"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"}}
