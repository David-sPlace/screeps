{"code":"import * as tslib_1 from \"tslib\";\r\nimport { CreepTask } from \"tasks/CreepTask\";\r\nimport { CreepTaskRequest } from \"tasks/CreepTaskRequest\";\r\nimport { CreepTaskQueue } from \"../CreepTaskQueue\";\r\nvar FillTowerRequest = /** @class */ (function (_super) {\r\n    tslib_1.__extends(FillTowerRequest, _super);\r\n    function FillTowerRequest(roomName, towerID) {\r\n        var _this = _super.call(this, roomName, \"\\u2697\", towerID) || this;\r\n        _this.priority = 3;\r\n        _this.requiredRole = 3 /* ROLE_WORKER */;\r\n        _this.name = \"FillTower\";\r\n        _this.maxConcurrentCount = 1;\r\n        return _this;\r\n    }\r\n    FillTowerRequest.RefillThreshold = .75;\r\n    return FillTowerRequest;\r\n}(CreepTaskRequest));\r\nexport { FillTowerRequest };\r\nvar FillTower = /** @class */ (function (_super) {\r\n    tslib_1.__extends(FillTower, _super);\r\n    function FillTower(taskInfo) {\r\n        return _super.call(this, taskInfo) || this;\r\n    }\r\n    // doWork(): void\r\n    // {\r\n    // \tlet info = this.request as FillTowerRequest;\r\n    // \tlet tower = Game.getObjectById(info.targetID) as StructureTower;\r\n    // \tlet creep = Game.creeps[this.request.assignedTo] as Creep;\r\n    // \tlet creepMemory = creep.memory as CreepMemory;\r\n    // \tif (tower.energy == tower.energyCapacity)\r\n    // \t{\r\n    // \t\tthis.finish();\r\n    // \t\treturn;\r\n    // \t}\r\n    // \tif (creepMemory.preppingForTask) this.collectFromContainer(this.request.roomName, creep.id);\r\n    // \telse\r\n    // \t{\r\n    // \t\tlet result = creep.transfer(tower, RESOURCE_ENERGY)\r\n    // \t\tif (result == ERR_NOT_IN_RANGE)\r\n    // \t\t{\r\n    // \t\t\tcreep.moveTo(tower, { visualizePathStyle: { stroke: '#ffffff' } });\r\n    // \t\t}\r\n    // \t\telse if(result == OK){\r\n    // \t\t\tthis.finish();\r\n    // \t\t}\r\n    // \t}\r\n    // }\r\n    FillTower.addRequests = function (roomName) {\r\n        var room = Game.rooms[roomName];\r\n        var towers = room.find(FIND_MY_STRUCTURES)\r\n            .filter(function (t) { return t.structureType == \"tower\"\r\n            && t.energy < t.energyCapacity * FillTowerRequest.RefillThreshold; });\r\n        var sorted = towers.sort(function (a, b) { return a.energy - b.energy; });\r\n        for (var id in sorted) {\r\n            var tower = sorted[id];\r\n            var request = new FillTowerRequest(roomName, tower.id);\r\n            if (CreepTaskQueue.totalCount(roomName, request.name) < request.maxConcurrentCount) {\r\n                CreepTaskQueue.addPending(request);\r\n            }\r\n        }\r\n    };\r\n    return FillTower;\r\n}(CreepTask));\r\nexport { FillTower };\r\n//# sourceMappingURL=FillTower.js.map","map":{"version":3,"file":"FillTower.js","sourceRoot":"","sources":["../../src/tasks/creep/FillTower.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAC5C,OAAO,EAAE,gBAAgB,EAAE,MAAM,wBAAwB,CAAC;AAC1D,OAAO,EAAE,cAAc,EAAE,MAAM,mBAAmB,CAAC;AAKnD;IAAsC,4CAAgB;IAOrD,0BAAY,QAAgB,EAAE,OAAe;QAA7C,YAEC,kBAAM,QAAQ,EAAE,QAAG,EAAE,OAAO,CAAC,SAC7B;QAPD,cAAQ,GAAW,CAAC,CAAA;QACpB,kBAAY,uBAAoC;QAChD,UAAI,GAAG,WAAW,CAAC;QACnB,wBAAkB,GAAG,CAAC,CAAC;;IAIvB,CAAC;IARM,gCAAe,GAAW,GAAG,CAAA;IASrC,uBAAC;CAAA,AAXD,CAAsC,gBAAgB,GAWrD;SAXY,gBAAgB;AAa7B;IAA+B,qCAAS;IAgDvC,mBAAY,QAA0B;eAErC,kBAAM,QAAQ,CAAC;IAChB,CAAC;IAhDD,iBAAiB;IACjB,IAAI;IACJ,gDAAgD;IAChD,oEAAoE;IACpE,8DAA8D;IAC9D,kDAAkD;IAElD,6CAA6C;IAC7C,KAAK;IACL,mBAAmB;IACnB,YAAY;IACZ,KAAK;IACL,gGAAgG;IAChG,QAAQ;IACR,KAAK;IACL,wDAAwD;IACxD,oCAAoC;IACpC,MAAM;IACN,yEAAyE;IACzE,MAAM;IACN,2BAA2B;IAC3B,oBAAoB;IACpB,MAAM;IACN,KAAK;IAEL,IAAI;IACG,qBAAW,GAAlB,UAAmB,QAAgB;QAElC,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QAChC,IAAM,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC;aAC1C,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,aAAa,IAAI,OAAO;eACnC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,cAAc,GAAG,gBAAgB,CAAC,eAAe,EADrD,CACqD,CAAqB,CAAC;QAEvF,IAAI,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,EAAnB,CAAmB,CAAC,CAAC;QAE1D,KAAK,IAAM,EAAE,IAAI,MAAM,EACvB;YACC,IAAI,KAAK,GAAG,MAAM,CAAC,EAAE,CAAmB,CAAC;YACzC,IAAI,OAAO,GAAG,IAAI,gBAAgB,CAAC,QAAQ,EAAE,KAAK,CAAC,EAAE,CAAC,CAAC;YACvD,IAAI,cAAc,CAAC,UAAU,CAAC,QAAQ,EAAE,OAAO,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC,kBAAkB,EAClF;gBACC,cAAc,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;aACnC;SACD;IACF,CAAC;IAKF,gBAAC;AAAD,CAAC,AApDD,CAA+B,SAAS,GAoDvC"}}
