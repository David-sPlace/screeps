{"code":"import * as utils from \"utils/utils\";\r\nimport { TaskState } from \"./Task\";\r\nvar CreepTaskQueue = /** @class */ (function () {\r\n    function CreepTaskQueue() {\r\n    }\r\n    CreepTaskQueue.test = function (roomName, taskName) {\r\n        if (taskName === void 0) { taskName = \"\"; }\r\n        var roomMem = Game.rooms[roomName].memory;\r\n        var testlist = roomMem.activeStructureRequests;\r\n        Object.keys(roomMem.activeStructureRequests).length;\r\n    };\r\n    CreepTaskQueue.totalCount = function (roomName, taskName) {\r\n        if (taskName === void 0) { taskName = \"\"; }\r\n        return CreepTaskQueue.activeCount(roomName, taskName)\r\n            + CreepTaskQueue.pendingCount(roomName, taskName);\r\n    };\r\n    CreepTaskQueue.pendingCount = function (roomName, taskName) {\r\n        if (taskName === void 0) { taskName = \"\"; }\r\n        var roomMem = Game.rooms[roomName].memory;\r\n        if (taskName == \"\") {\r\n            return roomMem.pendingWorkerRequests.length;\r\n        }\r\n        else {\r\n            var count = 0;\r\n            var tasks = roomMem.pendingWorkerRequests;\r\n            //var test =  _.countBy(tasks, t=> t.name == taskName).length;\r\n            //console.log(test);\r\n            for (var id in tasks) {\r\n                var task = tasks[id];\r\n                if (task.name == taskName)\r\n                    count++;\r\n            }\r\n            return count;\r\n        }\r\n    };\r\n    CreepTaskQueue.activeCount = function (roomName, taskName) {\r\n        if (taskName === void 0) { taskName = \"\"; }\r\n        var roomMem = Game.rooms[roomName].memory;\r\n        return Object.keys(roomMem.activeWorkerRequests).length;\r\n        // if (taskName == \"\")\r\n        // {\r\n        // \treturn roomMem.activeWorkerTaskCount;\r\n        // }\r\n        // else\r\n        // {\r\n        // \tlet count = 0;\r\n        // \tlet tasks = roomMem.activeWorkerRequests;\r\n        // \tfor (let task in tasks)\r\n        // \t{\r\n        // \t\tlet test = tasks[task];\r\n        // \t\tif (test.name == taskName) count++;\r\n        // \t}\r\n        // \treturn count;\r\n        // }\r\n    };\r\n    CreepTaskQueue.addPending = function (request) {\r\n        var roomMem = Game.rooms[request.roomName].memory;\r\n        roomMem.pendingWorkerRequests.push(request);\r\n    };\r\n    CreepTaskQueue.start = function (creepName, roomName) {\r\n        var roomMem = Game.rooms[roomName].memory;\r\n        if (roomMem.pendingWorkerRequests.length == 0)\r\n            return;\r\n        var creep = Game.creeps[creepName];\r\n        var mem = creep.memory;\r\n        var validTasks = roomMem.pendingWorkerRequests.filter(function (r) { return r.requiredRole == mem.role; });\r\n        if (validTasks.length == 0) {\r\n            console.log(\"nothing to assign for \" + creepName + \" for role \" + utils.getRoleString(mem.role));\r\n            return;\r\n        }\r\n        var sorted = _.sortByAll(validTasks, ['priority', function (t) { return creep.pos.getRangeTo(Game.getObjectById(validTasks[0].targetID)); }]);\r\n        var debug = \"\";\r\n        for (var key in sorted) {\r\n            var task = sorted[key];\r\n            if (task != undefined)\r\n                debug += task.priority + \", \";\r\n        }\r\n        //console.log(\"Debug: \" + debug);\r\n        for (var key in sorted) {\r\n            if (sorted.hasOwnProperty(key)) {\r\n                var task = sorted[key];\r\n                var nextTask = _.find(roomMem.pendingWorkerRequests, task);\r\n                if (nextTask != undefined) {\r\n                    console.log(task.name);\r\n                    mem.idle = false;\r\n                    mem.currentTask = nextTask.name;\r\n                    nextTask.assignedTo = creepName;\r\n                    roomMem.activeWorkerRequests[creepName] = nextTask;\r\n                    roomMem.activeWorkerTaskCount++;\r\n                    console.log(JSON.stringify(nextTask));\r\n                    nextTask.status = TaskState.INIT;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    // static finish(creepName: string, roomName: string)\r\n    // {\r\n    // \tlet roomMem = Game.rooms[roomName].memory as RoomMemory;\r\n    // \t//let started = roomMem.activeWorkerRequests[creepName].started;\r\n    // \t//if(started) roomMem.activeWorkerTaskCount--;\r\n    // \tdelete roomMem.activeWorkerRequests[creepName];\r\n    // }\r\n    CreepTaskQueue.allActive = function (roomName) {\r\n        var roomMem = Game.rooms[roomName].memory;\r\n        return roomMem.activeWorkerRequests;\r\n    };\r\n    CreepTaskQueue.count = function (roomName) {\r\n    };\r\n    return CreepTaskQueue;\r\n}());\r\nexport { CreepTaskQueue };\r\n//# sourceMappingURL=CreepTaskQueue.js.map","map":{"version":3,"file":"CreepTaskQueue.js","sourceRoot":"","sources":["../src/tasks/CreepTaskQueue.ts"],"names":[],"mappings":"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"}}
