{"code":"import { ErrorMapper } from \"utils/ErrorMapper\";\r\nimport * as Mem from \"utils/memory\";\r\nimport { RoomManager } from \"roomManager\";\r\nvar rm = new RoomManager();\r\nvar initialized = false;\r\nfunction memoryInit() {\r\n    console.log(\"Initializing Game\");\r\n    delete Memory.flags;\r\n    delete Memory.spawns;\r\n    delete Memory.creeps;\r\n    delete Memory.rooms;\r\n    var mem = Mem.m();\r\n    mem.creeps = {};\r\n    mem.rooms = {};\r\n    mem.spawns = {};\r\n    mem.uuid = getTotalCreepCount();\r\n    mem.memVersion = Mem.MemoryVersion;\r\n}\r\nfunction getTotalCreepCount() {\r\n    var totalcreepCount = 0;\r\n    for (var i in Game.rooms) {\r\n        var room = Game.rooms[i];\r\n        var creeps = room.find(FIND_MY_CREEPS);\r\n        totalcreepCount += creeps.length;\r\n    }\r\n    return totalcreepCount;\r\n}\r\nfunction InitializeGame() {\r\n    if (Mem.m().memVersion === undefined ||\r\n        Mem.m().memVersion !== Mem.MemoryVersion ||\r\n        (Mem.m().memVersion == 0 && !initialized)) {\r\n        initialized = true;\r\n        memoryInit();\r\n    }\r\n    if (!Mem.m().uuid || Mem.m().uuid > 1000) {\r\n        Mem.m().uuid = getTotalCreepCount();\r\n    }\r\n}\r\nfunction mainLoop() {\r\n    InitializeGame();\r\n    //console.log(\"main loop.\")\r\n    for (var i in Game.rooms) {\r\n        var room = Game.rooms[i];\r\n        var mem = Mem.m();\r\n        var roomMemory = mem.rooms[room.name];\r\n        if (roomMemory === undefined) {\r\n            console.log(\"Init room memory for \" + room.name + \".\");\r\n            Memory.rooms[room.name] = {};\r\n            Mem.initRoomMemory(room.name);\r\n            roomMemory = mem.rooms[room.name];\r\n        }\r\n        rm.Run(room.name);\r\n    }\r\n    Mem.cleanupCreeps();\r\n}\r\nexport var loop = ErrorMapper.wrapLoop(mainLoop);\r\n//# sourceMappingURL=main.js.map","map":{"version":3,"file":"main.js","sourceRoot":"","sources":["src/main.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,mBAAmB,CAAC;AAChD,OAAO,KAAK,GAAG,MAAM,cAAc,CAAC;AACpC,OAAO,EAAC,WAAW,EAAC,MAAM,aAAa,CAAC;AAExC,IAAM,EAAE,GAAG,IAAI,WAAW,EAAE,CAAC;AAC7B,IAAI,WAAW,GAAG,KAAK,CAAC;AACxB;IAGC,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;IACjC,OAAO,MAAM,CAAC,KAAK,CAAC;IACpB,OAAO,MAAM,CAAC,MAAM,CAAC;IACrB,OAAO,MAAM,CAAC,MAAM,CAAC;IACrB,OAAO,MAAM,CAAC,KAAK,CAAC;IAEpB,IAAM,GAAG,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC;IACpB,GAAG,CAAC,MAAM,GAAG,EAAE,CAAC;IAChB,GAAG,CAAC,KAAK,GAAG,EAAE,CAAC;IACf,GAAG,CAAC,MAAM,GAAG,EAAE,CAAC;IAEhB,GAAG,CAAC,IAAI,GAAG,kBAAkB,EAAE,CAAC;IAChC,GAAG,CAAC,UAAU,GAAG,GAAG,CAAC,aAAa,CAAC;AACpC,CAAC;AACD;IACC,IAAI,eAAe,GAAG,CAAC,CAAC;IACxB,KAAI,IAAM,CAAC,IAAI,IAAI,CAAC,KAAK,EAAC;QACzB,IAAM,IAAI,GAAS,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACjC,IAAI,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QACvC,eAAe,IAAI,MAAM,CAAC,MAAM,CAAC;KACjC;IACD,OAAO,eAAe,CAAC;AACxB,CAAC;AACD;IAEC,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,UAAU,KAAK,SAAS;QACnC,GAAG,CAAC,CAAC,EAAE,CAAC,UAAU,KAAK,GAAG,CAAC,aAAa;QACxC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,EAC1C;QACC,WAAW,GAAG,IAAI,CAAC;QACnB,UAAU,EAAE,CAAC;KACb;IACD,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,IAAI,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,IAAI,GAAG,IAAI,EACxC;QACC,GAAG,CAAC,CAAC,EAAE,CAAC,IAAI,GAAG,kBAAkB,EAAE,CAAC;KACpC;AACF,CAAC;AAED;IAEC,cAAc,EAAE,CAAC;IACjB,2BAA2B;IAC3B,KAAK,IAAM,CAAC,IAAI,IAAI,CAAC,KAAK,EAC1B;QACC,IAAM,IAAI,GAAS,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACjC,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC,EAAoB,CAAC;QACpC,IAAI,UAAU,GAAG,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAmB,CAAC;QACxD,IAAI,UAAU,KAAK,SAAS,EAC5B;YACC,OAAO,CAAC,GAAG,CAAC,0BAAwB,IAAI,CAAC,IAAI,MAAG,CAAC,CAAC;YAClD,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;YAC7B,GAAG,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC9B,UAAU,GAAG,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAmB,CAAC;SACpD;QAED,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAClB;IAED,GAAG,CAAC,aAAa,EAAE,CAAC;AACrB,CAAC;AAGD,MAAM,CAAC,IAAM,IAAI,GAAG,WAAW,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC"}}
