{"code":"import { Harvester } from \"roles/Harvester.1\";\r\nimport { CreepUtils } from \"utils/CreepUtils\";\r\nvar HarvesterManager = /** @class */ (function () {\r\n    function HarvesterManager(home, creepCount) {\r\n        if (creepCount === void 0) { creepCount = 3; }\r\n        this.homeName = \"default\";\r\n        this.creepCount = 3;\r\n        this.homeName = home;\r\n        this.creepCount = creepCount;\r\n        this.creeps = new Array();\r\n    }\r\n    HarvesterManager.prototype.directHarvesters = function () {\r\n        this.creeps.forEach(function (creep) {\r\n            creep.Run();\r\n        });\r\n    };\r\n    HarvesterManager.prototype.cleanUpStaleHarvesters = function (period) {\r\n        if (Game.time % period == 0) {\r\n            for (var name_1 in this.creeps) {\r\n                if (!(name_1 in Game.creeps)) {\r\n                    delete this.creeps[name_1];\r\n                }\r\n            }\r\n        }\r\n    };\r\n    HarvesterManager.prototype.onLoop = function () {\r\n        this.directHarvesters();\r\n        this.trySpawnHarvester();\r\n        this.cleanUpStaleHarvesters(100);\r\n    };\r\n    HarvesterManager.prototype.trySpawnHarvester = function (bodyParts) {\r\n        if (bodyParts === void 0) { bodyParts = [WORK, CARRY, MOVE]; }\r\n        if (Game.spawns[this.homeName].spawning) {\r\n            console.log(\"Waiting for current creep to finish spawning...\");\r\n            return;\r\n        }\r\n        if (this.harvestersNeeded() === false)\r\n            return;\r\n        if (this.canAfford(CreepUtils.TotalCreepCost(bodyParts)) === false) {\r\n            console.log(\"Can't afford to spawn harvester creeps! \");\r\n            return;\r\n        }\r\n        console.log(\"Spawning new harvester...\");\r\n        var harvester = new Harvester(this.homeName, 1);\r\n        harvester.Spawn();\r\n        this.creeps.push(harvester);\r\n    };\r\n    HarvesterManager.prototype.canAfford = function (totalCost) {\r\n        return Game.spawns[this.homeName].energy > totalCost;\r\n    };\r\n    HarvesterManager.prototype.harvestersNeeded = function () {\r\n        return true;\r\n    };\r\n    return HarvesterManager;\r\n}());\r\nexport { HarvesterManager };\r\n//# sourceMappingURL=HarvesterManager.js.map","map":{"version":3,"file":"HarvesterManager.js","sourceRoot":"","sources":["../src/roles/HarvesterManager.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,SAAS,EAAE,MAAM,mBAAmB,CAAC;AAC9C,OAAO,EAAE,UAAU,EAAE,MAAM,kBAAkB,CAAC;AAG9C;IA6BC,0BAAY,IAAY,EAAE,UAAsB;QAAtB,2BAAA,EAAA,cAAsB;QAJhD,aAAQ,GAAW,SAAS,CAAC;QAC7B,eAAU,GAAW,CAAC,CAAC;QAKtB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,MAAM,GAAG,IAAI,KAAK,EAAa,CAAC;IACtC,CAAC;IAhCD,2CAAgB,GAAhB;QAGC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAC,KAAK;YAEzB,KAAK,CAAC,GAAG,EAAE,CAAC;QACb,CAAC,CAAC,CAAA;IAEH,CAAC;IACD,iDAAsB,GAAtB,UAAuB,MAAc;QAEpC,IAAI,IAAI,CAAC,IAAI,GAAG,MAAM,IAAI,CAAC,EAC3B;YACC,KAAK,IAAM,MAAI,IAAI,IAAI,CAAC,MAAM,EAC9B;gBACC,IAAI,CAAC,CAAC,MAAI,IAAI,IAAI,CAAC,MAAM,CAAC,EAC1B;oBACC,OAAO,IAAI,CAAC,MAAM,CAAC,MAAI,CAAC,CAAC;iBACzB;aACD;SACD;IACF,CAAC;IAaD,iCAAM,GAAN;QAEC,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,CAAC;IAClC,CAAC;IAEO,4CAAiB,GAAzB,UAA0B,SAA8C;QAA9C,0BAAA,EAAA,aAA4B,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC;QAEvE,IAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAC;YACtC,OAAO,CAAC,GAAG,CAAC,iDAAiD,CAAC,CAAA;YAC9D,OAAO;SACP;QAED,IAAI,IAAI,CAAC,gBAAgB,EAAE,KAAK,KAAK;YAAE,OAAO;QAC9C,IAAI,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,KAAK,KAAK,EAClE;YACC,OAAO,CAAC,GAAG,CAAC,0CAA0C,CAAC,CAAC;YACxD,OAAO;SACP;QACD,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAA;QAExC,IAAI,SAAS,GAAG,IAAI,SAAS,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;QAChD,SAAS,CAAC,KAAK,EAAE,CAAC;QAClB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAE7B,CAAC;IAEO,oCAAS,GAAjB,UAAkB,SAAiB;QAElC,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,MAAM,GAAG,SAAS,CAAC;IACtD,CAAC;IAEO,2CAAgB,GAAxB;QAEC,OAAO,IAAI,CAAC;IACb,CAAC;IAEF,uBAAC;AAAD,CAAC,AA1ED,IA0EC"}}
