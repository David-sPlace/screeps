{"code":"import * as tslib_1 from \"tslib\";\r\nimport { Task } from \"./Task\";\r\nimport * as utils from \"utils/utils\";\r\nvar CreepTask = /** @class */ (function (_super) {\r\n    tslib_1.__extends(CreepTask, _super);\r\n    function CreepTask(taskInfo) {\r\n        var _this = _super.call(this, taskInfo) || this;\r\n        _this.request = taskInfo;\r\n        return _this;\r\n    }\r\n    CreepTask.prototype.start = function () {\r\n        _super.prototype.start.call(this);\r\n        var creep = Game.creeps[this.request.assignedTo];\r\n        var creepMem = creep.memory;\r\n        creepMem.currentTask = this.request.name;\r\n        creepMem.idle = false;\r\n        if (creep.carry.energy < creep.carryCapacity / 2) {\r\n            creepMem.preppingForTask = true;\r\n        }\r\n    };\r\n    CreepTask.prototype.continue = function () {\r\n        _super.prototype.continue.call(this);\r\n        if (this.request.finished)\r\n            return;\r\n        var creep = Game.creeps[this.request.assignedTo];\r\n        if (creep === undefined || creep.memory === undefined) {\r\n            this.request.finished = true;\r\n            return;\r\n        }\r\n        if (Game.time % 5 == 0) {\r\n            creep.say(\"\" + this.request.wingDing);\r\n        }\r\n        var creepMemory = creep.memory;\r\n        if (creep.carry.energy == 0) {\r\n            creepMemory.preppingForTask = true;\r\n        }\r\n        if (creepMemory.preppingForTask) {\r\n            creepMemory.preppingForTask = true;\r\n            this.collect2(this.request.roomName, creep.id, function () { });\r\n        }\r\n        else {\r\n            //this.moveoutdaway();\r\n            this.doWork();\r\n        }\r\n    };\r\n    CreepTask.prototype.finish = function () {\r\n        _super.prototype.finish.call(this);\r\n        var creep = Game.creeps[this.request.assignedTo];\r\n        if (creep !== undefined) {\r\n            creep.say(\"âœ”\");\r\n            var mem = creep.memory;\r\n            mem.idle = true;\r\n            mem.preppingForTask = false;\r\n            mem.currentTask = \"\";\r\n        }\r\n    };\r\n    // private moveoutdaway(): void\r\n    // {\r\n    // \tvar roomMem = Game.rooms[this.request.roomName].memory as RoomMemory;\r\n    // \tvar creep = Game.creeps[this.request.assignedTo] as Creep;\r\n    // \tvar harvestLocs = roomMem.harvestLocations;\r\n    // \tvar creepMem = creep.memory as CreepMemory;\r\n    // \tif (creepMem.preppingForTask) return;\r\n    // \tfor (const id in harvestLocs)\r\n    // \t{\r\n    // \t\tvar loc = harvestLocs[id];\r\n    // \t\tif (creep.pos.getRangeTo(loc.pos.x, loc.pos.y) < 1)\r\n    // \t\t{\r\n    // \t\t\t//creep.say(\"moving!\")\r\n    // \t\t\tcreep.moveTo(Game.getObjectById(creepMem.spawnID) as StructureSpawn);\r\n    // \t\t}\r\n    // \t}\r\n    // }\r\n    CreepTask.prototype.collect2 = function (roomName, creepID, energyFullCallback) {\r\n        var creep = Game.getObjectById(creepID);\r\n        var mem = creep.memory;\r\n        if (Game.time % 5 == 0) {\r\n            creep.say(\"\" + this.request.wingDing);\r\n        }\r\n        if (creep.carry.energy == creep.carryCapacity) {\r\n            mem.preppingForTask = false;\r\n            return;\r\n        }\r\n        var closestContainer = utils.findClosestContainer(roomName, creepID, true);\r\n        if (closestContainer == undefined) {\r\n            if (creep.carry.energy == 0) {\r\n                if (Game.time % 5 == 0)\r\n                    creep.say(\"\\u231B\");\r\n                var home = Game.getObjectById(mem.spawnID);\r\n                creep.moveTo(home.pos.x, home.pos.y);\r\n                return;\r\n            }\r\n            else\r\n                mem.preppingForTask = false;\r\n        }\r\n        if (creep.withdraw(closestContainer, RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {\r\n            creep.moveTo(closestContainer, { visualizePathStyle: { stroke: '#ffaa00' } });\r\n        }\r\n    };\r\n    return CreepTask;\r\n}(Task));\r\nexport { CreepTask };\r\n//# sourceMappingURL=CreepTask.js.map","map":{"version":3,"file":"CreepTask.js","sourceRoot":"","sources":["../src/tasks/CreepTask.ts"],"names":[],"mappings":"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"}}
