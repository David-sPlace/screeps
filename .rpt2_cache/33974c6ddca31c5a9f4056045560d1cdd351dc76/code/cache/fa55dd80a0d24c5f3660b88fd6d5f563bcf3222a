{"code":"import * as tslib_1 from \"tslib\";\r\nimport { CreepTaskRequest } from \"../CreepTaskRequest\";\r\nimport { CreepTask } from \"../CreepTask\";\r\nimport * as utils from \"utils/utils\";\r\nimport { CreepTaskQueue } from \"../CreepTaskQueue\";\r\nvar MineRequest = /** @class */ (function (_super) {\r\n    tslib_1.__extends(MineRequest, _super);\r\n    function MineRequest(roomName, source) {\r\n        var _this = _super.call(this, roomName, \"\\uD83D\\uDCB2\", source.sourceID) || this;\r\n        _this.priority = 1;\r\n        _this.requiredRole = 2 /* ROLE_MINER */;\r\n        _this.name = \"FillContainers\";\r\n        _this.source = source;\r\n        _this.maxConcurrentCount = utils.sourceCount(_this.roomName);\r\n        return _this;\r\n    }\r\n    return MineRequest;\r\n}(CreepTaskRequest));\r\nexport { MineRequest };\r\nvar Mine = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Mine, _super);\r\n    function Mine(taskInfo) {\r\n        return _super.call(this, taskInfo) || this;\r\n    }\r\n    Mine.prototype.start = function () {\r\n        _super.prototype.start.call(this);\r\n        var req = this.request;\r\n        var source = req.source;\r\n        console.log(\"assigning source \" + source.sourceID + \" to \" + req.assignedTo);\r\n        source.assignedTo = req.assignedTo;\r\n    };\r\n    Mine.prototype.continue = function () {\r\n        if (this.request.finished)\r\n            return;\r\n        var creep = Game.creeps[this.request.assignedTo];\r\n        if (creep === undefined || creep.memory === undefined) {\r\n            this.request.finished = true;\r\n            return;\r\n        }\r\n        if (Game.time % 5 == 0) {\r\n            creep.say(\"\" + this.request.wingDing);\r\n        }\r\n        var creepMemory = creep.memory;\r\n        if (creep.carry.energy == 0) {\r\n            creepMemory.preppingForTask = true;\r\n        }\r\n        else if (creep.carry.energy == creep.carryCapacity) {\r\n            creepMemory.preppingForTask = false;\r\n        }\r\n        this.doWork();\r\n    };\r\n    Mine.prototype.doWork = function () {\r\n        // var request = this.request as MineRequest;\r\n        //var creep = Game.creeps[request.assignedTo];\r\n        // console.log(\"doing work for filling containers\")\r\n        this.harvest();\r\n    };\r\n    Mine.prototype.harvest = function () {\r\n        var creep = Game.creeps[this.request.assignedTo];\r\n        if (creep.carry.energy == creep.carryCapacity) {\r\n            this.deliver();\r\n            return;\r\n        }\r\n        var request = this.request;\r\n        var source = Game.getObjectById(request.targetID);\r\n        if (creep.harvest(source) == ERR_NOT_IN_RANGE) {\r\n            creep.moveTo(source, { visualizePathStyle: { stroke: '#ffaa00' } });\r\n        }\r\n    };\r\n    Mine.prototype.deliver = function () {\r\n        var creep = Game.creeps[this.request.assignedTo];\r\n        var container = utils.findClosestContainer(this.request.roomName, creep.id, true, true);\r\n        if (container == undefined)\r\n            throw \"Error!\";\r\n        if (container.store.energy == container.storeCapacity) {\r\n            //this.request.finished = true;\r\n            return;\r\n        }\r\n        if (creep.transfer(container, RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {\r\n            creep.moveTo(container, { visualizePathStyle: { stroke: '#ffffff' } });\r\n        }\r\n    };\r\n    Mine.addTasks = function (roomName) {\r\n        // console.log(\"Fill containers start\")\r\n        var room = Game.rooms[roomName];\r\n        var mem = room.memory;\r\n        // console.log(\"sources: \" + sources.length)\r\n        var sources = mem.harvestLocations;\r\n        for (var id in sources) {\r\n            var sourceLocation = sources[id];\r\n            if (sourceLocation.assignedTo != null)\r\n                return;\r\n            var request = new MineRequest(roomName, sourceLocation);\r\n            console.log(\"fuck you bug\");\r\n            if (CreepTaskQueue.totalCount(roomName, request.name) < request.maxConcurrentCount) {\r\n                // console.log(\"adding fill task\")\r\n                CreepTaskQueue.addPending(request);\r\n            }\r\n        }\r\n    };\r\n    return Mine;\r\n}(CreepTask));\r\nexport { Mine };\r\n//# sourceMappingURL=Mine.js.map","map":{"version":3,"file":"Mine.js","sourceRoot":"","sources":["../../src/tasks/creep/Mine.ts"],"names":[],"mappings":"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"}}
