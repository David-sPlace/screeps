{"code":"import { m } from \"utils/memory\";\r\nexport function findSpawns(roomName, onlyNonSpawning) {\r\n    if (onlyNonSpawning === void 0) { onlyNonSpawning = true; }\r\n    var room = Game.rooms[roomName];\r\n    return room.find(FIND_MY_STRUCTURES, {\r\n        filter: function (structure) {\r\n            if (structure.structureType == STRUCTURE_SPAWN) {\r\n                var spawner = structure;\r\n                m().spawns[spawner.id] = spawner;\r\n                return onlyNonSpawning ? spawner.spawning === null : true;\r\n            }\r\n            return false;\r\n        }\r\n    });\r\n}\r\nexport function findIdleCreeps(roomName, role) {\r\n    if (role === void 0) { role = 1 /* ROLE_ALL */; }\r\n    return Game.rooms[roomName].find(FIND_MY_CREEPS, {\r\n        filter: function (creep) {\r\n            var memory = creep.memory;\r\n            return memory.idle && (memory.role == role || role == 1 /* ROLE_ALL */);\r\n        }\r\n    });\r\n}\r\nexport function ildeCreepCount(roomName, role) {\r\n    if (role === void 0) { role = 1 /* ROLE_ALL */; }\r\n    return findIdleCreeps(roomName, role).length;\r\n}\r\nexport function findClosestContainer(roomName, targetID, fullOK, emptyOK) {\r\n    //when filling, can't be full.\r\n    //when withdrawing, can't be empty.\r\n    //so we need hasRoom : boolean\r\n    var room = Game.rooms[roomName];\r\n    var target = Game.getObjectById(targetID);\r\n    if (target == null)\r\n        return;\r\n    //console.log(\"target wasn't null\");\r\n    var roomContainers = findAllContainers(roomName)\r\n        .sort(function (a, b) { return a.pos.getRangeTo(target) - b.pos.getRangeTo(target); });\r\n    // var roomContainers = Game.rooms[room.name].find(FIND_STRUCTURES).filter(i =>\r\n    // {\r\n    // \treturn i.structureType == STRUCTURE_CONTAINER;\r\n    // }).sort((a, b) => a.pos.getRangeTo(target as any) - b.pos.getRangeTo(target as any)) as StructureContainer[];\r\n    for (var id in roomContainers) {\r\n        var container = roomContainers[id];\r\n        if (container == null)\r\n            continue;\r\n        if (!fullOK && container.store.energy == container.storeCapacity)\r\n            continue; //has room\r\n        if (!emptyOK && container.store.energy == 0)\r\n            continue; //can't be empty\r\n        return container;\r\n    }\r\n    return undefined;\r\n}\r\nexport function creepIDsByRole(roomName, role) {\r\n    var room = Game.rooms[roomName];\r\n    var creeps = room.find(FIND_MY_CREEPS);\r\n    var found = [];\r\n    for (var key in creeps) {\r\n        if (creeps.hasOwnProperty(key)) {\r\n            var creep = creeps[key];\r\n            var mem = creep.memory;\r\n            if (mem.role == role || role == undefined)\r\n                found.push(creep.id);\r\n        }\r\n    }\r\n    return found;\r\n}\r\nexport function creepCount(roomName, role) {\r\n    var creeps = Game.rooms[roomName].find(FIND_MY_CREEPS);\r\n    if (role == undefined)\r\n        return creeps.length;\r\n    else {\r\n        return creepIDsByRole(roomName, role).length;\r\n    }\r\n}\r\nexport function roomSources(roomName) {\r\n    return Game.rooms[roomName].find(FIND_SOURCES);\r\n}\r\nexport function sourceCount(roomName) {\r\n    return roomSources(roomName).length;\r\n}\r\nexport function findAllContainers(roomName) {\r\n    return Game.rooms[roomName].find(FIND_STRUCTURES).filter(function (i) {\r\n        return i.structureType == STRUCTURE_CONTAINER;\r\n    });\r\n}\r\nexport function findIdleSmartStructures(roomName) {\r\n    var roomMem = Game.rooms[roomName].memory;\r\n    var structs = roomMem.smartStructures;\r\n    return structs.filter(function (struc) {\r\n        var mem = struc.memory;\r\n        return mem.idle;\r\n    });\r\n}\r\nexport function getRestockables(roomName) {\r\n    var room = Game.rooms[roomName];\r\n    return room.find(FIND_STRUCTURES, {\r\n        filter: function (structure) {\r\n            return (structure.structureType == STRUCTURE_EXTENSION\r\n                || structure.structureType == STRUCTURE_SPAWN)\r\n                && structure.energy < structure.energyCapacity;\r\n        }\r\n    });\r\n}\r\nexport function getRole(creepName) {\r\n    if (creepName.search(getRoleString(2 /* ROLE_MINER */)) != -1)\r\n        return 2 /* ROLE_MINER */;\r\n    if (creepName.search(getRoleString(3 /* ROLE_WORKER */)) != -1)\r\n        return 3 /* ROLE_WORKER */;\r\n    if (creepName.search(getRoleString(4 /* ROLE_UPGRADER */)) != -1)\r\n        return 4 /* ROLE_UPGRADER */;\r\n    return 0 /* ROLE_UNASSIGNED */;\r\n}\r\nexport function getRoleString(job) {\r\n    switch (job) {\r\n        // case CreepRoles.ROLE_BUILDER: return \"ROLE_BUILDER\";\r\n        case 2 /* ROLE_MINER */: return \"ROLE_MINER\";\r\n        // case CreepRoles.ROLE_MINEHAULER: return \"ROLE_MINEHAULER\";\r\n        // case CreepRoles.ROLE_HEALER: return \"ROLE_HEALER\";\r\n        // case CreepRoles.ROLE_FIGHTER: return \"ROLE_FIGHTER\";\r\n        // case CreepRoles.ROLE_RANGER: return \"ROLE_RANGER\";\r\n        // case CreepRoles.ROLE_CLAIMER: return \"ROLE_CLAIMER\";\r\n        // case CreepRoles.ROLE_REMOTEMINER: return \"ROLE_REMOTEMINER\";\r\n        // case CreepRoles.ROLE_REMOTEMINEHAULER: return \"ROLE_REMOTEMINEHAULER\";\r\n        // case CreepRoles.ROLE_CUSTOMCONTROL: return \"ROLE_CUSTOMCONTROL\";\r\n        case 4 /* ROLE_UPGRADER */: return \"ROLE_UPGRADER\";\r\n        case 3 /* ROLE_WORKER */: return \"ROLE_WORKER\";\r\n        case 0 /* ROLE_UNASSIGNED */: return \"ROLE_UNASSIGNED\";\r\n        case 1 /* ROLE_ALL */: return \"ROLE_ALL\";\r\n        default: return \"unknown role\";\r\n    }\r\n}\r\nexport var CantBuildReasons;\r\n(function (CantBuildReasons) {\r\n    CantBuildReasons[CantBuildReasons[\"NotTheOwner\"] = -1] = \"NotTheOwner\";\r\n    CantBuildReasons[CantBuildReasons[\"NameAlreadyExists\"] = -3] = \"NameAlreadyExists\";\r\n    CantBuildReasons[CantBuildReasons[\"BuildingBusy\"] = -4] = \"BuildingBusy\";\r\n    CantBuildReasons[CantBuildReasons[\"NotEnoughEnergy\"] = -6] = \"NotEnoughEnergy\";\r\n    CantBuildReasons[CantBuildReasons[\"InvalidArguments\"] = -10] = \"InvalidArguments\";\r\n    CantBuildReasons[CantBuildReasons[\"RCLNotHighEnough\"] = -14] = \"RCLNotHighEnough\";\r\n})(CantBuildReasons || (CantBuildReasons = {}));\r\nexport function errorToString(job) {\r\n    switch (job) {\r\n        case CantBuildReasons.NotTheOwner: return \"You don't own this building...?\";\r\n        case CantBuildReasons.NameAlreadyExists: return \"Name already exists...\";\r\n        case CantBuildReasons.BuildingBusy: return \"Name already exists...\";\r\n        case CantBuildReasons.NotEnoughEnergy: return \"You can't afford it!\";\r\n        case CantBuildReasons.InvalidArguments: return \"Invalid arguments passed to spawnCreep\";\r\n        case CantBuildReasons.RCLNotHighEnough: return \"Your RCL level is not high enough\";\r\n        default: return \"unknown error\";\r\n    }\r\n}\r\n// export function sendCreepsHome(roomName: string, creeps: Creep[]): void\r\n// {\r\n// \tvar spawn = findStructureSpawns(roomName)[0];\r\n// \tconsole.log(`There are ${creeps.length} idle creeps.`)\r\n// \tfor (const creep of creeps)\r\n// \t{\r\n// \t\tvar mem = creep.memory as CreepMemory;\r\n// \t\tif (mem.idle) creep.moveTo(spawn);\r\n// \t}\r\n// }\r\n//# sourceMappingURL=utils.js.map","map":{"version":3,"file":"utils.js","sourceRoot":"","sources":["../src/utils/utils.ts"],"names":[],"mappings":"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"}}
