{"code":"import * as tslib_1 from \"tslib\";\r\nvar CreepTask = /** @class */ (function () {\r\n    function CreepTask(room, controller) {\r\n        this.started = false;\r\n        this.finished = false;\r\n        this.assignedCreepName = \"\";\r\n        this.room = room;\r\n        this.controller = controller;\r\n        this.timeRequested = Game.time;\r\n    }\r\n    CreepTask.prototype.start = function (creep, context) {\r\n        console.log(creep.name + \" is starting task \" + this.name);\r\n        var creepMem = creep.memory;\r\n        this.assignedCreepName = creep.name;\r\n        this.started = true;\r\n        creepMem.idle = false;\r\n    };\r\n    CreepTask.prototype.continue = function (creep, context) {\r\n        //console.log(\"Upgrade task: continue\");\r\n        if (this.assignedCreepName == \"\") {\r\n            console.log(\"cant continue, don't have a creep.\");\r\n            return;\r\n        }\r\n        // else\r\n        // {\r\n        // \tconsole.log(`processing existing task for ${creep.name}`)\r\n        // }\r\n        //console.log(\"found \" + creep.name);\r\n        this.doWork(creep, context);\r\n    };\r\n    CreepTask.prototype.finish = function (creep, context) {\r\n        var mem = creep.memory;\r\n        this.finished = true;\r\n        mem.idle = true;\r\n        var timeTaken = Game.time - this.timeRequested;\r\n        //console.log(`Time taken for ${this.name}: ${timeTaken}`);\r\n    };\r\n    return CreepTask;\r\n}());\r\nvar Queue = /** @class */ (function () {\r\n    function Queue() {\r\n        this._store = [];\r\n    }\r\n    Queue.prototype.any = function () {\r\n        return this._store.length > 0;\r\n    };\r\n    Queue.prototype.contains = function (name) {\r\n        for (var value in this._store) {\r\n            var task = this._store[value];\r\n            if (task.name == name)\r\n                return true;\r\n        }\r\n        return false;\r\n    };\r\n    Queue.prototype.push = function (val) {\r\n        this._store.push(val);\r\n    };\r\n    Queue.prototype.peek = function () {\r\n        var next = this._store.shift();\r\n        this._store.unshift(next);\r\n        return next;\r\n    };\r\n    Queue.prototype.pop = function () {\r\n        return this._store.shift();\r\n    };\r\n    Queue.prototype.length = function () {\r\n        return this._store.length;\r\n    };\r\n    return Queue;\r\n}());\r\nvar UpgradeTask = /** @class */ (function (_super) {\r\n    tslib_1.__extends(UpgradeTask, _super);\r\n    function UpgradeTask() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.name = \"UpgradeTask\";\r\n        _this.singular = true;\r\n        return _this;\r\n    }\r\n    UpgradeTask.prototype.doWork = function (creep, context) {\r\n        //console.log('upgrade task: do work')\r\n        var creepMem = creep.memory;\r\n        if (!creepMem.isUpgradingController) {\r\n            if (creep.carry.energy < creep.carryCapacity) {\r\n                creep.say('ðŸ”„ Harvest!');\r\n                var sources = creep.room.find(FIND_SOURCES);\r\n                if (creep.harvest(sources[0]) == ERR_NOT_IN_RANGE) {\r\n                    creep.moveTo(sources[0], { visualizePathStyle: { stroke: '#ffaa00' } });\r\n                }\r\n            }\r\n            else {\r\n                creepMem.isUpgradingController = true;\r\n            }\r\n        }\r\n        if (creepMem.isUpgradingController) {\r\n            creep.say('ðŸš§ Upgrade!');\r\n            if (creep.upgradeController(this.controller) == ERR_NOT_IN_RANGE) {\r\n                creep.moveTo(this.controller, { visualizePathStyle: { stroke: '#ffffff' } });\r\n            }\r\n            else if (creep.carry.energy == 0) {\r\n                this.finished = true;\r\n            }\r\n        }\r\n    };\r\n    UpgradeTask.prototype.start = function (creep, context) {\r\n        _super.prototype.start.call(this, creep, context);\r\n        var roomMem = this.room.memory;\r\n        roomMem.controllerBeingUpgraded = true;\r\n    };\r\n    UpgradeTask.prototype.finish = function (creep, context) {\r\n        _super.prototype.finish.call(this, creep, context);\r\n        var mem = creep.memory;\r\n        var roomMem = this.room.memory;\r\n        mem.isUpgradingController = false;\r\n        roomMem.controllerBeingUpgraded = false;\r\n        creep.say('ðŸš§ Finish!');\r\n    };\r\n    return UpgradeTask;\r\n}(CreepTask));\r\nexport { UpgradeTask };\r\nvar TaskQueue = /** @class */ (function () {\r\n    function TaskQueue() {\r\n        this._queue = new Queue();\r\n        this._workingTasks = [];\r\n    }\r\n    TaskQueue.prototype.length = function () {\r\n        return this._queue.length();\r\n    };\r\n    TaskQueue.prototype.addItem = function (queueItem, roomName) {\r\n        if (queueItem == undefined || queueItem == null) {\r\n            console.log(\"tried to add null object to queue - not allowed.\");\r\n            return;\r\n        }\r\n        if (this._queue.contains(queueItem.name) && queueItem.singular) {\r\n            // console.log(`task already exists and is singular (${queueItem.name}) - skipping.`);\r\n            return;\r\n        }\r\n        console.log(\"Adding new task to queue for room \" + roomName + \": \" + queueItem.name);\r\n        this._queue.push(queueItem);\r\n    };\r\n    TaskQueue.prototype.workingTasks = function () {\r\n        return this._workingTasks;\r\n    };\r\n    TaskQueue.prototype.waitingTasks = function () {\r\n        return this._queue;\r\n    };\r\n    TaskQueue.prototype.startNext = function (creep, data) {\r\n        if (this._queue.any() == false)\r\n            return;\r\n        var task = this._queue.pop();\r\n        if (task != null) {\r\n            console.log(\"starting a task for \" + creep.name);\r\n            task.start(creep, data);\r\n        }\r\n        this._workingTasks.push(task);\r\n    };\r\n    TaskQueue.prototype.finish = function (task) {\r\n        var index = this._workingTasks.indexOf(task);\r\n        if (index > -1) {\r\n            this._workingTasks.splice(index, 1);\r\n        }\r\n    };\r\n    TaskQueue.prototype.any = function () {\r\n        return this._queue.any();\r\n    };\r\n    return TaskQueue;\r\n}());\r\nexport { TaskQueue };\r\n//# sourceMappingURL=queue.js.map","map":{"version":3,"file":"queue.js","sourceRoot":"","sources":["src/queue.ts"],"names":[],"mappings":"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"}}
