module.exports = {"version":3,"file":"main.js","sources":["../node_modules/source-map/lib/base64.js","../node_modules/source-map/lib/base64-vlq.js","../node_modules/source-map/lib/util.js","../node_modules/source-map/lib/array-set.js","../node_modules/source-map/lib/binary-search.js","../node_modules/source-map/lib/quick-sort.js","../node_modules/source-map/lib/source-map-consumer.js","../node_modules/source-map/source-map.js","../src/utils/ErrorMapper.ts","../src/utils/memory.ts","../src/utils/utils.ts","../src/CreepFactory.ts","../src/tasks/Task.ts","../src/tasks/CreepTaskQueue.ts","../node_modules/tslib/tslib.es6.js","../src/tasks/CreepTaskRequest.ts","../src/tasks/CreepTask.ts","../src/RoomManager.ts","../src/tasks/creep/Mine.ts","../src/tasks/creep/PickupEnergy.ts","../src/tasks/creep/Restock.ts","../src/tasks/creep/Build.ts","../src/tasks/creep/Upgrade.ts","../src/taskManager.ts","../src/roomManager.ts","../src/main.ts"],"sourcesContent":["/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n\n/**\n * Encode an integer in the range of 0 to 63 to a single base 64 digit.\n */\nexports.encode = function (number) {\n  if (0 <= number && number < intToCharMap.length) {\n    return intToCharMap[number];\n  }\n  throw new TypeError(\"Must be between 0 and 63: \" + number);\n};\n\n/**\n * Decode a single base 64 character code digit to an integer. Returns -1 on\n * failure.\n */\nexports.decode = function (charCode) {\n  var bigA = 65;     // 'A'\n  var bigZ = 90;     // 'Z'\n\n  var littleA = 97;  // 'a'\n  var littleZ = 122; // 'z'\n\n  var zero = 48;     // '0'\n  var nine = 57;     // '9'\n\n  var plus = 43;     // '+'\n  var slash = 47;    // '/'\n\n  var littleOffset = 26;\n  var numberOffset = 52;\n\n  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ\n  if (bigA <= charCode && charCode <= bigZ) {\n    return (charCode - bigA);\n  }\n\n  // 26 - 51: abcdefghijklmnopqrstuvwxyz\n  if (littleA <= charCode && charCode <= littleZ) {\n    return (charCode - littleA + littleOffset);\n  }\n\n  // 52 - 61: 0123456789\n  if (zero <= charCode && charCode <= nine) {\n    return (charCode - zero + numberOffset);\n  }\n\n  // 62: +\n  if (charCode == plus) {\n    return 62;\n  }\n\n  // 63: /\n  if (charCode == slash) {\n    return 63;\n  }\n\n  // Invalid base64 digit.\n  return -1;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n *\n * Based on the Base 64 VLQ implementation in Closure Compiler:\n * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\n *\n * Copyright 2011 The Closure Compiler Authors. All rights reserved.\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *  * Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *  * Neither the name of Google Inc. nor the names of its\n *    contributors may be used to endorse or promote products derived\n *    from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nvar base64 = require('./base64');\n\n// A single base 64 digit can contain 6 bits of data. For the base 64 variable\n// length quantities we use in the source map spec, the first bit is the sign,\n// the next four bits are the actual value, and the 6th bit is the\n// continuation bit. The continuation bit tells us whether there are more\n// digits in this value following this digit.\n//\n//   Continuation\n//   |    Sign\n//   |    |\n//   V    V\n//   101011\n\nvar VLQ_BASE_SHIFT = 5;\n\n// binary: 100000\nvar VLQ_BASE = 1 << VLQ_BASE_SHIFT;\n\n// binary: 011111\nvar VLQ_BASE_MASK = VLQ_BASE - 1;\n\n// binary: 100000\nvar VLQ_CONTINUATION_BIT = VLQ_BASE;\n\n/**\n * Converts from a two-complement value to a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\n *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\n */\nfunction toVLQSigned(aValue) {\n  return aValue < 0\n    ? ((-aValue) << 1) + 1\n    : (aValue << 1) + 0;\n}\n\n/**\n * Converts to a two-complement value from a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\n *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2\n */\nfunction fromVLQSigned(aValue) {\n  var isNegative = (aValue & 1) === 1;\n  var shifted = aValue >> 1;\n  return isNegative\n    ? -shifted\n    : shifted;\n}\n\n/**\n * Returns the base 64 VLQ encoded value.\n */\nexports.encode = function base64VLQ_encode(aValue) {\n  var encoded = \"\";\n  var digit;\n\n  var vlq = toVLQSigned(aValue);\n\n  do {\n    digit = vlq & VLQ_BASE_MASK;\n    vlq >>>= VLQ_BASE_SHIFT;\n    if (vlq > 0) {\n      // There are still more digits in this value, so we must make sure the\n      // continuation bit is marked.\n      digit |= VLQ_CONTINUATION_BIT;\n    }\n    encoded += base64.encode(digit);\n  } while (vlq > 0);\n\n  return encoded;\n};\n\n/**\n * Decodes the next base 64 VLQ value from the given string and returns the\n * value and the rest of the string via the out parameter.\n */\nexports.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {\n  var strLen = aStr.length;\n  var result = 0;\n  var shift = 0;\n  var continuation, digit;\n\n  do {\n    if (aIndex >= strLen) {\n      throw new Error(\"Expected more digits in base 64 VLQ value.\");\n    }\n\n    digit = base64.decode(aStr.charCodeAt(aIndex++));\n    if (digit === -1) {\n      throw new Error(\"Invalid base64 digit: \" + aStr.charAt(aIndex - 1));\n    }\n\n    continuation = !!(digit & VLQ_CONTINUATION_BIT);\n    digit &= VLQ_BASE_MASK;\n    result = result + (digit << shift);\n    shift += VLQ_BASE_SHIFT;\n  } while (continuation);\n\n  aOutParam.value = fromVLQSigned(result);\n  aOutParam.rest = aIndex;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n/**\n * This is a helper function for getting values from parameter/options\n * objects.\n *\n * @param args The object we are extracting values from\n * @param name The name of the property we are getting.\n * @param defaultValue An optional value to return if the property is missing\n * from the object. If this is not specified and the property is missing, an\n * error will be thrown.\n */\nfunction getArg(aArgs, aName, aDefaultValue) {\n  if (aName in aArgs) {\n    return aArgs[aName];\n  } else if (arguments.length === 3) {\n    return aDefaultValue;\n  } else {\n    throw new Error('\"' + aName + '\" is a required argument.');\n  }\n}\nexports.getArg = getArg;\n\nvar urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.-]*)(?::(\\d+))?(.*)$/;\nvar dataUrlRegexp = /^data:.+\\,.+$/;\n\nfunction urlParse(aUrl) {\n  var match = aUrl.match(urlRegexp);\n  if (!match) {\n    return null;\n  }\n  return {\n    scheme: match[1],\n    auth: match[2],\n    host: match[3],\n    port: match[4],\n    path: match[5]\n  };\n}\nexports.urlParse = urlParse;\n\nfunction urlGenerate(aParsedUrl) {\n  var url = '';\n  if (aParsedUrl.scheme) {\n    url += aParsedUrl.scheme + ':';\n  }\n  url += '//';\n  if (aParsedUrl.auth) {\n    url += aParsedUrl.auth + '@';\n  }\n  if (aParsedUrl.host) {\n    url += aParsedUrl.host;\n  }\n  if (aParsedUrl.port) {\n    url += \":\" + aParsedUrl.port\n  }\n  if (aParsedUrl.path) {\n    url += aParsedUrl.path;\n  }\n  return url;\n}\nexports.urlGenerate = urlGenerate;\n\n/**\n * Normalizes a path, or the path portion of a URL:\n *\n * - Replaces consecutive slashes with one slash.\n * - Removes unnecessary '.' parts.\n * - Removes unnecessary '<dir>/..' parts.\n *\n * Based on code in the Node.js 'path' core module.\n *\n * @param aPath The path or url to normalize.\n */\nfunction normalize(aPath) {\n  var path = aPath;\n  var url = urlParse(aPath);\n  if (url) {\n    if (!url.path) {\n      return aPath;\n    }\n    path = url.path;\n  }\n  var isAbsolute = exports.isAbsolute(path);\n\n  var parts = path.split(/\\/+/);\n  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {\n    part = parts[i];\n    if (part === '.') {\n      parts.splice(i, 1);\n    } else if (part === '..') {\n      up++;\n    } else if (up > 0) {\n      if (part === '') {\n        // The first part is blank if the path is absolute. Trying to go\n        // above the root is a no-op. Therefore we can remove all '..' parts\n        // directly after the root.\n        parts.splice(i + 1, up);\n        up = 0;\n      } else {\n        parts.splice(i, 2);\n        up--;\n      }\n    }\n  }\n  path = parts.join('/');\n\n  if (path === '') {\n    path = isAbsolute ? '/' : '.';\n  }\n\n  if (url) {\n    url.path = path;\n    return urlGenerate(url);\n  }\n  return path;\n}\nexports.normalize = normalize;\n\n/**\n * Joins two paths/URLs.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be joined with the root.\n *\n * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\n *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\n *   first.\n * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\n *   is updated with the result and aRoot is returned. Otherwise the result\n *   is returned.\n *   - If aPath is absolute, the result is aPath.\n *   - Otherwise the two paths are joined with a slash.\n * - Joining for example 'http://' and 'www.example.com' is also supported.\n */\nfunction join(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n  if (aPath === \"\") {\n    aPath = \".\";\n  }\n  var aPathUrl = urlParse(aPath);\n  var aRootUrl = urlParse(aRoot);\n  if (aRootUrl) {\n    aRoot = aRootUrl.path || '/';\n  }\n\n  // `join(foo, '//www.example.org')`\n  if (aPathUrl && !aPathUrl.scheme) {\n    if (aRootUrl) {\n      aPathUrl.scheme = aRootUrl.scheme;\n    }\n    return urlGenerate(aPathUrl);\n  }\n\n  if (aPathUrl || aPath.match(dataUrlRegexp)) {\n    return aPath;\n  }\n\n  // `join('http://', 'www.example.com')`\n  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\n    aRootUrl.host = aPath;\n    return urlGenerate(aRootUrl);\n  }\n\n  var joined = aPath.charAt(0) === '/'\n    ? aPath\n    : normalize(aRoot.replace(/\\/+$/, '') + '/' + aPath);\n\n  if (aRootUrl) {\n    aRootUrl.path = joined;\n    return urlGenerate(aRootUrl);\n  }\n  return joined;\n}\nexports.join = join;\n\nexports.isAbsolute = function (aPath) {\n  return aPath.charAt(0) === '/' || urlRegexp.test(aPath);\n};\n\n/**\n * Make a path relative to a URL or another path.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be made relative to aRoot.\n */\nfunction relative(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n\n  aRoot = aRoot.replace(/\\/$/, '');\n\n  // It is possible for the path to be above the root. In this case, simply\n  // checking whether the root is a prefix of the path won't work. Instead, we\n  // need to remove components from the root one by one, until either we find\n  // a prefix that fits, or we run out of components to remove.\n  var level = 0;\n  while (aPath.indexOf(aRoot + '/') !== 0) {\n    var index = aRoot.lastIndexOf(\"/\");\n    if (index < 0) {\n      return aPath;\n    }\n\n    // If the only part of the root that is left is the scheme (i.e. http://,\n    // file:///, etc.), one or more slashes (/), or simply nothing at all, we\n    // have exhausted all components, so the path is not relative to the root.\n    aRoot = aRoot.slice(0, index);\n    if (aRoot.match(/^([^\\/]+:\\/)?\\/*$/)) {\n      return aPath;\n    }\n\n    ++level;\n  }\n\n  // Make sure we add a \"../\" for each component we removed from the root.\n  return Array(level + 1).join(\"../\") + aPath.substr(aRoot.length + 1);\n}\nexports.relative = relative;\n\nvar supportsNullProto = (function () {\n  var obj = Object.create(null);\n  return !('__proto__' in obj);\n}());\n\nfunction identity (s) {\n  return s;\n}\n\n/**\n * Because behavior goes wacky when you set `__proto__` on objects, we\n * have to prefix all the strings in our set with an arbitrary character.\n *\n * See https://github.com/mozilla/source-map/pull/31 and\n * https://github.com/mozilla/source-map/issues/30\n *\n * @param String aStr\n */\nfunction toSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return '$' + aStr;\n  }\n\n  return aStr;\n}\nexports.toSetString = supportsNullProto ? identity : toSetString;\n\nfunction fromSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return aStr.slice(1);\n  }\n\n  return aStr;\n}\nexports.fromSetString = supportsNullProto ? identity : fromSetString;\n\nfunction isProtoString(s) {\n  if (!s) {\n    return false;\n  }\n\n  var length = s.length;\n\n  if (length < 9 /* \"__proto__\".length */) {\n    return false;\n  }\n\n  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 2) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 4) !== 116 /* 't' */ ||\n      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||\n      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||\n      s.charCodeAt(length - 8) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 9) !== 95  /* '_' */) {\n    return false;\n  }\n\n  for (var i = length - 10; i >= 0; i--) {\n    if (s.charCodeAt(i) !== 36 /* '$' */) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Comparator between two mappings where the original positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same original source/line/column, but different generated\n * line and column the same. Useful when searching for a mapping with a\n * stubbed out mapping.\n */\nfunction compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\n  var cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0 || onlyCompareOriginal) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByOriginalPositions = compareByOriginalPositions;\n\n/**\n * Comparator between two mappings with deflated source and name indices where\n * the generated positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same generated line and column, but different\n * source/name/original line and column the same. Useful when searching for a\n * mapping with a stubbed out mapping.\n */\nfunction compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0 || onlyCompareGenerated) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;\n\nfunction strcmp(aStr1, aStr2) {\n  if (aStr1 === aStr2) {\n    return 0;\n  }\n\n  if (aStr1 === null) {\n    return 1; // aStr2 !== null\n  }\n\n  if (aStr2 === null) {\n    return -1; // aStr1 !== null\n  }\n\n  if (aStr1 > aStr2) {\n    return 1;\n  }\n\n  return -1;\n}\n\n/**\n * Comparator between two mappings with inflated source and name strings where\n * the generated positions are compared.\n */\nfunction compareByGeneratedPositionsInflated(mappingA, mappingB) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;\n\n/**\n * Strip any JSON XSSI avoidance prefix from the string (as documented\n * in the source maps specification), and then parse the string as\n * JSON.\n */\nfunction parseSourceMapInput(str) {\n  return JSON.parse(str.replace(/^\\)]}'[^\\n]*\\n/, ''));\n}\nexports.parseSourceMapInput = parseSourceMapInput;\n\n/**\n * Compute the URL of a source given the the source root, the source's\n * URL, and the source map's URL.\n */\nfunction computeSourceURL(sourceRoot, sourceURL, sourceMapURL) {\n  sourceURL = sourceURL || '';\n\n  if (sourceRoot) {\n    // This follows what Chrome does.\n    if (sourceRoot[sourceRoot.length - 1] !== '/' && sourceURL[0] !== '/') {\n      sourceRoot += '/';\n    }\n    // The spec says:\n    //   Line 4: An optional source root, useful for relocating source\n    //   files on a server or removing repeated values in the\n    //   “sources” entry.  This value is prepended to the individual\n    //   entries in the “source” field.\n    sourceURL = sourceRoot + sourceURL;\n  }\n\n  // Historically, SourceMapConsumer did not take the sourceMapURL as\n  // a parameter.  This mode is still somewhat supported, which is why\n  // this code block is conditional.  However, it's preferable to pass\n  // the source map URL to SourceMapConsumer, so that this function\n  // can implement the source URL resolution algorithm as outlined in\n  // the spec.  This block is basically the equivalent of:\n  //    new URL(sourceURL, sourceMapURL).toString()\n  // ... except it avoids using URL, which wasn't available in the\n  // older releases of node still supported by this library.\n  //\n  // The spec says:\n  //   If the sources are not absolute URLs after prepending of the\n  //   “sourceRoot”, the sources are resolved relative to the\n  //   SourceMap (like resolving script src in a html document).\n  if (sourceMapURL) {\n    var parsed = urlParse(sourceMapURL);\n    if (!parsed) {\n      throw new Error(\"sourceMapURL could not be parsed\");\n    }\n    if (parsed.path) {\n      // Strip the last path component, but keep the \"/\".\n      var index = parsed.path.lastIndexOf('/');\n      if (index >= 0) {\n        parsed.path = parsed.path.substring(0, index + 1);\n      }\n    }\n    sourceURL = join(urlGenerate(parsed), sourceURL);\n  }\n\n  return normalize(sourceURL);\n}\nexports.computeSourceURL = computeSourceURL;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar has = Object.prototype.hasOwnProperty;\nvar hasNativeMap = typeof Map !== \"undefined\";\n\n/**\n * A data structure which is a combination of an array and a set. Adding a new\n * member is O(1), testing for membership is O(1), and finding the index of an\n * element is O(1). Removing elements from the set is not supported. Only\n * strings are supported for membership.\n */\nfunction ArraySet() {\n  this._array = [];\n  this._set = hasNativeMap ? new Map() : Object.create(null);\n}\n\n/**\n * Static method for creating ArraySet instances from an existing array.\n */\nArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\n  var set = new ArraySet();\n  for (var i = 0, len = aArray.length; i < len; i++) {\n    set.add(aArray[i], aAllowDuplicates);\n  }\n  return set;\n};\n\n/**\n * Return how many unique items are in this ArraySet. If duplicates have been\n * added, than those do not count towards the size.\n *\n * @returns Number\n */\nArraySet.prototype.size = function ArraySet_size() {\n  return hasNativeMap ? this._set.size : Object.getOwnPropertyNames(this._set).length;\n};\n\n/**\n * Add the given string to this set.\n *\n * @param String aStr\n */\nArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\n  var sStr = hasNativeMap ? aStr : util.toSetString(aStr);\n  var isDuplicate = hasNativeMap ? this.has(aStr) : has.call(this._set, sStr);\n  var idx = this._array.length;\n  if (!isDuplicate || aAllowDuplicates) {\n    this._array.push(aStr);\n  }\n  if (!isDuplicate) {\n    if (hasNativeMap) {\n      this._set.set(aStr, idx);\n    } else {\n      this._set[sStr] = idx;\n    }\n  }\n};\n\n/**\n * Is the given string a member of this set?\n *\n * @param String aStr\n */\nArraySet.prototype.has = function ArraySet_has(aStr) {\n  if (hasNativeMap) {\n    return this._set.has(aStr);\n  } else {\n    var sStr = util.toSetString(aStr);\n    return has.call(this._set, sStr);\n  }\n};\n\n/**\n * What is the index of the given string in the array?\n *\n * @param String aStr\n */\nArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {\n  if (hasNativeMap) {\n    var idx = this._set.get(aStr);\n    if (idx >= 0) {\n        return idx;\n    }\n  } else {\n    var sStr = util.toSetString(aStr);\n    if (has.call(this._set, sStr)) {\n      return this._set[sStr];\n    }\n  }\n\n  throw new Error('\"' + aStr + '\" is not in the set.');\n};\n\n/**\n * What is the element at the given index?\n *\n * @param Number aIdx\n */\nArraySet.prototype.at = function ArraySet_at(aIdx) {\n  if (aIdx >= 0 && aIdx < this._array.length) {\n    return this._array[aIdx];\n  }\n  throw new Error('No element indexed by ' + aIdx);\n};\n\n/**\n * Returns the array representation of this set (which has the proper indices\n * indicated by indexOf). Note that this is a copy of the internal array used\n * for storing the members so that no one can mess with internal state.\n */\nArraySet.prototype.toArray = function ArraySet_toArray() {\n  return this._array.slice();\n};\n\nexports.ArraySet = ArraySet;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nexports.GREATEST_LOWER_BOUND = 1;\nexports.LEAST_UPPER_BOUND = 2;\n\n/**\n * Recursive implementation of binary search.\n *\n * @param aLow Indices here and lower do not contain the needle.\n * @param aHigh Indices here and higher do not contain the needle.\n * @param aNeedle The element being searched for.\n * @param aHaystack The non-empty array being searched.\n * @param aCompare Function which takes two elements and returns -1, 0, or 1.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n */\nfunction recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {\n  // This function terminates when one of the following is true:\n  //\n  //   1. We find the exact element we are looking for.\n  //\n  //   2. We did not find the exact element, but we can return the index of\n  //      the next-closest element.\n  //\n  //   3. We did not find the exact element, and there is no next-closest\n  //      element than the one we are searching for, so we return -1.\n  var mid = Math.floor((aHigh - aLow) / 2) + aLow;\n  var cmp = aCompare(aNeedle, aHaystack[mid], true);\n  if (cmp === 0) {\n    // Found the element we are looking for.\n    return mid;\n  }\n  else if (cmp > 0) {\n    // Our needle is greater than aHaystack[mid].\n    if (aHigh - mid > 1) {\n      // The element is in the upper half.\n      return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // The exact needle element was not found in this haystack. Determine if\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return aHigh < aHaystack.length ? aHigh : -1;\n    } else {\n      return mid;\n    }\n  }\n  else {\n    // Our needle is less than aHaystack[mid].\n    if (mid - aLow > 1) {\n      // The element is in the lower half.\n      return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return mid;\n    } else {\n      return aLow < 0 ? -1 : aLow;\n    }\n  }\n}\n\n/**\n * This is an implementation of binary search which will always try and return\n * the index of the closest element if there is no exact hit. This is because\n * mappings between original and generated line/col pairs are single points,\n * and there is an implicit region between each of them, so a miss just means\n * that you aren't on the very start of a region.\n *\n * @param aNeedle The element you are looking for.\n * @param aHaystack The array that is being searched.\n * @param aCompare A function which takes the needle and an element in the\n *     array and returns -1, 0, or 1 depending on whether the needle is less\n *     than, equal to, or greater than the element, respectively.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.\n */\nexports.search = function search(aNeedle, aHaystack, aCompare, aBias) {\n  if (aHaystack.length === 0) {\n    return -1;\n  }\n\n  var index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack,\n                              aCompare, aBias || exports.GREATEST_LOWER_BOUND);\n  if (index < 0) {\n    return -1;\n  }\n\n  // We have found either the exact element, or the next-closest element than\n  // the one we are searching for. However, there may be more than one such\n  // element. Make sure we always return the smallest of these.\n  while (index - 1 >= 0) {\n    if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {\n      break;\n    }\n    --index;\n  }\n\n  return index;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n// It turns out that some (most?) JavaScript engines don't self-host\n// `Array.prototype.sort`. This makes sense because C++ will likely remain\n// faster than JS when doing raw CPU-intensive sorting. However, when using a\n// custom comparator function, calling back and forth between the VM's C++ and\n// JIT'd JS is rather slow *and* loses JIT type information, resulting in\n// worse generated code for the comparator function than would be optimal. In\n// fact, when sorting with a comparator, these costs outweigh the benefits of\n// sorting in C++. By using our own JS-implemented Quick Sort (below), we get\n// a ~3500ms mean speed-up in `bench/bench.html`.\n\n/**\n * Swap the elements indexed by `x` and `y` in the array `ary`.\n *\n * @param {Array} ary\n *        The array.\n * @param {Number} x\n *        The index of the first item.\n * @param {Number} y\n *        The index of the second item.\n */\nfunction swap(ary, x, y) {\n  var temp = ary[x];\n  ary[x] = ary[y];\n  ary[y] = temp;\n}\n\n/**\n * Returns a random integer within the range `low .. high` inclusive.\n *\n * @param {Number} low\n *        The lower bound on the range.\n * @param {Number} high\n *        The upper bound on the range.\n */\nfunction randomIntInRange(low, high) {\n  return Math.round(low + (Math.random() * (high - low)));\n}\n\n/**\n * The Quick Sort algorithm.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n * @param {Number} p\n *        Start index of the array\n * @param {Number} r\n *        End index of the array\n */\nfunction doQuickSort(ary, comparator, p, r) {\n  // If our lower bound is less than our upper bound, we (1) partition the\n  // array into two pieces and (2) recurse on each half. If it is not, this is\n  // the empty array and our base case.\n\n  if (p < r) {\n    // (1) Partitioning.\n    //\n    // The partitioning chooses a pivot between `p` and `r` and moves all\n    // elements that are less than or equal to the pivot to the before it, and\n    // all the elements that are greater than it after it. The effect is that\n    // once partition is done, the pivot is in the exact place it will be when\n    // the array is put in sorted order, and it will not need to be moved\n    // again. This runs in O(n) time.\n\n    // Always choose a random pivot so that an input array which is reverse\n    // sorted does not cause O(n^2) running time.\n    var pivotIndex = randomIntInRange(p, r);\n    var i = p - 1;\n\n    swap(ary, pivotIndex, r);\n    var pivot = ary[r];\n\n    // Immediately after `j` is incremented in this loop, the following hold\n    // true:\n    //\n    //   * Every element in `ary[p .. i]` is less than or equal to the pivot.\n    //\n    //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.\n    for (var j = p; j < r; j++) {\n      if (comparator(ary[j], pivot) <= 0) {\n        i += 1;\n        swap(ary, i, j);\n      }\n    }\n\n    swap(ary, i + 1, j);\n    var q = i + 1;\n\n    // (2) Recurse on each half.\n\n    doQuickSort(ary, comparator, p, q - 1);\n    doQuickSort(ary, comparator, q + 1, r);\n  }\n}\n\n/**\n * Sort the given array in-place with the given comparator function.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n */\nexports.quickSort = function (ary, comparator) {\n  doQuickSort(ary, comparator, 0, ary.length - 1);\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar binarySearch = require('./binary-search');\nvar ArraySet = require('./array-set').ArraySet;\nvar base64VLQ = require('./base64-vlq');\nvar quickSort = require('./quick-sort').quickSort;\n\nfunction SourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  return sourceMap.sections != null\n    ? new IndexedSourceMapConsumer(sourceMap, aSourceMapURL)\n    : new BasicSourceMapConsumer(sourceMap, aSourceMapURL);\n}\n\nSourceMapConsumer.fromSourceMap = function(aSourceMap, aSourceMapURL) {\n  return BasicSourceMapConsumer.fromSourceMap(aSourceMap, aSourceMapURL);\n}\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nSourceMapConsumer.prototype._version = 3;\n\n// `__generatedMappings` and `__originalMappings` are arrays that hold the\n// parsed mapping coordinates from the source map's \"mappings\" attribute. They\n// are lazily instantiated, accessed via the `_generatedMappings` and\n// `_originalMappings` getters respectively, and we only parse the mappings\n// and create these arrays once queried for a source location. We jump through\n// these hoops because there can be many thousands of mappings, and parsing\n// them is expensive, so we only want to do it if we must.\n//\n// Each object in the arrays is of the form:\n//\n//     {\n//       generatedLine: The line number in the generated code,\n//       generatedColumn: The column number in the generated code,\n//       source: The path to the original source file that generated this\n//               chunk of code,\n//       originalLine: The line number in the original source that\n//                     corresponds to this chunk of generated code,\n//       originalColumn: The column number in the original source that\n//                       corresponds to this chunk of generated code,\n//       name: The name of the original symbol which generated this chunk of\n//             code.\n//     }\n//\n// All properties except for `generatedLine` and `generatedColumn` can be\n// `null`.\n//\n// `_generatedMappings` is ordered by the generated positions.\n//\n// `_originalMappings` is ordered by the original positions.\n\nSourceMapConsumer.prototype.__generatedMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_generatedMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__generatedMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__generatedMappings;\n  }\n});\n\nSourceMapConsumer.prototype.__originalMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_originalMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__originalMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__originalMappings;\n  }\n});\n\nSourceMapConsumer.prototype._charIsMappingSeparator =\n  function SourceMapConsumer_charIsMappingSeparator(aStr, index) {\n    var c = aStr.charAt(index);\n    return c === \";\" || c === \",\";\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    throw new Error(\"Subclasses must implement _parseMappings\");\n  };\n\nSourceMapConsumer.GENERATED_ORDER = 1;\nSourceMapConsumer.ORIGINAL_ORDER = 2;\n\nSourceMapConsumer.GREATEST_LOWER_BOUND = 1;\nSourceMapConsumer.LEAST_UPPER_BOUND = 2;\n\n/**\n * Iterate over each mapping between an original source/line/column and a\n * generated line/column in this source map.\n *\n * @param Function aCallback\n *        The function that is called with each mapping.\n * @param Object aContext\n *        Optional. If specified, this object will be the value of `this` every\n *        time that `aCallback` is called.\n * @param aOrder\n *        Either `SourceMapConsumer.GENERATED_ORDER` or\n *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to\n *        iterate over the mappings sorted by the generated file's line/column\n *        order or the original's source/line/column order, respectively. Defaults to\n *        `SourceMapConsumer.GENERATED_ORDER`.\n */\nSourceMapConsumer.prototype.eachMapping =\n  function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {\n    var context = aContext || null;\n    var order = aOrder || SourceMapConsumer.GENERATED_ORDER;\n\n    var mappings;\n    switch (order) {\n    case SourceMapConsumer.GENERATED_ORDER:\n      mappings = this._generatedMappings;\n      break;\n    case SourceMapConsumer.ORIGINAL_ORDER:\n      mappings = this._originalMappings;\n      break;\n    default:\n      throw new Error(\"Unknown order of iteration.\");\n    }\n\n    var sourceRoot = this.sourceRoot;\n    mappings.map(function (mapping) {\n      var source = mapping.source === null ? null : this._sources.at(mapping.source);\n      source = util.computeSourceURL(sourceRoot, source, this._sourceMapURL);\n      return {\n        source: source,\n        generatedLine: mapping.generatedLine,\n        generatedColumn: mapping.generatedColumn,\n        originalLine: mapping.originalLine,\n        originalColumn: mapping.originalColumn,\n        name: mapping.name === null ? null : this._names.at(mapping.name)\n      };\n    }, this).forEach(aCallback, context);\n  };\n\n/**\n * Returns all generated line and column information for the original source,\n * line, and column provided. If no column is provided, returns all mappings\n * corresponding to a either the line we are searching for or the next\n * closest line that has any mappings. Otherwise, returns all mappings\n * corresponding to the given line and either the column we are searching for\n * or the next closest column that has any offsets.\n *\n * The only argument is an object with the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number is 1-based.\n *   - column: Optional. the column number in the original source.\n *    The column number is 0-based.\n *\n * and an array of objects is returned, each with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *    line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *    The column number is 0-based.\n */\nSourceMapConsumer.prototype.allGeneratedPositionsFor =\n  function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {\n    var line = util.getArg(aArgs, 'line');\n\n    // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping\n    // returns the index of the closest mapping less than the needle. By\n    // setting needle.originalColumn to 0, we thus find the last mapping for\n    // the given line, provided such a mapping exists.\n    var needle = {\n      source: util.getArg(aArgs, 'source'),\n      originalLine: line,\n      originalColumn: util.getArg(aArgs, 'column', 0)\n    };\n\n    needle.source = this._findSourceIndex(needle.source);\n    if (needle.source < 0) {\n      return [];\n    }\n\n    var mappings = [];\n\n    var index = this._findMapping(needle,\n                                  this._originalMappings,\n                                  \"originalLine\",\n                                  \"originalColumn\",\n                                  util.compareByOriginalPositions,\n                                  binarySearch.LEAST_UPPER_BOUND);\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (aArgs.column === undefined) {\n        var originalLine = mapping.originalLine;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we found. Since\n        // mappings are sorted, this is guaranteed to find all mappings for\n        // the line we found.\n        while (mapping && mapping.originalLine === originalLine) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      } else {\n        var originalColumn = mapping.originalColumn;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we were searching for.\n        // Since mappings are sorted, this is guaranteed to find all mappings for\n        // the line we are searching for.\n        while (mapping &&\n               mapping.originalLine === line &&\n               mapping.originalColumn == originalColumn) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      }\n    }\n\n    return mappings;\n  };\n\nexports.SourceMapConsumer = SourceMapConsumer;\n\n/**\n * A BasicSourceMapConsumer instance represents a parsed source map which we can\n * query for information about the original file positions by giving it a file\n * position in the generated source.\n *\n * The first parameter is the raw source map (either as a JSON string, or\n * already parsed to an object). According to the spec, source maps have the\n * following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - sources: An array of URLs to the original source files.\n *   - names: An array of identifiers which can be referrenced by individual mappings.\n *   - sourceRoot: Optional. The URL root from which all sources are relative.\n *   - sourcesContent: Optional. An array of contents of the original source files.\n *   - mappings: A string of base64 VLQs which contain the actual mappings.\n *   - file: Optional. The generated file this source map is associated with.\n *\n * Here is an example source map, taken from the source map spec[0]:\n *\n *     {\n *       version : 3,\n *       file: \"out.js\",\n *       sourceRoot : \"\",\n *       sources: [\"foo.js\", \"bar.js\"],\n *       names: [\"src\", \"maps\", \"are\", \"fun\"],\n *       mappings: \"AA,AB;;ABCDE;\"\n *     }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#\n */\nfunction BasicSourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sources = util.getArg(sourceMap, 'sources');\n  // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which\n  // requires the array) to play nice here.\n  var names = util.getArg(sourceMap, 'names', []);\n  var sourceRoot = util.getArg(sourceMap, 'sourceRoot', null);\n  var sourcesContent = util.getArg(sourceMap, 'sourcesContent', null);\n  var mappings = util.getArg(sourceMap, 'mappings');\n  var file = util.getArg(sourceMap, 'file', null);\n\n  // Once again, Sass deviates from the spec and supplies the version as a\n  // string rather than a number, so we use loose equality checking here.\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  if (sourceRoot) {\n    sourceRoot = util.normalize(sourceRoot);\n  }\n\n  sources = sources\n    .map(String)\n    // Some source maps produce relative source paths like \"./foo.js\" instead of\n    // \"foo.js\".  Normalize these first so that future comparisons will succeed.\n    // See bugzil.la/1090768.\n    .map(util.normalize)\n    // Always ensure that absolute sources are internally stored relative to\n    // the source root, if the source root is absolute. Not doing this would\n    // be particularly problematic when the source root is a prefix of the\n    // source (valid, but why??). See github issue #199 and bugzil.la/1188982.\n    .map(function (source) {\n      return sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source)\n        ? util.relative(sourceRoot, source)\n        : source;\n    });\n\n  // Pass `true` below to allow duplicate names and sources. While source maps\n  // are intended to be compressed and deduplicated, the TypeScript compiler\n  // sometimes generates source maps with duplicates in them. See Github issue\n  // #72 and bugzil.la/889492.\n  this._names = ArraySet.fromArray(names.map(String), true);\n  this._sources = ArraySet.fromArray(sources, true);\n\n  this._absoluteSources = this._sources.toArray().map(function (s) {\n    return util.computeSourceURL(sourceRoot, s, aSourceMapURL);\n  });\n\n  this.sourceRoot = sourceRoot;\n  this.sourcesContent = sourcesContent;\n  this._mappings = mappings;\n  this._sourceMapURL = aSourceMapURL;\n  this.file = file;\n}\n\nBasicSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nBasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;\n\n/**\n * Utility function to find the index of a source.  Returns -1 if not\n * found.\n */\nBasicSourceMapConsumer.prototype._findSourceIndex = function(aSource) {\n  var relativeSource = aSource;\n  if (this.sourceRoot != null) {\n    relativeSource = util.relative(this.sourceRoot, relativeSource);\n  }\n\n  if (this._sources.has(relativeSource)) {\n    return this._sources.indexOf(relativeSource);\n  }\n\n  // Maybe aSource is an absolute URL as returned by |sources|.  In\n  // this case we can't simply undo the transform.\n  var i;\n  for (i = 0; i < this._absoluteSources.length; ++i) {\n    if (this._absoluteSources[i] == aSource) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\n/**\n * Create a BasicSourceMapConsumer from a SourceMapGenerator.\n *\n * @param SourceMapGenerator aSourceMap\n *        The source map that will be consumed.\n * @param String aSourceMapURL\n *        The URL at which the source map can be found (optional)\n * @returns BasicSourceMapConsumer\n */\nBasicSourceMapConsumer.fromSourceMap =\n  function SourceMapConsumer_fromSourceMap(aSourceMap, aSourceMapURL) {\n    var smc = Object.create(BasicSourceMapConsumer.prototype);\n\n    var names = smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);\n    var sources = smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);\n    smc.sourceRoot = aSourceMap._sourceRoot;\n    smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),\n                                                            smc.sourceRoot);\n    smc.file = aSourceMap._file;\n    smc._sourceMapURL = aSourceMapURL;\n    smc._absoluteSources = smc._sources.toArray().map(function (s) {\n      return util.computeSourceURL(smc.sourceRoot, s, aSourceMapURL);\n    });\n\n    // Because we are modifying the entries (by converting string sources and\n    // names to indices into the sources and names ArraySets), we have to make\n    // a copy of the entry or else bad things happen. Shared mutable state\n    // strikes again! See github issue #191.\n\n    var generatedMappings = aSourceMap._mappings.toArray().slice();\n    var destGeneratedMappings = smc.__generatedMappings = [];\n    var destOriginalMappings = smc.__originalMappings = [];\n\n    for (var i = 0, length = generatedMappings.length; i < length; i++) {\n      var srcMapping = generatedMappings[i];\n      var destMapping = new Mapping;\n      destMapping.generatedLine = srcMapping.generatedLine;\n      destMapping.generatedColumn = srcMapping.generatedColumn;\n\n      if (srcMapping.source) {\n        destMapping.source = sources.indexOf(srcMapping.source);\n        destMapping.originalLine = srcMapping.originalLine;\n        destMapping.originalColumn = srcMapping.originalColumn;\n\n        if (srcMapping.name) {\n          destMapping.name = names.indexOf(srcMapping.name);\n        }\n\n        destOriginalMappings.push(destMapping);\n      }\n\n      destGeneratedMappings.push(destMapping);\n    }\n\n    quickSort(smc.__originalMappings, util.compareByOriginalPositions);\n\n    return smc;\n  };\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nBasicSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(BasicSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    return this._absoluteSources.slice();\n  }\n});\n\n/**\n * Provide the JIT with a nice shape / hidden class.\n */\nfunction Mapping() {\n  this.generatedLine = 0;\n  this.generatedColumn = 0;\n  this.source = null;\n  this.originalLine = null;\n  this.originalColumn = null;\n  this.name = null;\n}\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nBasicSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    var generatedLine = 1;\n    var previousGeneratedColumn = 0;\n    var previousOriginalLine = 0;\n    var previousOriginalColumn = 0;\n    var previousSource = 0;\n    var previousName = 0;\n    var length = aStr.length;\n    var index = 0;\n    var cachedSegments = {};\n    var temp = {};\n    var originalMappings = [];\n    var generatedMappings = [];\n    var mapping, str, segment, end, value;\n\n    while (index < length) {\n      if (aStr.charAt(index) === ';') {\n        generatedLine++;\n        index++;\n        previousGeneratedColumn = 0;\n      }\n      else if (aStr.charAt(index) === ',') {\n        index++;\n      }\n      else {\n        mapping = new Mapping();\n        mapping.generatedLine = generatedLine;\n\n        // Because each offset is encoded relative to the previous one,\n        // many segments often have the same encoding. We can exploit this\n        // fact by caching the parsed variable length fields of each segment,\n        // allowing us to avoid a second parse if we encounter the same\n        // segment again.\n        for (end = index; end < length; end++) {\n          if (this._charIsMappingSeparator(aStr, end)) {\n            break;\n          }\n        }\n        str = aStr.slice(index, end);\n\n        segment = cachedSegments[str];\n        if (segment) {\n          index += str.length;\n        } else {\n          segment = [];\n          while (index < end) {\n            base64VLQ.decode(aStr, index, temp);\n            value = temp.value;\n            index = temp.rest;\n            segment.push(value);\n          }\n\n          if (segment.length === 2) {\n            throw new Error('Found a source, but no line and column');\n          }\n\n          if (segment.length === 3) {\n            throw new Error('Found a source and line, but no column');\n          }\n\n          cachedSegments[str] = segment;\n        }\n\n        // Generated column.\n        mapping.generatedColumn = previousGeneratedColumn + segment[0];\n        previousGeneratedColumn = mapping.generatedColumn;\n\n        if (segment.length > 1) {\n          // Original source.\n          mapping.source = previousSource + segment[1];\n          previousSource += segment[1];\n\n          // Original line.\n          mapping.originalLine = previousOriginalLine + segment[2];\n          previousOriginalLine = mapping.originalLine;\n          // Lines are stored 0-based\n          mapping.originalLine += 1;\n\n          // Original column.\n          mapping.originalColumn = previousOriginalColumn + segment[3];\n          previousOriginalColumn = mapping.originalColumn;\n\n          if (segment.length > 4) {\n            // Original name.\n            mapping.name = previousName + segment[4];\n            previousName += segment[4];\n          }\n        }\n\n        generatedMappings.push(mapping);\n        if (typeof mapping.originalLine === 'number') {\n          originalMappings.push(mapping);\n        }\n      }\n    }\n\n    quickSort(generatedMappings, util.compareByGeneratedPositionsDeflated);\n    this.__generatedMappings = generatedMappings;\n\n    quickSort(originalMappings, util.compareByOriginalPositions);\n    this.__originalMappings = originalMappings;\n  };\n\n/**\n * Find the mapping that best matches the hypothetical \"needle\" mapping that\n * we are searching for in the given \"haystack\" of mappings.\n */\nBasicSourceMapConsumer.prototype._findMapping =\n  function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,\n                                         aColumnName, aComparator, aBias) {\n    // To return the position we are searching for, we must first find the\n    // mapping for the given position and then return the opposite position it\n    // points to. Because the mappings are sorted, we can use binary search to\n    // find the best mapping.\n\n    if (aNeedle[aLineName] <= 0) {\n      throw new TypeError('Line must be greater than or equal to 1, got '\n                          + aNeedle[aLineName]);\n    }\n    if (aNeedle[aColumnName] < 0) {\n      throw new TypeError('Column must be greater than or equal to 0, got '\n                          + aNeedle[aColumnName]);\n    }\n\n    return binarySearch.search(aNeedle, aMappings, aComparator, aBias);\n  };\n\n/**\n * Compute the last column for each generated mapping. The last column is\n * inclusive.\n */\nBasicSourceMapConsumer.prototype.computeColumnSpans =\n  function SourceMapConsumer_computeColumnSpans() {\n    for (var index = 0; index < this._generatedMappings.length; ++index) {\n      var mapping = this._generatedMappings[index];\n\n      // Mappings do not contain a field for the last generated columnt. We\n      // can come up with an optimistic estimate, however, by assuming that\n      // mappings are contiguous (i.e. given two consecutive mappings, the\n      // first mapping ends where the second one starts).\n      if (index + 1 < this._generatedMappings.length) {\n        var nextMapping = this._generatedMappings[index + 1];\n\n        if (mapping.generatedLine === nextMapping.generatedLine) {\n          mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;\n          continue;\n        }\n      }\n\n      // The last mapping for each line spans the entire line.\n      mapping.lastGeneratedColumn = Infinity;\n    }\n  };\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nBasicSourceMapConsumer.prototype.originalPositionFor =\n  function SourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._generatedMappings,\n      \"generatedLine\",\n      \"generatedColumn\",\n      util.compareByGeneratedPositionsDeflated,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._generatedMappings[index];\n\n      if (mapping.generatedLine === needle.generatedLine) {\n        var source = util.getArg(mapping, 'source', null);\n        if (source !== null) {\n          source = this._sources.at(source);\n          source = util.computeSourceURL(this.sourceRoot, source, this._sourceMapURL);\n        }\n        var name = util.getArg(mapping, 'name', null);\n        if (name !== null) {\n          name = this._names.at(name);\n        }\n        return {\n          source: source,\n          line: util.getArg(mapping, 'originalLine', null),\n          column: util.getArg(mapping, 'originalColumn', null),\n          name: name\n        };\n      }\n    }\n\n    return {\n      source: null,\n      line: null,\n      column: null,\n      name: null\n    };\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nBasicSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function BasicSourceMapConsumer_hasContentsOfAllSources() {\n    if (!this.sourcesContent) {\n      return false;\n    }\n    return this.sourcesContent.length >= this._sources.size() &&\n      !this.sourcesContent.some(function (sc) { return sc == null; });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nBasicSourceMapConsumer.prototype.sourceContentFor =\n  function SourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    if (!this.sourcesContent) {\n      return null;\n    }\n\n    var index = this._findSourceIndex(aSource);\n    if (index >= 0) {\n      return this.sourcesContent[index];\n    }\n\n    var relativeSource = aSource;\n    if (this.sourceRoot != null) {\n      relativeSource = util.relative(this.sourceRoot, relativeSource);\n    }\n\n    var url;\n    if (this.sourceRoot != null\n        && (url = util.urlParse(this.sourceRoot))) {\n      // XXX: file:// URIs and absolute paths lead to unexpected behavior for\n      // many users. We can help them out when they expect file:// URIs to\n      // behave like it would if they were running a local HTTP server. See\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.\n      var fileUriAbsPath = relativeSource.replace(/^file:\\/\\//, \"\");\n      if (url.scheme == \"file\"\n          && this._sources.has(fileUriAbsPath)) {\n        return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]\n      }\n\n      if ((!url.path || url.path == \"/\")\n          && this._sources.has(\"/\" + relativeSource)) {\n        return this.sourcesContent[this._sources.indexOf(\"/\" + relativeSource)];\n      }\n    }\n\n    // This function is used recursively from\n    // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we\n    // don't want to throw if we can't find the source - we just want to\n    // return null, so we provide a flag to exit gracefully.\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + relativeSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nBasicSourceMapConsumer.prototype.generatedPositionFor =\n  function SourceMapConsumer_generatedPositionFor(aArgs) {\n    var source = util.getArg(aArgs, 'source');\n    source = this._findSourceIndex(source);\n    if (source < 0) {\n      return {\n        line: null,\n        column: null,\n        lastColumn: null\n      };\n    }\n\n    var needle = {\n      source: source,\n      originalLine: util.getArg(aArgs, 'line'),\n      originalColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._originalMappings,\n      \"originalLine\",\n      \"originalColumn\",\n      util.compareByOriginalPositions,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (mapping.source === needle.source) {\n        return {\n          line: util.getArg(mapping, 'generatedLine', null),\n          column: util.getArg(mapping, 'generatedColumn', null),\n          lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n        };\n      }\n    }\n\n    return {\n      line: null,\n      column: null,\n      lastColumn: null\n    };\n  };\n\nexports.BasicSourceMapConsumer = BasicSourceMapConsumer;\n\n/**\n * An IndexedSourceMapConsumer instance represents a parsed source map which\n * we can query for information. It differs from BasicSourceMapConsumer in\n * that it takes \"indexed\" source maps (i.e. ones with a \"sections\" field) as\n * input.\n *\n * The first parameter is a raw source map (either as a JSON string, or already\n * parsed to an object). According to the spec for indexed source maps, they\n * have the following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - file: Optional. The generated file this source map is associated with.\n *   - sections: A list of section definitions.\n *\n * Each value under the \"sections\" field has two fields:\n *   - offset: The offset into the original specified at which this section\n *       begins to apply, defined as an object with a \"line\" and \"column\"\n *       field.\n *   - map: A source map definition. This source map could also be indexed,\n *       but doesn't have to be.\n *\n * Instead of the \"map\" field, it's also possible to have a \"url\" field\n * specifying a URL to retrieve a source map from, but that's currently\n * unsupported.\n *\n * Here's an example source map, taken from the source map spec[0], but\n * modified to omit a section which uses the \"url\" field.\n *\n *  {\n *    version : 3,\n *    file: \"app.js\",\n *    sections: [{\n *      offset: {line:100, column:10},\n *      map: {\n *        version : 3,\n *        file: \"section.js\",\n *        sources: [\"foo.js\", \"bar.js\"],\n *        names: [\"src\", \"maps\", \"are\", \"fun\"],\n *        mappings: \"AAAA,E;;ABCDE;\"\n *      }\n *    }],\n *  }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt\n */\nfunction IndexedSourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sections = util.getArg(sourceMap, 'sections');\n\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n\n  var lastOffset = {\n    line: -1,\n    column: 0\n  };\n  this._sections = sections.map(function (s) {\n    if (s.url) {\n      // The url field will require support for asynchronicity.\n      // See https://github.com/mozilla/source-map/issues/16\n      throw new Error('Support for url field in sections not implemented.');\n    }\n    var offset = util.getArg(s, 'offset');\n    var offsetLine = util.getArg(offset, 'line');\n    var offsetColumn = util.getArg(offset, 'column');\n\n    if (offsetLine < lastOffset.line ||\n        (offsetLine === lastOffset.line && offsetColumn < lastOffset.column)) {\n      throw new Error('Section offsets must be ordered and non-overlapping.');\n    }\n    lastOffset = offset;\n\n    return {\n      generatedOffset: {\n        // The offset fields are 0-based, but we use 1-based indices when\n        // encoding/decoding from VLQ.\n        generatedLine: offsetLine + 1,\n        generatedColumn: offsetColumn + 1\n      },\n      consumer: new SourceMapConsumer(util.getArg(s, 'map'), aSourceMapURL)\n    }\n  });\n}\n\nIndexedSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nIndexedSourceMapConsumer.prototype.constructor = SourceMapConsumer;\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nIndexedSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(IndexedSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    var sources = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {\n        sources.push(this._sections[i].consumer.sources[j]);\n      }\n    }\n    return sources;\n  }\n});\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nIndexedSourceMapConsumer.prototype.originalPositionFor =\n  function IndexedSourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    // Find the section containing the generated position we're trying to map\n    // to an original position.\n    var sectionIndex = binarySearch.search(needle, this._sections,\n      function(needle, section) {\n        var cmp = needle.generatedLine - section.generatedOffset.generatedLine;\n        if (cmp) {\n          return cmp;\n        }\n\n        return (needle.generatedColumn -\n                section.generatedOffset.generatedColumn);\n      });\n    var section = this._sections[sectionIndex];\n\n    if (!section) {\n      return {\n        source: null,\n        line: null,\n        column: null,\n        name: null\n      };\n    }\n\n    return section.consumer.originalPositionFor({\n      line: needle.generatedLine -\n        (section.generatedOffset.generatedLine - 1),\n      column: needle.generatedColumn -\n        (section.generatedOffset.generatedLine === needle.generatedLine\n         ? section.generatedOffset.generatedColumn - 1\n         : 0),\n      bias: aArgs.bias\n    });\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nIndexedSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function IndexedSourceMapConsumer_hasContentsOfAllSources() {\n    return this._sections.every(function (s) {\n      return s.consumer.hasContentsOfAllSources();\n    });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nIndexedSourceMapConsumer.prototype.sourceContentFor =\n  function IndexedSourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      var content = section.consumer.sourceContentFor(aSource, true);\n      if (content) {\n        return content;\n      }\n    }\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based. \n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nIndexedSourceMapConsumer.prototype.generatedPositionFor =\n  function IndexedSourceMapConsumer_generatedPositionFor(aArgs) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      // Only consider this section if the requested source is in the list of\n      // sources of the consumer.\n      if (section.consumer._findSourceIndex(util.getArg(aArgs, 'source')) === -1) {\n        continue;\n      }\n      var generatedPosition = section.consumer.generatedPositionFor(aArgs);\n      if (generatedPosition) {\n        var ret = {\n          line: generatedPosition.line +\n            (section.generatedOffset.generatedLine - 1),\n          column: generatedPosition.column +\n            (section.generatedOffset.generatedLine === generatedPosition.line\n             ? section.generatedOffset.generatedColumn - 1\n             : 0)\n        };\n        return ret;\n      }\n    }\n\n    return {\n      line: null,\n      column: null\n    };\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nIndexedSourceMapConsumer.prototype._parseMappings =\n  function IndexedSourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    this.__generatedMappings = [];\n    this.__originalMappings = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n      var sectionMappings = section.consumer._generatedMappings;\n      for (var j = 0; j < sectionMappings.length; j++) {\n        var mapping = sectionMappings[j];\n\n        var source = section.consumer._sources.at(mapping.source);\n        source = util.computeSourceURL(section.consumer.sourceRoot, source, this._sourceMapURL);\n        this._sources.add(source);\n        source = this._sources.indexOf(source);\n\n        var name = null;\n        if (mapping.name) {\n          name = section.consumer._names.at(mapping.name);\n          this._names.add(name);\n          name = this._names.indexOf(name);\n        }\n\n        // The mappings coming from the consumer for the section have\n        // generated positions relative to the start of the section, so we\n        // need to offset them to be relative to the start of the concatenated\n        // generated file.\n        var adjustedMapping = {\n          source: source,\n          generatedLine: mapping.generatedLine +\n            (section.generatedOffset.generatedLine - 1),\n          generatedColumn: mapping.generatedColumn +\n            (section.generatedOffset.generatedLine === mapping.generatedLine\n            ? section.generatedOffset.generatedColumn - 1\n            : 0),\n          originalLine: mapping.originalLine,\n          originalColumn: mapping.originalColumn,\n          name: name\n        };\n\n        this.__generatedMappings.push(adjustedMapping);\n        if (typeof adjustedMapping.originalLine === 'number') {\n          this.__originalMappings.push(adjustedMapping);\n        }\n      }\n    }\n\n    quickSort(this.__generatedMappings, util.compareByGeneratedPositionsDeflated);\n    quickSort(this.__originalMappings, util.compareByOriginalPositions);\n  };\n\nexports.IndexedSourceMapConsumer = IndexedSourceMapConsumer;\n","/*\n * Copyright 2009-2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE.txt or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nexports.SourceMapGenerator = require('./lib/source-map-generator').SourceMapGenerator;\nexports.SourceMapConsumer = require('./lib/source-map-consumer').SourceMapConsumer;\nexports.SourceNode = require('./lib/source-node').SourceNode;\n","// tslint:disable:no-conditional-assignment\nimport {SourceMapConsumer} from \"source-map\";\n\nexport class ErrorMapper {\n  // Cache consumer\n  private static _consumer?: SourceMapConsumer;\n\n  public static get consumer(): SourceMapConsumer {\n    if (this._consumer == null) {\n      this._consumer = new SourceMapConsumer(require(\"main.js.map\"));\n    }\n\n    return this._consumer;\n  }\n\n  // Cache previously mapped traces to improve performance\n  public static cache: { [key: string]: string } = {};\n\n  /**\n   * Generates a stack trace using a source map generate original symbol names.\n   *\n   * WARNING - EXTREMELY high CPU cost for first call after reset - >30 CPU! Use sparingly!\n   * (Consecutive calls after a reset are more reasonable, ~0.1 CPU/ea)\n   *\n   * @param {Error | string} error The error or original stack trace\n   * @returns {string} The source-mapped stack trace\n   */\n  public static sourceMappedStackTrace(error: Error | string): string {\n    const stack: string = error instanceof Error ? error.stack as string : error;\n    if (this.cache.hasOwnProperty(stack)) {\n      return this.cache[stack];\n    }\n\n    const re = /^\\s+at\\s+(.+?\\s+)?\\(?([0-z._\\-\\\\\\/]+):(\\d+):(\\d+)\\)?$/gm;\n    let match: RegExpExecArray | null;\n    let outStack = error.toString();\n\n    while (match = re.exec(stack)) {\n      if (match[2] === \"main\") {\n        const pos = this.consumer.originalPositionFor({\n          column: parseInt(match[4], 10),\n          line: parseInt(match[3], 10)\n        });\n\n        if (pos.line != null) {\n          if (pos.name) {\n            outStack += `\\n    at ${pos.name} (${pos.source}:${pos.line}:${pos.column})`;\n          } else {\n            if (match[1]) {\n              // no original source file name known - use file name from given trace\n              outStack += `\\n    at ${match[1]} (${pos.source}:${pos.line}:${pos.column})`;\n            } else {\n              // no original source file name known or in given trace - omit name\n              outStack += `\\n    at ${pos.source}:${pos.line}:${pos.column}`;\n            }\n          }\n        } else {\n          // no known position\n          break;\n        }\n      } else {\n        // no more parseable lines\n        break;\n      }\n    }\n\n    this.cache[stack] = outStack;\n    return outStack;\n  }\n\n  public static wrapLoop(loop: () => void): () => void {\n    return () => {\n      try {\n        loop();\n      } catch (e) {\n        if (e instanceof Error) {\n          if (\"sim\" in Game.rooms) {\n            const message = `Source maps don't work in the simulator - displaying original error`;\n            console.log(`<span style='color:red'>${message}<br>${_.escape(e.stack)}</span>`);\n          } else {\n            console.log(`<span style='color:red'>${_.escape(this.sourceMappedStackTrace(e))}</span>`);\n          }\n        } else {\n          // can't handle it\n          throw e;\n        }\n      }\n    };\n  }\n}\n","//import { StructureTaskRequest } from \"tasks/StructureTaskRequest\";\r\nimport { CreepTaskRequest } from \"tasks/CreepTaskRequest\";\r\nimport { CreepRole } from \"utils/utils\";\r\n\r\nexport const MemoryVersion = 0;\r\nexport function m(): GameMemory\r\n{\r\n\treturn Memory as any as GameMemory;\r\n}\r\nexport interface GameMemory\r\n{\r\n\tuuid: number;\r\n\tmemVersion: number;\r\n\tinitialized: boolean;\r\n\tcreeps:\r\n\t{\r\n\t\t[name: string]: any;\r\n\t};\r\n\r\n\tflags:\r\n\t{\r\n\t\t[name: string]: any;\r\n\t};\r\n\r\n\trooms:\r\n\t{\r\n\t\t[name: string]: RoomMemory;\r\n\t};\r\n\r\n\tspawns:\r\n\t{\r\n\t\t[name: string]: any;\r\n\t};\r\n}\r\n\r\n\r\nexport interface RoomMemory\r\n{\r\n\tharvestLocations: SmartSource[];\r\n\t//runningWorkerTasks: CreepTaskRequest[];\r\n\tactiveWorkerRequests: { [index:string] : CreepTaskRequest};\r\n\ttest: StructureContainer[];\r\n\tpendingWorkerRequests: CreepTaskRequest[];\r\n\t//pendingStructureRequests: StructureTaskRequest[];\r\n\t//activeStructureRequests: { [index: string]: StructureTaskRequest };\r\n\tactiveWorkerTaskCount: number;\r\n\tactiveStructureRequestCount: number;\r\n\tsmartStructures: SmartStructure[];\r\n}\r\nexport interface StructureMemory\r\n{\r\n\tidle: boolean;\r\n\talive: boolean;\r\n\tcurrentTask: string;\r\n\r\n}\r\nexport function initRoomMemory(roomName: string): void\r\n{\r\n\tlet room = Game.rooms[roomName];\r\n\tconst rm: RoomMemory = m().rooms[room.name];\r\n\trm.harvestLocations = [];\r\n\trm.test = [];\r\n\trm.activeWorkerTaskCount = 0;\r\n\trm.activeStructureRequestCount = 0;\r\n\trm.activeWorkerRequests = {};\r\n\trm.pendingWorkerRequests = [];\r\n\t//rm.activeStructureRequests = {};\r\n\t//rm.pendingStructureRequests = []\r\n\trm.smartStructures = [];\r\n\r\n}\r\nexport interface SmartStructure\r\n{\r\n\tmemory: StructureMemory;\r\n\tid: string;\r\n}\r\n\r\nexport interface CreepMemory\r\n{\r\n\tspawnID: string;\r\n\talive: boolean | undefined;\r\n\tcurrentTask: string;\r\n\tidle: boolean;\r\n\trole: CreepRole\r\n}\r\nexport function cleanupCreeps(): void\r\n{\r\n\tfor (const name in Memory.creeps)\r\n\t{\r\n\t\tif (!Game.creeps[name])\r\n\t\t{\r\n\t\t\tconsole.log(\"Clearing dead creeps from memory.\")\r\n\t\t\tfor (const roomName in Game.rooms)\r\n\t\t\t{\r\n\t\t\t\tlet room = Game.rooms[roomName] as Room;\r\n\t\t\t\tlet roomMemory = room.memory as RoomMemory;\r\n\t\t\t\tlet sites = roomMemory.harvestLocations;\r\n\t\t\t\tfor (const id in sites)\r\n\t\t\t\t{\r\n\t\t\t\t\tlet site = sites[id];\r\n\t\t\t\t\tif (site.assignedTo == name)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconsole.log(\"unassiging harvest spot for \" + name + \" source: \" + site.sourceID)\r\n\t\t\t\t\t\tsite.assignedTo = null;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tdelete Memory.creeps[name];\r\n\t\t}\r\n\t}\r\n}\r\nexport class SmartSource{\r\n\tsourceID: string;\r\n\troomName: string;\r\n\tassignedTo: string | null = null;\r\n\tconstructor(sourceID: string, roomName: string){\r\n\t\tthis.sourceID = sourceID;\r\n\t\tthis.roomName = roomName;\r\n\t}\r\n}\r\n\r\n\r\n","import { m, CreepMemory, StructureMemory, RoomMemory, SmartStructure } from \"utils/memory\";\r\n\r\n\r\nexport function findSpawns(roomName: string, onlyNonSpawning: boolean = true)\r\n{\r\n\tlet room = Game.rooms[roomName];\r\n\treturn room.find(FIND_MY_STRUCTURES, {\r\n\t\tfilter: (structure: Structure) =>\r\n\t\t{\r\n\t\t\tif (structure.structureType == STRUCTURE_SPAWN)\r\n\t\t\t{\r\n\t\t\t\tlet spawner = structure as StructureSpawn;\r\n\t\t\t\tm().spawns[spawner.id] = spawner\r\n\t\t\t\treturn onlyNonSpawning ? spawner.spawning === null : true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t});\r\n}\r\nexport function findIdleCreeps(roomName: string, role: CreepRole = CreepRole.ROLE_ALL): Creep[]\r\n{\r\n\treturn Game.rooms[roomName].find(FIND_MY_CREEPS, {\r\n\t\tfilter: (creep: Creep) =>\r\n\t\t{\r\n\t\t\tlet memory = (creep.memory as CreepMemory);\r\n\t\t\treturn memory.idle && (memory.role == role || role == CreepRole.ROLE_ALL);\r\n\t\t}\r\n\t});\r\n}\r\nexport function ildeCreepCount(roomName: string, role: CreepRole = CreepRole.ROLE_ALL)\r\n{\r\n\treturn findIdleCreeps(roomName, role).length;\r\n}\r\nexport function findClosestContainer(roomName: string, targetID: string, fullOK: boolean, emptyOK: boolean): StructureContainer | undefined\r\n{\r\n\tlet target = Game.getObjectById(targetID);\r\n\tif (target == null)\r\n\t{\r\n\t\tconsole.log(\"container target was null.\")\r\n\t\treturn;\r\n\t}\r\n\tlet roomContainers = findAllContainers(roomName)\r\n\t\t.sort((a, b) => a.pos.getRangeTo(target as any) - b.pos.getRangeTo(target as any));\r\n\r\n\tfor (const id in roomContainers)\r\n\t{\r\n\t\tlet container = roomContainers[id] as StructureContainer;\r\n\t\tif (container == null) continue;\r\n\t\tif (!fullOK && container.store.energy == container.storeCapacity) continue; //has room\r\n\t\tif (!emptyOK && container.store.energy == 0) continue; //can't be empty\r\n\t\treturn container;\r\n\t}\r\n\treturn undefined;\r\n}\r\nexport function creepIDsByRole(roomName: string, role: CreepRole): string[]\r\n{\r\n\tlet room = Game.rooms[roomName];\r\n\tlet creeps = room.find(FIND_MY_CREEPS) as Creep[];\r\n\tlet found: string[] = [];\r\n\tfor (const key in creeps)\r\n\t{\r\n\t\tif (creeps.hasOwnProperty(key))\r\n\t\t{\r\n\t\t\tconst creep = creeps[key];\r\n\t\t\tconst mem = creep.memory as CreepMemory;\r\n\t\t\tif (mem.role == role || role == undefined) found.push(creep.id);\r\n\t\t}\r\n\t}\r\n\treturn found;\r\n}\r\nexport function creepNamesByRole(roomName: string, role: CreepRole): string[]\r\n{\r\n\tlet room = Game.rooms[roomName];\r\n\tlet creeps = room.find(FIND_MY_CREEPS) as Creep[];\r\n\tlet found: string[] = [];\r\n\tfor (const key in creeps)\r\n\t{\r\n\t\tif (creeps.hasOwnProperty(key))\r\n\t\t{\r\n\t\t\tconst creep = creeps[key];\r\n\t\t\tconst mem = creep.memory as CreepMemory;\r\n\t\t\tif (mem.role == role || role == undefined) found.push(creep.name);\r\n\t\t}\r\n\t}\r\n\treturn found;\r\n}\r\nexport function creepCount(roomName: string, role: CreepRole | undefined): number\r\n{\r\n\tlet creeps = Game.rooms[roomName].find(FIND_MY_CREEPS) as Creep[];\r\n\tif (role == undefined) return creeps.length;\r\n\telse\r\n\t{\r\n\t\treturn creepIDsByRole(roomName, role).length\r\n\t}\r\n}\r\nexport function roomSources(roomName: string): Source[]\r\n{\r\n\treturn Game.rooms[roomName].find(FIND_SOURCES) as Source[];\r\n}\r\nexport function sourceCount(roomName: string)\r\n{\r\n\treturn roomSources(roomName).length;\r\n}\r\nexport function findAllContainers(roomName: string): Array<StructureContainer>\r\n{\r\n\treturn Game.rooms[roomName].find(FIND_STRUCTURES).filter(i =>\r\n\t{\r\n\t\treturn i.structureType == STRUCTURE_CONTAINER;\r\n\t}) as StructureContainer[];\r\n\r\n}\r\nexport function findIdleSmartStructures(roomName: string): Array<SmartStructure>\r\n{\r\n\r\n\tlet roomMem = Game.rooms[roomName].memory as RoomMemory;\r\n\tlet structs = roomMem.smartStructures;\r\n\treturn structs.filter(struc =>\r\n\t{\r\n\t\tlet mem = struc.memory as StructureMemory;\r\n\t\treturn mem.idle;\r\n\t})\r\n\r\n}\r\nexport function getRestockables(roomName: string): Array<AnyStructure>\r\n{\r\n\tlet room = Game.rooms[roomName];\r\n\treturn room.find(FIND_STRUCTURES, {\r\n\t\tfilter: (structure) =>\r\n\t\t{\r\n\t\t\treturn (structure.structureType == STRUCTURE_EXTENSION\r\n\t\t\t\t|| structure.structureType == STRUCTURE_SPAWN)\r\n\t\t\t\t&& structure.energy < structure.energyCapacity;\r\n\t\t}\r\n\t});\r\n}\r\nexport function getRole(creepName: string): CreepRole\r\n{\r\n\r\n\tif (creepName.search(getRoleString(CreepRole.ROLE_MINER)) != -1) return CreepRole.ROLE_MINER;\r\n\tif (creepName.search(getRoleString(CreepRole.ROLE_WORKER)) != -1) return CreepRole.ROLE_WORKER;\r\n\tif (creepName.search(getRoleString(CreepRole.ROLE_UPGRADER)) != -1) return CreepRole.ROLE_UPGRADER;\r\n\treturn CreepRole.ROLE_UNASSIGNED;\r\n}\r\nexport const enum CreepRole\r\n{\r\n\tROLE_UNASSIGNED = 0,\r\n\tROLE_ALL,\r\n\t// ROLE_BUILDER,\r\n\tROLE_MINER,\r\n\t// ROLE_MINEHAULER,\r\n\t// ROLE_HEALER,\r\n\t// ROLE_FIGHTER,\r\n\t// ROLE_RANGER,\r\n\t// ROLE_CLAIMER,\r\n\t// ROLE_REMOTEMINER,\r\n\t// ROLE_REMOTEMINEHAULER,\r\n\t// ROLE_CUSTOMCONTROL,\r\n\tROLE_WORKER,\r\n\tROLE_UPGRADER,\r\n\t// ROLE_UPGRADETRANSPORT\r\n}\r\nexport function getRoleString(job: CreepRole): string\r\n{\r\n\tswitch (job)\r\n\t{\r\n\t\t// case CreepRoles.ROLE_BUILDER: return \"ROLE_BUILDER\";\r\n\t\tcase CreepRole.ROLE_MINER: return \"ROLE_MINER\";\r\n\t\t// case CreepRoles.ROLE_MINEHAULER: return \"ROLE_MINEHAULER\";\r\n\t\t// case CreepRoles.ROLE_HEALER: return \"ROLE_HEALER\";\r\n\t\t// case CreepRoles.ROLE_FIGHTER: return \"ROLE_FIGHTER\";\r\n\t\t// case CreepRoles.ROLE_RANGER: return \"ROLE_RANGER\";\r\n\t\t// case CreepRoles.ROLE_CLAIMER: return \"ROLE_CLAIMER\";\r\n\t\t// case CreepRoles.ROLE_REMOTEMINER: return \"ROLE_REMOTEMINER\";\r\n\t\t// case CreepRoles.ROLE_REMOTEMINEHAULER: return \"ROLE_REMOTEMINEHAULER\";\r\n\t\t// case CreepRoles.ROLE_CUSTOMCONTROL: return \"ROLE_CUSTOMCONTROL\";\r\n\t\tcase CreepRole.ROLE_UPGRADER: return \"ROLE_UPGRADER\";\r\n\t\tcase CreepRole.ROLE_WORKER: return \"ROLE_WORKER\";\r\n\t\tcase CreepRole.ROLE_UNASSIGNED: return \"ROLE_UNASSIGNED\";\r\n\t\tcase CreepRole.ROLE_ALL: return \"ROLE_ALL\";\r\n\t\tdefault: return \"unknown role\";\r\n\t}\r\n}\r\nexport enum CantBuildReasons\r\n{\r\n\tNotTheOwner = -1,\r\n\tNameAlreadyExists = -3,\r\n\tBuildingBusy = -4,\r\n\tNotEnoughEnergy = -6,\r\n\tInvalidArguments = -10,\r\n\tRCLNotHighEnough = -14\r\n\r\n}\r\n// export function hasEnergy(creepName: string) : boolean {\r\n// \tlet creep = Game.creeps[creepName];\r\n// \treturn creep.carry.energy > 0;\r\n// }\r\n// export function hasRoom(creepName: string) : boolean{\r\n// \tlet creep = Game.creeps[creepName];\r\n// \treturn creep.carry.energy < creep.carryCapacity;\r\n// }\r\nexport function errorToString(job: CantBuildReasons): string\r\n{\r\n\tswitch (job)\r\n\t{\r\n\t\tcase CantBuildReasons.NotTheOwner: return \"You don't own this building...?\";\r\n\t\tcase CantBuildReasons.NameAlreadyExists: return \"Name already exists...\";\r\n\t\tcase CantBuildReasons.BuildingBusy: return \"Name already exists...\";\r\n\t\tcase CantBuildReasons.NotEnoughEnergy: return \"You can't afford it!\";\r\n\t\tcase CantBuildReasons.InvalidArguments: return \"Invalid arguments passed to spawnCreep\";\r\n\t\tcase CantBuildReasons.RCLNotHighEnough: return \"Your RCL level is not high enough\";\r\n\t\tdefault: return \"unknown error\";\r\n\t}\r\n}\r\n\r\n\r\n\r\n// export function sendCreepsHome(roomName: string, creeps: Creep[]): void\r\n// {\r\n// \tlet spawn = findStructureSpawns(roomName)[0];\r\n\r\n// \tconsole.log(`There are ${creeps.length} idle creeps.`)\r\n// \tfor (const creep of creeps)\r\n// \t{\r\n// \t\tlet mem = creep.memory as CreepMemory;\r\n// \t\tif (mem.idle) creep.moveTo(spawn);\r\n// \t}\r\n// }\r\n","import { CreepMemory } from \"utils/memory\";\r\nimport { CreepRole } from \"utils/utils\";\r\nimport * as utils from \"utils/utils\"\r\n\r\nexport class CreepManager\r\n{\r\n\r\n \r\n\r\n  \r\n  \r\n\tstatic trySpawnCreep(spawn: StructureSpawn, bodyParts: BodyPartConstant[], role: CreepRole)\r\n\t{\r\n\t\tlet spawned: boolean = false;\r\n\t\tif (!spawned)\r\n\t\t{\r\n\t\t\tif (this.spawnCreep(spawn, bodyParts, role) === OK)\r\n\t\t\t{\r\n\t\t\t\tspawned = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn spawned;\r\n\r\n\t}\r\n\tprivate static spawnCreep(spawn: StructureSpawn, bodyParts: BodyPartConstant[], role: CreepRole): number\r\n\t{\r\n\t\tlet uuid: number = Memory.uuid;\r\n\t\tlet creepName: string = spawn.room.name + \"-\" + utils.getRoleString(role) + \"-\" + (uuid + 1);\r\n\t\tlet status: number | string = spawn.spawnCreep(bodyParts, creepName, { dryRun: true });\r\n\t\tstatus = _.isString(status) ? OK : status;\r\n\r\n\t\twhile(status == -3){\r\n\t\t\tuuid++;\r\n\t\t\tcreepName = spawn.room.name + \"-\" + utils.getRoleString(role) + \"-\" + (uuid + 1);\r\n\t\t\tstatus = spawn.spawnCreep(bodyParts, creepName, { dryRun: true });\r\n\t\t\tstatus = _.isString(status) ? OK : status;\r\n\t\t}\r\n\r\n\t\tif (status === OK && spawn.spawning == null)\r\n\t\t{\r\n\t\t\tMemory.uuid = uuid + 1;\r\n\t\t\tconst creepName: string = spawn.room.name + \"-\" + utils.getRoleString(role) + \"-\" + uuid;\r\n\r\n\t\t\tconst memory: CreepMemory =\r\n\t\t\t{\r\n\t\t\t\tspawnID: spawn.id,\r\n\t\t\t\tidle: true,\r\n\t\t\t\tcurrentTask: \"\",\r\n\t\t\t\talive: true,\r\n\t\t\t\trole: role\r\n\t\t\t};\r\n\r\n\t\t\tconsole.log(\"Started creating new creep: \" + creepName);\r\n\r\n\t\t\tstatus = spawn.spawnCreep(bodyParts, creepName, { memory: memory });\r\n\r\n\t\t\treturn _.isString(status) ? OK : status;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t//console.log(\"Coudldn't spawn: \" + Utils.errorToString(status))\r\n\t\t\t// if (Config.ENABLE_DEBUG_MODE && status !== ERR_NOT_ENOUGH_ENERGY)\r\n\t\t\t// {\r\n\t\t\t// \tlog.info(\"Failed creating new creep: \" + status);\r\n\t\t\t// }\r\n\r\n\t\t\treturn status;\r\n\t\t}\r\n\t}\r\n}\r\n","import { ITask } from \"contract/ITask\";\r\nimport { ITaskRequest } from \"contract/ITaskRequest\";\r\n\r\nexport enum TaskStatus {\r\n  PENDING = 0,\r\n  INIT,\r\n  PREPARE,\r\n  PRE_RUN,\r\n  IN_PROGRESS,\r\n  POST_RUN,\r\n  FINISHED,\r\n}\r\nexport abstract class Task implements ITask {\r\n\r\n  request: ITaskRequest;\r\n  constructor(taskInfo: ITaskRequest) {\r\n    this.request = taskInfo;\r\n  }\r\n  //protected abstract prerun(): void;\r\n  protected abstract init(): void;\r\n  protected abstract prepare(): void;\r\n  protected abstract continue(): void;\r\n  //protected abstract postrun(): void;\r\n  protected abstract finish(): void;\r\n  public run(): void {\r\n    //console.log(`RUN: ${this.request.name} + ${this.request.assignedTo} + ${Task.getStatus(this.request.status)} `)\r\n\r\n    if (Game.creeps[this.request.assignedTo] == undefined) console.log(\"creep was null during run - should handle.\")\r\n\r\n    var oldStatus = this.request.status;\r\n    switch (this.request.status) {\r\n      // case TaskState.PENDING: this.pending();\r\n      case TaskStatus.INIT: this.init(); break;\r\n      case TaskStatus.PREPARE: this.prepare(); break;\r\n      //case TaskStatus.PRE_RUN: this.p(); break;\r\n      case TaskStatus.IN_PROGRESS: this.continue(); break;\r\n      case TaskStatus.FINISHED: this.finish(); break;\r\n      // case TaskState.POST_RUN: this.preRun();\r\n    }\r\n    if (this.request != null && oldStatus != this.request.status) this.run()\r\n  }\r\n  static getStatus(state: TaskStatus) {\r\n    if (state == TaskStatus.PENDING) return \"PENDING\";\r\n    if (state == TaskStatus.INIT) return \"INIT\";\r\n    if (state == TaskStatus.PREPARE) return \"PREPARE\";\r\n    if (state == TaskStatus.PRE_RUN) return \"PRE_RUN\";\r\n    if (state == TaskStatus.IN_PROGRESS) return \"IN_PROGRESS\";\r\n    if (state == TaskStatus.POST_RUN) return \"POST_RUN\";\r\n    if (state == TaskStatus.FINISHED) return \"FINISHED\";\r\n    return `${state} is unknown...`\r\n  }\r\n}\r\n","import { RoomMemory, CreepMemory } from \"utils/memory\"\r\nimport { CreepTaskRequest } from \"tasks/CreepTaskRequest\";\r\nimport * as utils from \"utils/utils\"\r\nimport { TaskStatus } from \"./Task\";\r\n\r\nexport class CreepTaskQueue {\r\n\r\n  static addPendingRequest(request: CreepTaskRequest): any {\r\n\r\n    var totalCurrent = CreepTaskQueue.totalCount(request.roomName, request.name);\r\n    if (totalCurrent < request.maxConcurrent) {\r\n      let roomMem = Game.rooms[request.roomName].memory as RoomMemory;\r\n      roomMem.pendingWorkerRequests.push(request);\r\n    }\r\n\r\n  }\r\n  static startPendingRequest(creepName: string, roomName: string): void {\r\n    let roomMem = Game.rooms[roomName].memory as RoomMemory;\r\n    if (roomMem.pendingWorkerRequests.length == 0) return;\r\n\r\n    const creep = Game.creeps[creepName] as Creep;\r\n    const mem = creep.memory as CreepMemory;\r\n\r\n    const validTasks = roomMem.pendingWorkerRequests.filter(r => r.requiredRole == mem.role);\r\n    if (validTasks.length == 0) return;\r\n      \r\n    const sortedValidTasks = _.sortByAll(validTasks, ['priority', t => creep.pos.getRangeTo(Game.getObjectById(validTasks[0].targetID) as AnyStructure | Creep | RoomObject)]);\r\n\r\n    //let debug: string = \"\"\r\n    //for (const key in sorted) {\r\n    //  let task = sorted[key];\r\n    //  if (task != undefined) debug += task.priority + \", \"\r\n    //}\r\n    //console.log(\"Debug: \" + debug);\r\n\r\n    for (const key in sortedValidTasks)\r\n    {\r\n      if (sortedValidTasks.hasOwnProperty(key))\r\n      {\r\n        const task = sortedValidTasks[key];\r\n        var nextTask = _.find(roomMem.pendingWorkerRequests, task)\r\n\r\n        if (nextTask != undefined)\r\n        {\r\n          nextTask.assignedTo = creepName;\r\n          mem.idle = false;\r\n          mem.currentTask = nextTask.name;\r\n          \r\n          roomMem.activeWorkerRequests[creepName] = nextTask;\r\n          _.remove(roomMem.pendingWorkerRequests, nextTask);\r\n\r\n          console.log(JSON.stringify(nextTask))\r\n\r\n          nextTask.status = TaskStatus.INIT;\r\n          break;\r\n        }\r\n        else {\r\n          console.log(\"ARGH!!!.\")\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n  \r\n  static allActive(roomName: string): { [index: string]: CreepTaskRequest } {\r\n    let roomMem = Game.rooms[roomName].memory as RoomMemory;\r\n    return roomMem.activeWorkerRequests as { [index: string]: CreepTaskRequest };\r\n  }\r\n  static totalCount(roomName: string, taskName: string = \"\") {\r\n    return CreepTaskQueue.activeCount(roomName, taskName)\r\n      + CreepTaskQueue.pendingCount(roomName, taskName)\r\n  }\r\n  static pendingCount(roomName: string, taskName: string = \"\"): number {\r\n    let roomMem = Game.rooms[roomName].memory as RoomMemory;\r\n\r\n    if (taskName == \"\") {\r\n      return roomMem.pendingWorkerRequests.length;\r\n    }\r\n    else {\r\n\r\n      let count = 0;\r\n      const tasks = roomMem.pendingWorkerRequests;\r\n      for (const id in tasks) {\r\n        const task = tasks[id];\r\n        if (task.name == taskName) count++;\r\n      }\r\n      return count;\r\n    }\r\n  }\r\n  static activeCount(roomName: string, taskName: string = \"\"): number {\r\n\r\n    let roomMem = Game.rooms[roomName].memory as RoomMemory;\r\n    var count: number = 0;\r\n    for (var i in roomMem.activeWorkerRequests) {\r\n      var request = roomMem.activeWorkerRequests[i];\r\n      if (request.name == taskName || taskName == \"\")\r\n        count++;\r\n\r\n    }\r\n    return count;\r\n    //return Object.keys(roomMem.activeWorkerRequests).length;\r\n\r\n  }\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { ITaskRequest } from \"contract/ITaskRequest\";\r\nimport { CreepRole } from \"utils/utils\";\r\nimport { TaskStatus } from \"./Task\";\r\nexport abstract class CreepTaskRequest implements ITaskRequest\r\n{\r\n\tstatus: TaskStatus;\r\n\twingDing: string;\r\n\tisCreepTask: boolean = true;\r\n\ttargetID: string;\r\n\tabstract name: string;\r\n\troomName: string;\r\n\tassignedTo: string = \"\";\r\n\tabstract priority: number;\r\n\tabstract requiredRole: CreepRole;\r\n\tabstract maxConcurrent: number;\r\n\tconstructor(roomName: string, wingDing: string, targetID: string = \"\")\r\n\t{\r\n\t\tthis.targetID = targetID;\r\n\t\tthis.roomName = roomName;\r\n\t\tthis.wingDing = wingDing;\r\n\t\tthis.status = TaskStatus.PENDING\r\n\t}\r\n}\r\n","import { Task, TaskStatus } from \"./Task\";\r\nimport { CreepTaskRequest } from \"./CreepTaskRequest\";\r\nimport { CreepMemory, RoomMemory } from \"utils/memory\"\r\nimport * as utils from \"utils/utils\";\r\n\r\nexport abstract class CreepTask extends Task {\r\n  public request: CreepTaskRequest;\r\n  protected creep: Creep;\r\n  creepMemory!: CreepMemory;\r\n\r\n  constructor(request: CreepTaskRequest) {\r\n    super(request);\r\n\r\n    this.request = request as CreepTaskRequest;\r\n    this.creep = Game.creeps[this.request.assignedTo];\r\n    if (this.creep == undefined || this.creep.memory == undefined) {\r\n      //console.log(\"You cant create a task with an undefined creep.\")\r\n      this.request.status == TaskStatus.FINISHED;\r\n      return;\r\n    }\r\n    this.creepMemory = this.creep.memory as CreepMemory;\r\n\r\n  }\r\n  protected init(): void {\r\n\r\n    this.creep = Game.creeps[this.request.assignedTo];\r\n    if (this.creep == undefined || this.creep.memory == undefined) {\r\n      //console.log(\"You cant create a task with an undefined creep.\")\r\n      this.request.status == TaskStatus.FINISHED;\r\n      return;\r\n    }\r\n      \r\n     \r\n  }\r\n  protected prepare(): void\r\n  {\r\n    this.creep = Game.creeps[this.request.assignedTo];\r\n    if (this.creep == undefined || this.creep.memory == undefined) {\r\n      //console.log(\"during prep, creep was undefined - finishing task\")\r\n      this.request.status = TaskStatus.FINISHED;\r\n    }\r\n    else {\r\n      this.creepMemory = this.creep.memory as CreepMemory;\r\n    }\r\n    \r\n  }\r\n \r\n  protected continue(): void {\r\n    this.creep = Game.creeps[this.request.assignedTo];\r\n    if (this.creep == undefined || this.creep.memory == undefined) {\r\n      //console.log(\"during continue, creep was undefined - finishing task\")\r\n      this.request.status = TaskStatus.FINISHED;\r\n    }\r\n    else {\r\n      this.creepMemory = this.creep.memory as CreepMemory;\r\n      if (Game.time % 5 == 0) this.creep.say(`${this.request.wingDing}`);\r\n    }\r\n  }\r\n\r\n  protected finish(): void {\r\n\r\n    const creep = Game.creeps[this.request.assignedTo];\r\n    if (creep != undefined && creep.memory != undefined) {\r\n      var creepMemory = creep.memory as CreepMemory;\r\n      creepMemory.idle = true;\r\n      creepMemory.currentTask = \"\";\r\n      creep.say(\"✔\")\r\n      \r\n    }\r\n  }\r\n\r\n  protected collectFromDroppedEnergy(roomName: string) : boolean{\r\n    const room = Game.rooms[roomName];\r\n    if (this.creep.carry.energy == this.creep.carryCapacity) return false;\r\n    const resources = room.find(FIND_DROPPED_RESOURCES) as Resource[];\r\n\r\n    if (resources.length > 0) {\r\n      for (const key in resources) {\r\n        if (!resources.hasOwnProperty(key)) continue;\r\n        const resource = resources[key] as Resource;\r\n        if (resource.resourceType != RESOURCE_ENERGY) continue;\r\n        var result = this.creep.pickup(resource)\r\n        if (result == ERR_NOT_IN_RANGE) {\r\n          this.creep.moveTo(resource);\r\n        }\r\n        else if (result == OK) return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  protected collectFromTombstone(roomName: string) {\r\n    const room = Game.rooms[roomName];\r\n    if (this.creep.carry.energy == this.creep.carryCapacity) return;\r\n    const tombstones = room.find(FIND_TOMBSTONES) as Tombstone[];\r\n    if (tombstones.length > 0) {\r\n      for (const key in tombstones) {\r\n        if (!tombstones.hasOwnProperty(key)) continue;\r\n        const tombstone = tombstones[key] as Tombstone;\r\n        if (tombstone.store.energy == 0) continue;\r\n        var result = this.creep.withdraw(tombstone, RESOURCE_ENERGY);\r\n        if (result == ERR_NOT_IN_RANGE) {\r\n          this.creep.moveTo(tombstone);\r\n        }\r\n        else if (result == OK) return;\r\n      }\r\n    }\r\n  }\r\n\r\n  protected collectFromSource(roomName: string) {\r\n\r\n    const roomMem = Game.rooms[roomName].memory as RoomMemory;\r\n    var sourceID = _.first(roomMem.harvestLocations).sourceID;\r\n    var source = Game.getObjectById(sourceID) as Source\r\n    var result = this.creep.harvest(source)\r\n    if (result == ERR_NOT_IN_RANGE) {\r\n      this.creep.moveTo(source);\r\n      this.creep.harvest(source);\r\n    }\r\n  }\r\n\r\n}\r\n","import { RoomMemory, CreepMemory, StructureMemory, SmartStructure, SmartSource } from \"utils/memory\";\r\nimport { CreepManager } from \"CreepFactory\";\r\nimport * as utils from \"utils/utils\";\r\nimport { TaskManager } from \"taskManager\";\r\nimport { CreepRole } from \"utils/utils\";\r\n\r\nexport let creeps: Creep[];\r\nexport let creepCount: number = 0;\r\n\r\nexport class RoomManager {\r\n  creeps: Array<Creep> = [];\r\n  creepCount: number = 0;\r\n\r\n  public static minimumWorkerCount: number = 1;\r\n  public static minimumMinerCount: number = 2;\r\n  public static maxWorkersPerRoom: number = 2;\r\n  public static maxUpgradersPerRoom: number = 4;\r\n  minerCount: number = 0;\r\n  //taskManager: TaskManager = new TaskManager();\r\n\r\n  public Run(roomName: string): void {\r\n    RoomManager.loadHarvestingSpots(roomName);\r\n\r\n    this.loadCreeps(roomName);\r\n    this.loadStructures(roomName);\r\n    this.spawnMissingMiners(roomName);\r\n    this.spawnMissingWorkers(roomName);\r\n    this.spawnMissingUpgraders(roomName);\r\n\r\n    //TaskManager.processRoomTasks(roomName);\r\n    TaskManager.Run(roomName);\r\n  }\r\n  private loadCreeps(roomName: string) {\r\n    let room = Game.rooms[roomName];\r\n    creeps = room.find(FIND_MY_CREEPS);\r\n    let spawn = room.find(FIND_MY_SPAWNS)[0];\r\n    creepCount = creeps.length;\r\n    for (let id in creeps) {\r\n      let creep = creeps[id];\r\n      let mem = creep.memory as CreepMemory;\r\n      if (mem.alive === undefined || mem.alive == false) {\r\n        const memory: CreepMemory =\r\n        {\r\n          spawnID: spawn.id,\r\n          idle: true,\r\n          alive: true,\r\n          role: utils.getRole(creep.name),\r\n          currentTask: \"\",\r\n        };\r\n        creep.memory = memory;\r\n      }\r\n    }\r\n  }\r\n  private loadStructures(roomName: string) {\r\n    let room = Game.rooms[roomName]\r\n    let memory = room.memory as RoomMemory;\r\n    if (memory.smartStructures.length == 0) {\r\n      memory.smartStructures = [];\r\n      let structures = room.find(FIND_STRUCTURES);\r\n      let smartStructures = _.filter(structures, function (structure) {\r\n        return (\r\n          structure.structureType == \"tower\"\r\n        );\r\n      });\r\n      for (let id in smartStructures) {\r\n        let structure = smartStructures[id];\r\n        const newStructureMemory: StructureMemory =\r\n        {\r\n          idle: true,\r\n          alive: true,\r\n          currentTask: \"\"\r\n        }\r\n        const smartStructure: SmartStructure =\r\n        {\r\n          id: structure.id,\r\n          memory: newStructureMemory\r\n        }\r\n\r\n        memory.smartStructures.push(smartStructure);\r\n      }\r\n    }\r\n  }\r\n  private spawnMissingWorkers(roomID: string) {\r\n    const miners = utils.creepCount(roomID, CreepRole.ROLE_MINER);\r\n\r\n    const currentWorkerCount = utils.creepCount(roomID, CreepRole.ROLE_WORKER);\r\n    if (miners < RoomManager.minimumMinerCount - 1 && currentWorkerCount > 0) {\r\n      console.log(\"skipping workers for now.\")\r\n      return;\r\n    }\r\n\r\n    //console.log(\"miners: \" + miners + \" , workers: \" + currentWorkerCount)\r\n    const spawns = utils.findSpawns(roomID);\r\n\r\n    // let currentWorkers = creeps.filter(c =>\r\n    // {\r\n    // \tlet mem = c.memory as CreepMemory;\r\n    // \treturn mem.role == CreepRole.ROLE_WORKER;\r\n    // });\r\n    let workersNeeded: number = RoomManager.maxWorkersPerRoom - currentWorkerCount;\r\n    if (workersNeeded === 0) {\r\n      //console.log(\"no workers needed.\")\r\n      return;\r\n    }\r\n\r\n    let workersSpawned: number = 0;\r\n    _.each(spawns, (spawn) => {\r\n      if (workersSpawned < workersNeeded) {\r\n        let spawner = spawn as StructureSpawn;\r\n        if (CreepManager.trySpawnCreep(spawner, this.getWorkerBodyParts(roomID), CreepRole.ROLE_WORKER)) {\r\n          workersSpawned++;\r\n        }\r\n      }\r\n    })\r\n  }\r\n  private spawnMissingUpgraders(roomID: string) {\r\n    const workers = utils.creepCount(roomID, CreepRole.ROLE_WORKER);\r\n    if (workers < RoomManager.minimumWorkerCount + 1) return;\r\n\r\n    const miners = utils.creepCount(roomID, CreepRole.ROLE_MINER);\r\n    if (miners < RoomManager.minimumMinerCount) return;\r\n\r\n    const spawns = utils.findSpawns(roomID);\r\n    let currentCount = utils.creepCount(roomID, CreepRole.ROLE_UPGRADER);\r\n    // let currentWorkers = creeps.filter(c =>\r\n    // {\r\n    // \tlet mem = c.memory as CreepMemory;\r\n    // \treturn mem.role == CreepRole.ROLE_WORKER;\r\n    // });\r\n    let needed: number = RoomManager.maxUpgradersPerRoom - currentCount;\r\n    if (needed === 0) return;\r\n\r\n    let spawned: number = 0;\r\n    _.each(spawns, (spawn) => {\r\n      if (spawned < needed) {\r\n        let spawner = spawn as StructureSpawn;\r\n        if (CreepManager.trySpawnCreep(spawner, this.getUpgraderBodyParts(roomID), CreepRole.ROLE_UPGRADER)) {\r\n          spawned++;\r\n        }\r\n      }\r\n    })\r\n  }\r\n  private spawnMissingMiners(roomName: string) {\r\n    //console.log(\"spawning miners\")\r\n    const spawns = utils.findSpawns(roomName);\r\n    let currentMiners = creeps.filter(c => {\r\n      let mem = c.memory as CreepMemory;\r\n      return mem.role == CreepRole.ROLE_MINER;\r\n    });\r\n    var minersPerSource = 1;\r\n    var energyLevel = RoomManager.getRoomEnergyLevel(roomName);\r\n    if (energyLevel == 1) {\r\n      minersPerSource = 2;\r\n    }\r\n    let room = Game.rooms[roomName]\r\n    let sources = room.find(FIND_SOURCES);\r\n    this.minerCount = sources.length * minersPerSource\r\n\r\n    let minersNeeded: number = this.minerCount - currentMiners.length\r\n    // console.log(\"Miners needed: \" + minersNeeded)\r\n    if (minersNeeded === 0) return;\r\n\r\n    let minersSpawned: number = 0;\r\n    _.each(spawns, (spawn) => {\r\n      if (minersSpawned < minersNeeded) {\r\n        let spawner = spawn as StructureSpawn;\r\n        //console.log(\"spawning miner!\")\r\n        if (CreepManager.trySpawnCreep(spawner, this.getMinerBodyParts(roomName, RoomManager.getRoomEnergyLevel(roomName)), CreepRole.ROLE_MINER)) {\r\n          minersSpawned++;\r\n        }\r\n      }\r\n    })\r\n  }\r\n  private getWorkerBodyParts(roomID: string): BodyPartConstant[] {\r\n    let energyLevel = RoomManager.getRoomEnergyLevel(roomID);\r\n    let room = Game.rooms[roomID];\r\n    let currentEnergy = room.energyAvailable;\r\n\r\n    //if we run out of creeps for any reason, this will keep us respawning automatically.\r\n    if (creeps.length < 3 && currentEnergy < 800) energyLevel = 1;\r\n\r\n    //console.log(\"Room energy level: \" + energyLevel)\r\n    switch (energyLevel) {\r\n      case 1: return [WORK, MOVE, MOVE, CARRY];\r\n      //case 2: return [WORK, WORK, MOVE, MOVE, CARRY, CARRY];\r\n      case 2: return [WORK, WORK, MOVE, MOVE, CARRY, CARRY]\r\n      //case 3: return [WORK, WORK, WORK, WORK, MOVE, MOVE, MOVE, MOVE, CARRY, CARRY, CARRY, CARRY]\r\n      case 3: return [WORK, WORK, WORK, WORK, MOVE, MOVE, MOVE, MOVE, CARRY, CARRY, CARRY, CARRY]\r\n      default: return [WORK, MOVE, MOVE, CARRY];\r\n    }\r\n  }\r\n  private getUpgraderBodyParts(roomID: string): BodyPartConstant[] {\r\n    let energyLevel = RoomManager.getRoomEnergyLevel(roomID);\r\n    let room = Game.rooms[roomID];\r\n    let currentEnergy = room.energyAvailable;\r\n\r\n    //if we run out of creeps for any reason, this will keep us respawning automatically.\r\n    if (creeps.length < 3 && currentEnergy < 800) energyLevel = 1;\r\n\r\n    //console.log(\"Room energy level: \" + energyLevel)\r\n    switch (energyLevel) {\r\n      case 1: return [WORK, MOVE, MOVE, CARRY];\r\n      //case 2: return [WORK, WORK, MOVE, MOVE, CARRY, CARRY];\r\n      case 2: return [WORK, WORK, MOVE, MOVE, CARRY, CARRY]\r\n      //case 3: return [WORK, WORK, WORK, WORK, MOVE, MOVE, MOVE, MOVE, CARRY, CARRY, CARRY, CARRY]\r\n      case 3: return [WORK, WORK, WORK, WORK, WORK, MOVE, MOVE, MOVE, MOVE, CARRY, CARRY, CARRY]\r\n      default: return [WORK, MOVE, MOVE, CARRY];\r\n    }\r\n  }\r\n  private getMinerBodyParts(roomID: string, energyLevel: number): BodyPartConstant[] {\r\n\r\n    //let energyLevel = this.getRoomEnergyLevel(roomID);\r\n    let room = Game.rooms[roomID];\r\n    let currentEnergy = room.energyAvailable;\r\n\r\n    //if we run out of creeps for any reason, this will keep us respawning automatically.\r\n    if (creeps.length < 3 && currentEnergy < 800) energyLevel = 1;\r\n\r\n    //console.log(\"Room energy level: \" + energyLevel)\r\n    switch (energyLevel) {\r\n      case 1: return [WORK, WORK, MOVE, CARRY];\r\n      //case 2: return [WORK, WORK, MOVE, MOVE, CARRY, CARRY];\r\n      case 2: return [WORK, WORK, WORK, WORK, MOVE, CARRY]\r\n      //case 3: return [WORK, WORK, WORK, WORK, MOVE, MOVE, MOVE, MOVE, CARRY, CARRY, CARRY, CARRY]\r\n      case 3: return [WORK, WORK, WORK, WORK, WORK, WORK, MOVE, MOVE, CARRY, CARRY, CARRY, CARRY]\r\n      default: return [WORK, MOVE, MOVE, CARRY];\r\n    }\r\n  }\r\n  static getRoomEnergyLevel(roomID: string): number {\r\n    let room = Game.rooms[roomID];\r\n    let cap = room.energyCapacityAvailable;\r\n    if (cap < 500) return 1;\r\n    else if (cap <= 800) return 2;\r\n    else return 3;\r\n  }\r\n\r\n  static loadHarvestingSpots(roomName: string) {\r\n    let room = Game.rooms[roomName];\r\n    let roomMemory = room.memory as RoomMemory;\r\n\r\n    if (roomMemory.harvestLocations.length > 0) return;\r\n\r\n    let sources = room.find(FIND_SOURCES);\r\n\r\n\r\n    let spots: Array<SmartSource> = [];\r\n\r\n    for (const sourceID in sources) {\r\n      let source = sources[sourceID];\r\n      const spot: SmartSource = {\r\n        sourceID: source.id,\r\n        roomName: roomName,\r\n        assignedTo: null,\r\n      }\r\n      spots.push(spot);\r\n      roomMemory.harvestLocations = spots;\r\n    }\r\n    // \tlet sourcePosition = source.pos as RoomPosition;\r\n    // \tlet right = room.getPositionAt(sourcePosition.x + 1, sourcePosition.y);\r\n    // \tif (right != null) possibles.push(new HarvestSpot(source.id, right));\r\n\r\n    // \tlet left = room.getPositionAt(sourcePosition.x - 1, sourcePosition.y)\r\n    // \tif (left != null) possibles.push(new HarvestSpot(source.id, left));\r\n\r\n    // \tlet top = room.getPositionAt(sourcePosition.x, sourcePosition.y - 1)\r\n    // \tif (top != null) possibles.push(new HarvestSpot(source.id, top));\r\n\r\n    // \tlet bot = room.getPositionAt(sourcePosition.x, sourcePosition.y + 1)\r\n    // \tif (bot != null) possibles.push(new HarvestSpot(source.id, bot));\r\n\r\n    // \tlet tr = room.getPositionAt(sourcePosition.x + 1, sourcePosition.y - 1)\r\n    // \tif (tr != null) possibles.push(new HarvestSpot(source.id, tr));\r\n\r\n    // \tlet tl = room.getPositionAt(sourcePosition.x - 1, sourcePosition.y - 1)\r\n    // \tif (tl != null) possibles.push(new HarvestSpot(source.id, tl));\r\n\r\n    // \tlet br = room.getPositionAt(sourcePosition.x + 1, sourcePosition.y + 1)\r\n    // \tif (br != null) possibles.push(new HarvestSpot(source.id, br));\r\n\r\n    // \tlet bl = room.getPositionAt(sourcePosition.x - 1, sourcePosition.y + 1)\r\n    // \tif (bl != null) possibles.push(new HarvestSpot(source.id, bl));\r\n\r\n    // }\r\n    // for (const id in possibles)\r\n    // {\r\n    // \tlet possible = possibles[id];\r\n    // \tif (possible.pos !== null)\r\n    // \t{\r\n    // \t\tconst found: string = possible.pos.lookFor(LOOK_TERRAIN) as any;\r\n    // \t\tif (found != \"wall\")\r\n    // \t\t{\r\n    // \t\t\tspots.push(possible);\r\n    // \t\t}\r\n    // \t}\r\n    // }\r\n\r\n\r\n  }\r\n\r\n  static GetClosestOrAssignedHarvestLocation(roomName: string, creepID: string, locationID: string = \"\"): SmartSource | undefined {\r\n    let creep = Game.getObjectById(creepID) as Creep;\r\n    let room = Game.rooms[roomName];\r\n    let roomMemory = room.memory as RoomMemory;\r\n    if (locationID == \"\") {\r\n      locationID = creep.id;\r\n    }\r\n\r\n    let locObj = Game.getObjectById(locationID) as Structure | Creep;\r\n    if (roomMemory.harvestLocations == []) {\r\n      console.log(\"this should never happen...\")\r\n      this.loadHarvestingSpots(roomName);\r\n    }\r\n    let harvestingSpots = roomMemory.harvestLocations.filter(spot => {\r\n\r\n      let source = Game.getObjectById(spot.sourceID) as Source;\r\n      return source.energy > 0;\r\n    });\r\n\r\n    let assignedSpot = harvestingSpots.filter((spot) => {\r\n      return spot.assignedTo == creep.name;\r\n    })[0];\r\n\r\n    if (assignedSpot !== undefined) return assignedSpot;\r\n    else {\r\n      let openSpots = harvestingSpots.filter((spot) => {\r\n        return spot.assignedTo == null;\r\n      });\r\n      _.sortBy(openSpots, spot => {\r\n        let sourceID = spot.sourceID;\r\n        let source = Game.getObjectById(sourceID) as Source;\r\n        return locObj.pos.getRangeTo(source);\r\n      }).reverse();\r\n\r\n      if (openSpots == undefined) return undefined;\r\n      let firstOpen = openSpots[0];\r\n      if (firstOpen == undefined) return undefined;\r\n\r\n      firstOpen.assignedTo = creep.name;\r\n      return firstOpen;\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n","import { CreepTaskRequest } from \"../CreepTaskRequest\";\r\nimport { CreepTask } from \"../CreepTask\";\r\nimport { CreepMemory, RoomMemory, SmartSource } from \"utils/memory\"\r\nimport * as utils from \"utils/utils\";\r\nimport { CreepTaskQueue } from \"../CreepTaskQueue\";\r\nimport { CreepRole } from \"utils/utils\";\r\nimport { Task, TaskStatus } from \"../Task\";\r\nimport { RoomManager } from \"RoomManager\";\r\n\r\nexport class MineRequest extends CreepTaskRequest {\r\n  priority: number = 1;\r\n  requiredRole: CreepRole = CreepRole.ROLE_MINER\r\n  name: string = \"Mine\";\r\n  maxConcurrent: number;\r\n  id: number\r\n  source: SmartSource;\r\n  constructor(roomName: string, sourceID: string) {\r\n    super(roomName, `💲`, sourceID);\r\n\r\n    const roomMem = Game.rooms[roomName].memory as RoomMemory;\r\n    //console.log(\"source id in mine req ctor: \" + sourceID)\r\n\r\n    this.source = _.find(roomMem.harvestLocations, h => h.sourceID == sourceID) as SmartSource;\r\n    if (this.source == undefined) console.log(\"You cant init a mine request with an undefined source.\")\r\n\r\n    //console.log(\"after finding source: \" + this.source.sourceID)\r\n    this.id = _.random(0, 10);\r\n    this.maxConcurrent = utils.sourceCount(this.roomName) * 2;\r\n    console.log(\"max concurrent: \" + this.maxConcurrent)\r\n  }\r\n}\r\n\r\nexport class Mine extends CreepTask {\r\n  protected init(): void {\r\n    super.init();\r\n    //console.log(\"mine init assigned to \" + this.request.assignedTo)\r\n\r\n    const request = this.request as MineRequest;\r\n    const source = request.source as SmartSource;\r\n    source.assignedTo = request.assignedTo;\r\n    this.request.status = TaskStatus.PREPARE;\r\n  }\r\n\r\n  protected prepare(): void {\r\n    super.prepare();\r\n    if (this.request.status == TaskStatus.FINISHED) return;\r\n\r\n    this.request.status = TaskStatus.IN_PROGRESS;\r\n  }\r\n  protected continue(): void {\r\n    super.continue();\r\n    if (this.request.status == TaskStatus.FINISHED) return;\r\n\r\n    if (this.creep.carry.energy < this.creep.carryCapacity) this.harvest();\r\n    else this.deliver();\r\n\r\n  }\r\n\r\n  static addRequests(roomName: string): void {\r\n    const room = Game.rooms[roomName];\r\n    const mem = room.memory as RoomMemory;\r\n\r\n    const unassigned = _.filter(mem.harvestLocations, h => h.assignedTo === null) as SmartSource[];\r\n    \r\n    if (unassigned.length === 0) return;\r\n    var minersPerSource = 1;\r\n    var energyLevel = RoomManager.getRoomEnergyLevel(roomName);\r\n    if (energyLevel == 1) {\r\n      minersPerSource = 2;\r\n    }\r\n    for (const key in unassigned) {\r\n      const smartSource = unassigned[key] as SmartSource;\r\n      \r\n      for (var i = 0; i < minersPerSource; i++) {\r\n        \r\n        var request = new MineRequest(roomName, smartSource.sourceID);\r\n        var totalCurrent = CreepTaskQueue.totalCount(request.roomName, request.name);\r\n        console.log(\"total current:\" + totalCurrent)\r\n        if (totalCurrent < request.maxConcurrent) {\r\n          console.log(\"about to add source for this id: \" + smartSource.sourceID)\r\n          CreepTaskQueue.addPendingRequest(request);\r\n        }\r\n      }\r\n      \r\n    }\r\n  }\r\n\r\n  private harvest() {\r\n    const creep = Game.creeps[this.request.assignedTo] as Creep;\r\n    const source = Game.getObjectById(this.request.targetID) as Source\r\n    if (creep.harvest(source) == ERR_NOT_IN_RANGE) {\r\n      creep.moveTo(source, { visualizePathStyle: { stroke: '#ffaa00' } });\r\n    }\r\n\r\n  }\r\n  private deliver() {\r\n    const creep = Game.creeps[this.request.assignedTo];\r\n    const container = utils.findClosestContainer(this.request.roomName, creep.id, true, true) as StructureContainer;\r\n    if (container == undefined) {\r\n      creep.drop(RESOURCE_ENERGY);\r\n      return;\r\n    }\r\n\r\n    if (container.store.energy == container.storeCapacity) return;\r\n\r\n    if (creep.transfer(container, RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {\r\n      creep.moveTo(container, { visualizePathStyle: { stroke: '#ffffff' } });\r\n    }\r\n  }\r\n\r\n  constructor(taskInfo: CreepTaskRequest) {\r\n    super(taskInfo);\r\n  }\r\n}\r\n\r\n","import { CreepTask } from \"../CreepTask\";\r\nimport { CreepTaskRequest } from \"../CreepTaskRequest\";\r\nimport { CreepRole } from \"utils/utils\";\r\nimport { CreepTaskQueue } from \"../CreepTaskQueue\";\r\nimport * as utils from \"utils/utils\"\r\nimport { TaskStatus } from \"tasks/Task\";\r\n\r\nexport class PickUpEnergyRequest extends CreepTaskRequest {\r\n  priority: number = 0;\r\n  name: string = \"PickupEnergy\";\r\n  requiredRole: CreepRole = CreepRole.ROLE_WORKER;\r\n  maxConcurrent: number = 2;\r\n  resourceType: string;\r\n  constructor(roomName: string, resourceID: string, resourceType: string) {\r\n    super(roomName, \"😍\", resourceID);\r\n    this.resourceType = resourceType;\r\n  }\r\n}\r\nexport class PickupEnergy extends CreepTask {\r\n\r\n\r\n  protected init(): void {\r\n    super.init();\r\n    //console.log(\"mine init assigned to \" + this.request.assignedTo)\r\n\r\n    this.request.status = TaskStatus.PREPARE;\r\n  }\r\n  protected prepare(): void {\r\n    super.prepare();\r\n    if (this.request.status == TaskStatus.FINISHED) return;\r\n\r\n    this.request.status = TaskStatus.IN_PROGRESS;\r\n  }\r\n\r\n  protected continue() {\r\n    const requestInfo = this.request as PickUpEnergyRequest;\r\n    const resource = Game.getObjectById(this.request.targetID);\r\n    if (resource == null) {\r\n      this.request.status = TaskStatus.FINISHED;\r\n      return;\r\n    }\r\n    if (requestInfo.resourceType == \"tombstone\") {\r\n      let tombstone = resource as Tombstone;\r\n      if (this.creep.withdraw(tombstone, RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {\r\n        this.creep.moveTo(tombstone);\r\n      }\r\n      else this.request.status = TaskStatus.FINISHED;\r\n    }\r\n    else if (requestInfo.resourceType == \"resource\") {\r\n      let droppedResource = resource as Resource;\r\n      if (this.creep.pickup(droppedResource) == ERR_NOT_IN_RANGE) {\r\n        this.creep.moveTo(droppedResource);\r\n      }\r\n      else this.request.status = TaskStatus.FINISHED;\r\n    }\r\n  }\r\n\r\n  static addRequests(roomName: string): void {\r\n    let room = Game.rooms[roomName];\r\n    let resources = room.find(FIND_DROPPED_RESOURCES) as Resource[];\r\n    let tombstones = room.find(FIND_TOMBSTONES) as Tombstone[];\r\n\r\n    let workers = utils.creepNamesByRole(roomName, CreepRole.ROLE_WORKER).filter(name => {\r\n      const worker = Game.creeps[name] as Creep;\r\n      return worker.carry.energy < worker.carryCapacity;\r\n    })\r\n    if (workers.length == 0) return;\r\n\r\n    if (resources.length > 0) {\r\n      //console.log(\"found \" + resources.length + \" dropped resources\")\r\n      for (const key in resources) {\r\n        if (!resources.hasOwnProperty(key)) continue;\r\n        const resource = resources[key] as Resource;\r\n        if (resource.resourceType != RESOURCE_ENERGY) continue;\r\n\r\n        let droppedReq = new PickUpEnergyRequest(roomName, resource.id, \"resource\")\r\n        CreepTaskQueue.addPendingRequest(droppedReq);\r\n      }\r\n    }\r\n    if (tombstones.length > 0) {\r\n      for (const key in tombstones) {\r\n        if (!tombstones.hasOwnProperty(key)) continue;\r\n        const tombstone = tombstones[key] as Tombstone;\r\n        if (tombstone.store.energy == 0) continue;\r\n        console.log(\"found a tombstone with energy\")\r\n        let ts = new PickUpEnergyRequest(roomName, tombstone.id, \"resource\")\r\n        if (CreepTaskQueue.totalCount(roomName, ts.name) < ts.maxConcurrent) {\r\n          CreepTaskQueue.addPendingRequest(ts);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  //private deliver() {\r\n  //  let creep = Game.creeps[this.request.assignedTo];\r\n  //  let container = utils.findClosestContainer(this.request.roomName, creep.id, false, true) as StructureContainer;\r\n  //  if (container == undefined) throw \"Error!\";\r\n\r\n  //  if (container.store.energy == container.storeCapacity) return;\r\n\r\n  //  if (creep.transfer(container, RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {\r\n  //    creep.moveTo(container, { visualizePathStyle: { stroke: '#ffffff' } });\r\n  //  }\r\n  //}\r\n  constructor(taskInfo: CreepTaskRequest) {\r\n    super(taskInfo);\r\n  }\r\n}\r\n\r\n","import { CreepTask } from \"tasks/CreepTask\";\r\nimport { CreepTaskRequest } from \"tasks/CreepTaskRequest\";\r\nimport { CreepTaskQueue } from \"../CreepTaskQueue\";\r\nimport * as utils from \"utils/utils\"\r\nimport { CreepRole } from \"utils/utils\";\r\nimport { CreepMemory, RoomMemory } from \"utils/memory\";\r\nimport { TaskStatus, Task } from \"../Task\";\r\n\r\nexport class RestockRequest extends CreepTaskRequest {\r\n  priority: number = 1;\r\n  name = \"Restock\";\r\n  requiredRole = CreepRole.ROLE_WORKER\r\n  maxConcurrent = 3;\r\n  constructor(roomName: string, restockID: string) {\r\n    super(roomName, `🛒`, restockID);\r\n  }\r\n}\r\n\r\nexport class Restock extends CreepTask {\r\n\r\n  sources: Source[] = []\r\n  protected init(): void {\r\n    super.init();\r\n\r\n    var restock = this.request as RestockRequest;\r\n\r\n    //console.log(\"status after init\" + Task.getStatus(this.request.status))\r\n    this.request.status = TaskStatus.PREPARE;\r\n  }\r\n\r\n  protected prepare(): void {\r\n    super.prepare();\r\n    if (this.request.status == TaskStatus.FINISHED) return;\r\n    const restockInfo = this.request as RestockRequest;\r\n    var room = Game.rooms[this.request.roomName];\r\n    var roomMem = room.memory as RoomMemory;\r\n    //this.collectFromContainer(this.request.roomName, creep.id);\r\n\r\n    //temp code...\r\n    if (this.creep.carry.energy < this.creep.carryCapacity) {\r\n      this.collectFromDroppedEnergy(room.name);\r\n      this.collectFromTombstone(room.name);\r\n      this.collectFromSource(room.name);\r\n\r\n    }\r\n    else {\r\n      this.request.status = TaskStatus.IN_PROGRESS;\r\n    }\r\n  }\r\n  protected continue(): void {\r\n    super.continue();\r\n    if (this.request.status == TaskStatus.FINISHED) return;\r\n    const creep = Game.creeps[this.request.assignedTo];\r\n\r\n    let targets = creep.room.find(FIND_STRUCTURES, {\r\n      filter: (structure) => {\r\n        return (structure.structureType == STRUCTURE_EXTENSION || structure.structureType == STRUCTURE_SPAWN) &&\r\n          structure.energy < structure.energyCapacity;\r\n      }\r\n    }).sort((structureA, structureB) => creep.pos.getRangeTo(structureA) - creep.pos.getRangeTo(structureB));\r\n    //console.log(\"restock targets: \" + targets.length);\r\n    if (targets.length == 0) {\r\n      this.request.status = TaskStatus.FINISHED;\r\n    }\r\n    else {\r\n      const result = creep.transfer(targets[0], RESOURCE_ENERGY)\r\n      const target = targets[0]\r\n      if (result == ERR_NOT_IN_RANGE) {\r\n        creep.moveTo(target, { visualizePathStyle: { stroke: '#ffffff' } });\r\n      }\r\n      else if (result == OK) {\r\n        this.request.status = TaskStatus.FINISHED;\r\n      }\r\n      else {\r\n        //console.log(`${creep.name} couldn't restock: ${result}`)\r\n        this.request.status = TaskStatus.FINISHED;\r\n      }\r\n    }\r\n  }\r\n  constructor(taskInfo: CreepTaskRequest) {\r\n    super(taskInfo);\r\n  }\r\n\r\n  static addRequests(roomName: string) {\r\n    let restockables = utils.getRestockables(roomName);\r\n    //let workers = utils.creepNamesByRole(roomName, CreepRole.ROLE_WORKER).filter(name => {\r\n    //  const worker = Game.creeps[name] as Creep;\r\n    //  return worker.carry.energy > 0;\r\n    //})\r\n    //if (workers.length == 0) return;\r\n\r\n    for (const targetID in restockables) {\r\n      let restockable = restockables[targetID];\r\n      let request = new RestockRequest(roomName, restockable.id);\r\n      let existingTaskCount = CreepTaskQueue.totalCount(roomName, request.name);\r\n      let maxConcurrentCount = request.maxConcurrent;\r\n\r\n      if (existingTaskCount < maxConcurrentCount) {\r\n        CreepTaskQueue.addPendingRequest(request)\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { CreepTask } from \"tasks/CreepTask\";\r\nimport { CreepTaskRequest } from \"tasks/CreepTaskRequest\";\r\nimport { CreepMemory, RoomMemory } from \"utils/memory\"\r\nimport { CreepTaskQueue } from \"../CreepTaskQueue\";\r\nimport { CreepRole } from \"utils/utils\";\r\nimport { TaskStatus, Task } from \"../Task\";\r\nexport class BuildRequest extends CreepTaskRequest {\r\n  priority: number = 2;\r\n  requiredRole: CreepRole = CreepRole.ROLE_WORKER;\r\n  name = \"Build\";\r\n  maxConcurrent = 2;\r\n  constructor(roomName: string, siteID: string) {\r\n    super(roomName, `🚧`, siteID);\r\n  }\r\n}\r\n\r\nexport class Build extends CreepTask {\r\n\r\n  protected init(): void {\r\n    super.init();\r\n    this.request.status = TaskStatus.PREPARE;\r\n  }\r\n\r\n  protected prepare(): void {\r\n    super.prepare();\r\n    if (this.request.status == TaskStatus.FINISHED) return;\r\n\r\n    var room = Game.rooms[this.request.roomName];\r\n    var roomMem = room.memory as RoomMemory;\r\n    if (this.creep.carry.energy < this.creep.carryCapacity) {\r\n\r\n      this.collectFromDroppedEnergy(room.name);\r\n      this.collectFromTombstone(room.name);\r\n      this.collectFromSource(room.name);\r\n      \r\n    }\r\n    else this.request.status = TaskStatus.IN_PROGRESS;\r\n  }\r\n  protected continue(): void {\r\n    super.continue();\r\n    if (this.request.status == TaskStatus.FINISHED) return;\r\n    const creep = Game.creeps[this.request.assignedTo];\r\n\r\n    const info = this.request as BuildRequest;\r\n    const site = Game.getObjectById(info.targetID) as ConstructionSite;\r\n    if (site == null || site.progressTotal - site.progress == 0) {\r\n      this.request.status = TaskStatus.FINISHED;\r\n      return;\r\n    }\r\n    const result = creep.build(site);\r\n    if (result == ERR_NOT_IN_RANGE) {\r\n      creep.moveTo(site, { visualizePathStyle: { stroke: '#ffffff' } });\r\n    }\r\n    else if (creep.carry.energy == 0) {\r\n      this.request.status = TaskStatus.FINISHED;\r\n    }\r\n    //this caused huge errors!! BE CAREFUL ABOUT THIS...\r\n    //else if(status !== undefined) {\r\n    //  console.log(`${creep.name} couldn't build: ${status}`);\r\n    //}\r\n  }\r\n\r\n  static addRequests(roomName: string): void {\r\n    let room = Game.rooms[roomName];\r\n    let sites = room.find(FIND_CONSTRUCTION_SITES);\r\n    //console.log(\"adding \" + sites.length + \" build site requests.\")\r\n    _.each(sites, site => {\r\n      \r\n      if (site.progressTotal > 0) {\r\n        CreepTaskQueue.addPendingRequest(new BuildRequest(roomName, site.id));\r\n      }\r\n    })\r\n  }\r\n  constructor(taskInfo: CreepTaskRequest) {\r\n    super(taskInfo);\r\n  }\r\n\r\n}\r\n","import { CreepTask } from \"tasks/CreepTask\"\r\nimport { CreepTaskRequest } from \"tasks/CreepTaskRequest\";\r\nimport { CreepTaskQueue } from \"../CreepTaskQueue\";\r\nimport { CreepMemory } from \"utils/memory\";\r\nimport { RoomManager } from \"RoomManager\";\r\nimport { CreepRole } from \"utils/utils\";\r\nimport { TaskStatus } from \"tasks/Task\";\r\n\r\nexport class UpgradeRequest extends CreepTaskRequest {\r\n\r\n  requiredRole = CreepRole.ROLE_UPGRADER\r\n  priority: number = 1;\r\n  name = \"Upgrade\";\r\n  maxConcurrent = RoomManager.maxUpgradersPerRoom;\r\n  constructor(roomName: string, controllerID: string) {\r\n    super(roomName, `🎇`, controllerID);\r\n  }\r\n}\r\n\r\nexport class Upgrade extends CreepTask {\r\n  protected init(): void {\r\n    super.init();\r\n    this.request.status = TaskStatus.PREPARE;\r\n  }\r\n\r\n  protected prepare(): void {\r\n    super.prepare();\r\n    if (this.request.status == TaskStatus.FINISHED) return;\r\n\r\n    var room = Game.rooms[this.request.roomName];\r\n    var roomMem = room.memory as RoomMemory;\r\n    if (this.creep.carry.energy < this.creep.carryCapacity) {\r\n\r\n      this.collectFromDroppedEnergy(room.name);\r\n      this.collectFromTombstone(room.name);\r\n      this.collectFromSource(room.name);\r\n\r\n    }\r\n    else this.request.status = TaskStatus.IN_PROGRESS;\r\n  }\r\n  protected continue(): void {\r\n    super.continue();\r\n    if (this.request.status == TaskStatus.FINISHED) return;\r\n    const creep = Game.creeps[this.request.assignedTo];\r\n\r\n    const info = this.request as UpgradeRequest\r\n    let controller = Game.getObjectById(info.targetID) as StructureController;\r\n    if (creep.upgradeController(controller) == ERR_NOT_IN_RANGE) {\r\n      creep.moveTo(controller, { visualizePathStyle: { stroke: '#ffffff' } });\r\n    }\r\n    if (creep.carry.energy == 0) {\r\n      this.request.status = TaskStatus.PREPARE;\r\n    }\r\n  }\r\n  constructor(taskInfo: CreepTaskRequest) {\r\n    super(taskInfo);\r\n  }\r\n\r\n  static addRequests(roomName: string): void {\r\n    let controller = Game.rooms[roomName].controller as StructureController;\r\n    let request = new UpgradeRequest(roomName, controller.id);\r\n    let tasksNeeded = request.maxConcurrent - CreepTaskQueue.totalCount(roomName, request.name);\r\n    for (let i = 0; i < tasksNeeded; i++) {\r\n      CreepTaskQueue.addPendingRequest(request);\r\n    }\r\n  }\r\n}\r\n\r\n","import { CreepMemory, StructureMemory, SmartStructure } from \"utils/memory\"\r\nimport * as utils from \"utils/utils\";\r\n//import { Upgrade } from \"tasks/creep/Upgrade\";\r\nimport { CreepTaskQueue } from \"tasks/CreepTaskQueue\";\r\n//import { StructureTaskQueue } from \"tasks/StructureTaskQueue\";\r\nimport { ITask } from \"contract/ITask\";\r\n//import { FillTower } from \"tasks/creep/FillTower\";\r\n//import { TowerRepair } from \"tasks/structure/TowerRepair\";\r\n//import { TowerAttack } from \"tasks/structure/TowerAttack\";\r\nimport { Mine } from \"tasks/creep/Mine\";\r\n//import { TransferEnergy } from \"tasks/creep/TransferEnergy\";\r\nimport { CreepRole } from \"utils/utils\";\r\n//import { StructureTask } from \"tasks/StructureTask\";\r\n//import { StructureTaskRequest } from \"tasks/StructureTaskRequest\";\r\nimport { TaskStatus, Task } from \"tasks/Task\";\r\nimport { RoomMemory } from \"utils/memory\"\r\nimport { CreepTaskRequest } from \"tasks/CreepTaskRequest\";\r\nimport { PickupEnergy } from \"tasks/creep/PickupEnergy\";\r\nimport { ITaskRequest } from \"contract/ITaskRequest\";\r\nimport { Restock } from \"tasks/creep/Restock\";\r\nimport { Build } from \"tasks/creep/Build\";\r\nimport { Upgrade } from \"tasks/creep/Upgrade\";\r\n\r\nexport class TaskManager {\r\n\r\n  private static runTask(task: Task) {\r\n\r\n    if (task.request.status == TaskStatus.FINISHED)\r\n    {\r\n      TaskManager.removeTask(task.request);\r\n      return;\r\n    }\r\n    \r\n    task.run();\r\n  }\r\n  private static removeTask(request: ITaskRequest): void {\r\n\r\n    const roomMem = Game.rooms[request.roomName].memory as RoomMemory;\r\n    delete roomMem.activeWorkerRequests[request.assignedTo];\r\n  }\r\n  static continueActiveRequests(roomName: string) {\r\n\r\n    const activeWorkerTasks = CreepTaskQueue.allActive(roomName);\r\n    //console.log(Object.keys(activeWorkerTasks).length);\r\n\r\n    _.each(activeWorkerTasks, request => {\r\n\r\n      if (Game.creeps[request.assignedTo] === undefined) {\r\n        request.status == TaskStatus.FINISHED;\r\n      }\r\n      if (request.status == TaskStatus.FINISHED) {\r\n        TaskManager.removeTask(request);\r\n        return;\r\n      }\r\n      \r\n      if (request.name == \"Mine\") TaskManager.runTask(new Mine(request));\r\n      else if (request.name == \"PickupEnergy\") TaskManager.runTask(new PickupEnergy(request))\r\n      else if (request.name == \"Restock\") TaskManager.runTask(new Restock(request));\r\n      else if (request.name == \"Upgrade\") TaskManager.runTask(new Upgrade(request))\r\n      else if (request.name == \"Build\") TaskManager.runTask(new Build(request));\r\n      else { console.log(\"Reqiest\" + request.name)}\r\n\r\n    })\r\n    for (const assignedName in activeWorkerTasks) {\r\n      //else if (taskInfo.name == \"Upgrade\") (new Upgrade(taskInfo)).run();\r\n      //else if (taskInfo.name == \"FillTower\") (new FillTower(taskInfo)).run();\r\n      //else if (taskInfo.name == \"TransferEnergy\") (new TransferEnergy(taskInfo)).run();\r\n      \r\n    }\r\n\r\n    //let activeStructureTasks = StructureTaskQueue.allActive(roomName);\r\n    //for (let buildingID in activeStructureTasks)\r\n    //{\r\n    //\tlet structureTaskInfo = activeStructureTasks[buildingID];\r\n    //\tif (structureTaskInfo.assignedTo != buildingID) structureTaskInfo.assignedTo = buildingID;\r\n\r\n    //\tif (structureTaskInfo.name == \"TowerRepair\") (new TowerRepair(structureTaskInfo)).run();\r\n    //\tif (structureTaskInfo.name == \"TowerAttack\") (new TowerAttack(structureTaskInfo)).run();\r\n    //}\r\n  }\r\n  private static addBuildingTasks(roomName: string) {\r\n    //TowerAttack.addTask(roomName);\r\n    //TowerRepair.addTask(roomName);\r\n    //console.log(\"finished building tasks\")\r\n  }\r\n  private static addPendingRequests(roomName: string): void {\r\n\r\n    PickupEnergy.addRequests(roomName);\r\n    Restock.addRequests(roomName);\r\n    Mine.addRequests(roomName);\r\n    //TransferEnergy.addRequests(roomName);\r\n    //FillTower.addRequests(roomName);\r\n    Build.addRequests(roomName);\r\n    Upgrade.addRequests(roomName);\r\n  }\r\n  static Run(roomName: string): void {\r\n    //this.addBuildingTasks(roomName);\r\n    this.continueActiveRequests(roomName);\r\n\r\n    this.addPendingRequests(roomName);\r\n    this.assignPendingRequests(roomName);\r\n  }\r\n\r\n\r\n  private static assignPendingRequests(roomName: string) {\r\n    let idleCreeps = utils.findIdleCreeps(roomName);\r\n   \r\n    for (let id in idleCreeps) {\r\n      let creep = idleCreeps[id] as Creep;\r\n      if (creep != undefined) {\r\n        let mem = creep.memory as CreepMemory;\r\n        //if (mem.role == CreepRole.ROLE_MINER) {\r\n        //  console.log(\"found a miner: \" + creep.name);\r\n        //  console.log(\"idle: \" + mem.idle);\r\n        //}\r\n\r\n        if (mem.idle) {\r\n          CreepTaskQueue.startPendingRequest(creep.name, roomName)\r\n        }\r\n      }\r\n    }\r\n\r\n    //let idleStructures = utils.findIdleSmartStructures(roomName);\r\n    //for (let id in idleStructures) {\r\n    //  let structure = idleStructures[id] as SmartStructure;\r\n    //  if (structure != undefined) {\r\n    //    let memory = structure.memory as StructureMemory;\r\n    //    if (memory.idle) {\r\n    //      StructureTaskQueue.startTask(structure.id, roomName);\r\n    //    }\r\n    //  }\r\n    //}\r\n\r\n    // let stillIdleCreeps = utils.findIdleCreeps(roomName);\r\n    // for (let id in stillIdleCreeps)\r\n    // {\r\n    // \tlet creep = stillIdleCreeps[id];\r\n    // \tlet m = creep.memory as CreepMemory\r\n    // \tcreep.moveTo(Game.getObjectById(m.spawnID) as StructureSpawn)\r\n    // }\r\n  }\r\n\r\n}\r\n","import { RoomMemory, CreepMemory, StructureMemory, SmartStructure, SmartSource } from \"utils/memory\";\r\nimport { CreepManager } from \"CreepFactory\";\r\nimport * as utils from \"utils/utils\";\r\nimport { TaskManager } from \"taskManager\";\r\nimport { CreepRole } from \"utils/utils\";\r\n\r\nexport let creeps: Creep[];\r\nexport let creepCount: number = 0;\r\n\r\nexport class RoomManager {\r\n  creeps: Array<Creep> = [];\r\n  creepCount: number = 0;\r\n\r\n  public static minimumWorkerCount: number = 1;\r\n  public static minimumMinerCount: number = 2;\r\n  public static maxWorkersPerRoom: number = 2;\r\n  public static maxUpgradersPerRoom: number = 4;\r\n  minerCount: number = 0;\r\n  //taskManager: TaskManager = new TaskManager();\r\n\r\n  public Run(roomName: string): void {\r\n    RoomManager.loadHarvestingSpots(roomName);\r\n\r\n    this.loadCreeps(roomName);\r\n    this.loadStructures(roomName);\r\n    this.spawnMissingMiners(roomName);\r\n    this.spawnMissingWorkers(roomName);\r\n    this.spawnMissingUpgraders(roomName);\r\n\r\n    //TaskManager.processRoomTasks(roomName);\r\n    TaskManager.Run(roomName);\r\n  }\r\n  private loadCreeps(roomName: string) {\r\n    let room = Game.rooms[roomName];\r\n    creeps = room.find(FIND_MY_CREEPS);\r\n    let spawn = room.find(FIND_MY_SPAWNS)[0];\r\n    creepCount = creeps.length;\r\n    for (let id in creeps) {\r\n      let creep = creeps[id];\r\n      let mem = creep.memory as CreepMemory;\r\n      if (mem.alive === undefined || mem.alive == false) {\r\n        const memory: CreepMemory =\r\n        {\r\n          spawnID: spawn.id,\r\n          idle: true,\r\n          alive: true,\r\n          role: utils.getRole(creep.name),\r\n          currentTask: \"\",\r\n        };\r\n        creep.memory = memory;\r\n      }\r\n    }\r\n  }\r\n  private loadStructures(roomName: string) {\r\n    let room = Game.rooms[roomName]\r\n    let memory = room.memory as RoomMemory;\r\n    if (memory.smartStructures.length == 0) {\r\n      memory.smartStructures = [];\r\n      let structures = room.find(FIND_STRUCTURES);\r\n      let smartStructures = _.filter(structures, function (structure) {\r\n        return (\r\n          structure.structureType == \"tower\"\r\n        );\r\n      });\r\n      for (let id in smartStructures) {\r\n        let structure = smartStructures[id];\r\n        const newStructureMemory: StructureMemory =\r\n        {\r\n          idle: true,\r\n          alive: true,\r\n          currentTask: \"\"\r\n        }\r\n        const smartStructure: SmartStructure =\r\n        {\r\n          id: structure.id,\r\n          memory: newStructureMemory\r\n        }\r\n\r\n        memory.smartStructures.push(smartStructure);\r\n      }\r\n    }\r\n  }\r\n  private spawnMissingWorkers(roomID: string) {\r\n    const miners = utils.creepCount(roomID, CreepRole.ROLE_MINER);\r\n\r\n    const currentWorkerCount = utils.creepCount(roomID, CreepRole.ROLE_WORKER);\r\n    if (miners < RoomManager.minimumMinerCount - 1 && currentWorkerCount > 0) {\r\n      console.log(\"skipping workers for now.\")\r\n      return;\r\n    }\r\n\r\n    //console.log(\"miners: \" + miners + \" , workers: \" + currentWorkerCount)\r\n    const spawns = utils.findSpawns(roomID);\r\n\r\n    // let currentWorkers = creeps.filter(c =>\r\n    // {\r\n    // \tlet mem = c.memory as CreepMemory;\r\n    // \treturn mem.role == CreepRole.ROLE_WORKER;\r\n    // });\r\n    let workersNeeded: number = RoomManager.maxWorkersPerRoom - currentWorkerCount;\r\n    if (workersNeeded === 0) {\r\n      //console.log(\"no workers needed.\")\r\n      return;\r\n    }\r\n\r\n    let workersSpawned: number = 0;\r\n    _.each(spawns, (spawn) => {\r\n      if (workersSpawned < workersNeeded) {\r\n        let spawner = spawn as StructureSpawn;\r\n        if (CreepManager.trySpawnCreep(spawner, this.getWorkerBodyParts(roomID), CreepRole.ROLE_WORKER)) {\r\n          workersSpawned++;\r\n        }\r\n      }\r\n    })\r\n  }\r\n  private spawnMissingUpgraders(roomID: string) {\r\n    const workers = utils.creepCount(roomID, CreepRole.ROLE_WORKER);\r\n    if (workers < RoomManager.minimumWorkerCount + 1) return;\r\n\r\n    const miners = utils.creepCount(roomID, CreepRole.ROLE_MINER);\r\n    if (miners < RoomManager.minimumMinerCount) return;\r\n\r\n    const spawns = utils.findSpawns(roomID);\r\n    let currentCount = utils.creepCount(roomID, CreepRole.ROLE_UPGRADER);\r\n    // let currentWorkers = creeps.filter(c =>\r\n    // {\r\n    // \tlet mem = c.memory as CreepMemory;\r\n    // \treturn mem.role == CreepRole.ROLE_WORKER;\r\n    // });\r\n    let needed: number = RoomManager.maxUpgradersPerRoom - currentCount;\r\n    if (needed === 0) return;\r\n\r\n    let spawned: number = 0;\r\n    _.each(spawns, (spawn) => {\r\n      if (spawned < needed) {\r\n        let spawner = spawn as StructureSpawn;\r\n        if (CreepManager.trySpawnCreep(spawner, this.getUpgraderBodyParts(roomID), CreepRole.ROLE_UPGRADER)) {\r\n          spawned++;\r\n        }\r\n      }\r\n    })\r\n  }\r\n  private spawnMissingMiners(roomName: string) {\r\n    //console.log(\"spawning miners\")\r\n    const spawns = utils.findSpawns(roomName);\r\n    let currentMiners = creeps.filter(c => {\r\n      let mem = c.memory as CreepMemory;\r\n      return mem.role == CreepRole.ROLE_MINER;\r\n    });\r\n    var minersPerSource = 1;\r\n    var energyLevel = RoomManager.getRoomEnergyLevel(roomName);\r\n    if (energyLevel == 1) {\r\n      minersPerSource = 2;\r\n    }\r\n    let room = Game.rooms[roomName]\r\n    let sources = room.find(FIND_SOURCES);\r\n    this.minerCount = sources.length * minersPerSource\r\n\r\n    let minersNeeded: number = this.minerCount - currentMiners.length\r\n    // console.log(\"Miners needed: \" + minersNeeded)\r\n    if (minersNeeded === 0) return;\r\n\r\n    let minersSpawned: number = 0;\r\n    _.each(spawns, (spawn) => {\r\n      if (minersSpawned < minersNeeded) {\r\n        let spawner = spawn as StructureSpawn;\r\n        //console.log(\"spawning miner!\")\r\n        if (CreepManager.trySpawnCreep(spawner, this.getMinerBodyParts(roomName, RoomManager.getRoomEnergyLevel(roomName)), CreepRole.ROLE_MINER)) {\r\n          minersSpawned++;\r\n        }\r\n      }\r\n    })\r\n  }\r\n  private getWorkerBodyParts(roomID: string): BodyPartConstant[] {\r\n    let energyLevel = RoomManager.getRoomEnergyLevel(roomID);\r\n    let room = Game.rooms[roomID];\r\n    let currentEnergy = room.energyAvailable;\r\n\r\n    //if we run out of creeps for any reason, this will keep us respawning automatically.\r\n    if (creeps.length < 3 && currentEnergy < 800) energyLevel = 1;\r\n\r\n    //console.log(\"Room energy level: \" + energyLevel)\r\n    switch (energyLevel) {\r\n      case 1: return [WORK, MOVE, MOVE, CARRY];\r\n      //case 2: return [WORK, WORK, MOVE, MOVE, CARRY, CARRY];\r\n      case 2: return [WORK, WORK, MOVE, MOVE, CARRY, CARRY]\r\n      //case 3: return [WORK, WORK, WORK, WORK, MOVE, MOVE, MOVE, MOVE, CARRY, CARRY, CARRY, CARRY]\r\n      case 3: return [WORK, WORK, WORK, WORK, MOVE, MOVE, MOVE, MOVE, CARRY, CARRY, CARRY, CARRY]\r\n      default: return [WORK, MOVE, MOVE, CARRY];\r\n    }\r\n  }\r\n  private getUpgraderBodyParts(roomID: string): BodyPartConstant[] {\r\n    let energyLevel = RoomManager.getRoomEnergyLevel(roomID);\r\n    let room = Game.rooms[roomID];\r\n    let currentEnergy = room.energyAvailable;\r\n\r\n    //if we run out of creeps for any reason, this will keep us respawning automatically.\r\n    if (creeps.length < 3 && currentEnergy < 800) energyLevel = 1;\r\n\r\n    //console.log(\"Room energy level: \" + energyLevel)\r\n    switch (energyLevel) {\r\n      case 1: return [WORK, MOVE, MOVE, CARRY];\r\n      //case 2: return [WORK, WORK, MOVE, MOVE, CARRY, CARRY];\r\n      case 2: return [WORK, WORK, MOVE, MOVE, CARRY, CARRY]\r\n      //case 3: return [WORK, WORK, WORK, WORK, MOVE, MOVE, MOVE, MOVE, CARRY, CARRY, CARRY, CARRY]\r\n      case 3: return [WORK, WORK, WORK, WORK, WORK, MOVE, MOVE, MOVE, MOVE, CARRY, CARRY, CARRY]\r\n      default: return [WORK, MOVE, MOVE, CARRY];\r\n    }\r\n  }\r\n  private getMinerBodyParts(roomID: string, energyLevel: number): BodyPartConstant[] {\r\n\r\n    //let energyLevel = this.getRoomEnergyLevel(roomID);\r\n    let room = Game.rooms[roomID];\r\n    let currentEnergy = room.energyAvailable;\r\n\r\n    //if we run out of creeps for any reason, this will keep us respawning automatically.\r\n    if (creeps.length < 3 && currentEnergy < 800) energyLevel = 1;\r\n\r\n    //console.log(\"Room energy level: \" + energyLevel)\r\n    switch (energyLevel) {\r\n      case 1: return [WORK, WORK, MOVE, CARRY];\r\n      //case 2: return [WORK, WORK, MOVE, MOVE, CARRY, CARRY];\r\n      case 2: return [WORK, WORK, WORK, WORK, MOVE, CARRY]\r\n      //case 3: return [WORK, WORK, WORK, WORK, MOVE, MOVE, MOVE, MOVE, CARRY, CARRY, CARRY, CARRY]\r\n      case 3: return [WORK, WORK, WORK, WORK, WORK, WORK, MOVE, MOVE, CARRY, CARRY, CARRY, CARRY]\r\n      default: return [WORK, MOVE, MOVE, CARRY];\r\n    }\r\n  }\r\n  static getRoomEnergyLevel(roomID: string): number {\r\n    let room = Game.rooms[roomID];\r\n    let cap = room.energyCapacityAvailable;\r\n    if (cap < 500) return 1;\r\n    else if (cap <= 800) return 2;\r\n    else return 3;\r\n  }\r\n\r\n  static loadHarvestingSpots(roomName: string) {\r\n    let room = Game.rooms[roomName];\r\n    let roomMemory = room.memory as RoomMemory;\r\n\r\n    if (roomMemory.harvestLocations.length > 0) return;\r\n\r\n    let sources = room.find(FIND_SOURCES);\r\n\r\n\r\n    let spots: Array<SmartSource> = [];\r\n\r\n    for (const sourceID in sources) {\r\n      let source = sources[sourceID];\r\n      const spot: SmartSource = {\r\n        sourceID: source.id,\r\n        roomName: roomName,\r\n        assignedTo: null,\r\n      }\r\n      spots.push(spot);\r\n      roomMemory.harvestLocations = spots;\r\n    }\r\n    // \tlet sourcePosition = source.pos as RoomPosition;\r\n    // \tlet right = room.getPositionAt(sourcePosition.x + 1, sourcePosition.y);\r\n    // \tif (right != null) possibles.push(new HarvestSpot(source.id, right));\r\n\r\n    // \tlet left = room.getPositionAt(sourcePosition.x - 1, sourcePosition.y)\r\n    // \tif (left != null) possibles.push(new HarvestSpot(source.id, left));\r\n\r\n    // \tlet top = room.getPositionAt(sourcePosition.x, sourcePosition.y - 1)\r\n    // \tif (top != null) possibles.push(new HarvestSpot(source.id, top));\r\n\r\n    // \tlet bot = room.getPositionAt(sourcePosition.x, sourcePosition.y + 1)\r\n    // \tif (bot != null) possibles.push(new HarvestSpot(source.id, bot));\r\n\r\n    // \tlet tr = room.getPositionAt(sourcePosition.x + 1, sourcePosition.y - 1)\r\n    // \tif (tr != null) possibles.push(new HarvestSpot(source.id, tr));\r\n\r\n    // \tlet tl = room.getPositionAt(sourcePosition.x - 1, sourcePosition.y - 1)\r\n    // \tif (tl != null) possibles.push(new HarvestSpot(source.id, tl));\r\n\r\n    // \tlet br = room.getPositionAt(sourcePosition.x + 1, sourcePosition.y + 1)\r\n    // \tif (br != null) possibles.push(new HarvestSpot(source.id, br));\r\n\r\n    // \tlet bl = room.getPositionAt(sourcePosition.x - 1, sourcePosition.y + 1)\r\n    // \tif (bl != null) possibles.push(new HarvestSpot(source.id, bl));\r\n\r\n    // }\r\n    // for (const id in possibles)\r\n    // {\r\n    // \tlet possible = possibles[id];\r\n    // \tif (possible.pos !== null)\r\n    // \t{\r\n    // \t\tconst found: string = possible.pos.lookFor(LOOK_TERRAIN) as any;\r\n    // \t\tif (found != \"wall\")\r\n    // \t\t{\r\n    // \t\t\tspots.push(possible);\r\n    // \t\t}\r\n    // \t}\r\n    // }\r\n\r\n\r\n  }\r\n\r\n  static GetClosestOrAssignedHarvestLocation(roomName: string, creepID: string, locationID: string = \"\"): SmartSource | undefined {\r\n    let creep = Game.getObjectById(creepID) as Creep;\r\n    let room = Game.rooms[roomName];\r\n    let roomMemory = room.memory as RoomMemory;\r\n    if (locationID == \"\") {\r\n      locationID = creep.id;\r\n    }\r\n\r\n    let locObj = Game.getObjectById(locationID) as Structure | Creep;\r\n    if (roomMemory.harvestLocations == []) {\r\n      console.log(\"this should never happen...\")\r\n      this.loadHarvestingSpots(roomName);\r\n    }\r\n    let harvestingSpots = roomMemory.harvestLocations.filter(spot => {\r\n\r\n      let source = Game.getObjectById(spot.sourceID) as Source;\r\n      return source.energy > 0;\r\n    });\r\n\r\n    let assignedSpot = harvestingSpots.filter((spot) => {\r\n      return spot.assignedTo == creep.name;\r\n    })[0];\r\n\r\n    if (assignedSpot !== undefined) return assignedSpot;\r\n    else {\r\n      let openSpots = harvestingSpots.filter((spot) => {\r\n        return spot.assignedTo == null;\r\n      });\r\n      _.sortBy(openSpots, spot => {\r\n        let sourceID = spot.sourceID;\r\n        let source = Game.getObjectById(sourceID) as Source;\r\n        return locObj.pos.getRangeTo(source);\r\n      }).reverse();\r\n\r\n      if (openSpots == undefined) return undefined;\r\n      let firstOpen = openSpots[0];\r\n      if (firstOpen == undefined) return undefined;\r\n\r\n      firstOpen.assignedTo = creep.name;\r\n      return firstOpen;\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n","import { ErrorMapper } from \"utils/ErrorMapper\";\nimport * as Mem from \"utils/memory\";\nimport {RoomManager} from \"roomManager\";\n\nconst rm = new RoomManager();\nlet initialized = false;\nfunction memoryInit()\n{\n\n\tconsole.log(\"Initializing Game\");\n\tdelete Memory.flags;\n\tdelete Memory.spawns;\n\tdelete Memory.creeps;\n\tdelete Memory.rooms;\n\n\tconst mem = Mem.m();\n\tmem.creeps = {};\n\tmem.rooms = {};\n\tmem.spawns = {};\n\n\tmem.uuid = getTotalCreepCount();\n\tmem.memVersion = Mem.MemoryVersion;\n}\nfunction getTotalCreepCount() : number{\n\tlet totalcreepCount = 0;\n\tfor(const i in Game.rooms){\n\t\tconst room: Room = Game.rooms[i];\n\t\tlet creeps = room.find(FIND_MY_CREEPS);\n\t\ttotalcreepCount += creeps.length;\n\t}\n\treturn totalcreepCount;\n}\nfunction InitializeGame()\n{\n\tif (Mem.m().memVersion === undefined ||\n\t\tMem.m().memVersion !== Mem.MemoryVersion||\n\t\t(Mem.m().memVersion == 0 && !initialized))\n\t{\n\t\tinitialized = true;\n\t\tmemoryInit();\n\t}\n\tif (!Mem.m().uuid || Mem.m().uuid > 1000)\n\t{\n\t\tMem.m().uuid = getTotalCreepCount();\n\t}\n}\n\nfunction mainLoop()\n{\n\tInitializeGame();\n\t//console.log(\"main loop.\")\n\tfor (const i in Game.rooms)\n\t{\n\t\tconst room: Room = Game.rooms[i];\n\t\tlet mem = Mem.m() as Mem.GameMemory;\n\t\tlet roomMemory = mem.rooms[room.name] as Mem.RoomMemory;\n\t\tif (roomMemory === undefined)\n\t\t{\n\t\t\tconsole.log(`Init room memory for ${room.name}.`);\n\t\t\tMemory.rooms[room.name] = {};\n\t\t\tMem.initRoomMemory(room.name);\n\t\t\troomMemory = mem.rooms[room.name] as Mem.RoomMemory;\n\t\t}\n\n\t\trm.Run(room.name);\n\t}\n\n\tMem.cleanupCreeps();\n}\n\n\nexport const loop = ErrorMapper.wrapLoop(mainLoop);\n\n"],"names":["ArraySet","require$$0","quickSort","require$$1","base64VLQ","SourceMapConsumer","utils.getRoleString","tslib_1.__extends","creepCount","utils.getRole","utils.creepCount","utils.findSpawns","utils.sourceCount","utils.findClosestContainer","utils.creepNamesByRole","utils.getRestockables","utils.findIdleCreeps","creeps","RoomManager","Mem.m","Mem.MemoryVersion","Mem.initRoomMemory","Mem.cleanupCreeps"],"mappings":"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"};