module.exports = {"version":3,"file":"main.js","sources":["../node_modules/source-map/lib/base64.js","../node_modules/source-map/lib/base64-vlq.js","../node_modules/source-map/lib/util.js","../node_modules/source-map/lib/array-set.js","../node_modules/source-map/lib/binary-search.js","../node_modules/source-map/lib/quick-sort.js","../node_modules/source-map/lib/source-map-consumer.js","../node_modules/source-map/source-map.js","../src/utils/ErrorMapper.ts","../src/utils/utils.ts","../src/utils/memory.ts","../src/tasks/CreepTaskQueue.ts","../src/CreepFactory.ts","../src/tasks/StructureTaskQueue.ts","../node_modules/tslib/tslib.es6.js","../src/tasks/CreepTaskRequest.ts","../src/tasks/Task.ts","../src/Traveler.ts","../src/tasks/CreepTask.ts","../src/tasks/creep/Mine.ts","../src/tasks/creep/PickupEnergy.ts","../src/tasks/creep/Restock.ts","../src/tasks/creep/Build.ts","../src/tasks/creep/Upgrade.ts","../src/tasks/creep/FillTower.ts","../src/tasks/StructureTaskRequest.ts","../src/tasks/StructureTask.ts","../src/tasks/structure/TowerAttack.ts","../src/tasks/structure/TowerRepair.ts","../src/FillStorage.ts","../src/FillContainers.ts","../src/RemoteUpgrade.ts","../src/Scout.ts","../src/taskManager.ts","../src/roomManager.ts","../src/main.ts"],"sourcesContent":["/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n\n/**\n * Encode an integer in the range of 0 to 63 to a single base 64 digit.\n */\nexports.encode = function (number) {\n  if (0 <= number && number < intToCharMap.length) {\n    return intToCharMap[number];\n  }\n  throw new TypeError(\"Must be between 0 and 63: \" + number);\n};\n\n/**\n * Decode a single base 64 character code digit to an integer. Returns -1 on\n * failure.\n */\nexports.decode = function (charCode) {\n  var bigA = 65;     // 'A'\n  var bigZ = 90;     // 'Z'\n\n  var littleA = 97;  // 'a'\n  var littleZ = 122; // 'z'\n\n  var zero = 48;     // '0'\n  var nine = 57;     // '9'\n\n  var plus = 43;     // '+'\n  var slash = 47;    // '/'\n\n  var littleOffset = 26;\n  var numberOffset = 52;\n\n  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ\n  if (bigA <= charCode && charCode <= bigZ) {\n    return (charCode - bigA);\n  }\n\n  // 26 - 51: abcdefghijklmnopqrstuvwxyz\n  if (littleA <= charCode && charCode <= littleZ) {\n    return (charCode - littleA + littleOffset);\n  }\n\n  // 52 - 61: 0123456789\n  if (zero <= charCode && charCode <= nine) {\n    return (charCode - zero + numberOffset);\n  }\n\n  // 62: +\n  if (charCode == plus) {\n    return 62;\n  }\n\n  // 63: /\n  if (charCode == slash) {\n    return 63;\n  }\n\n  // Invalid base64 digit.\n  return -1;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n *\n * Based on the Base 64 VLQ implementation in Closure Compiler:\n * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\n *\n * Copyright 2011 The Closure Compiler Authors. All rights reserved.\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *  * Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *  * Neither the name of Google Inc. nor the names of its\n *    contributors may be used to endorse or promote products derived\n *    from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nvar base64 = require('./base64');\n\n// A single base 64 digit can contain 6 bits of data. For the base 64 variable\n// length quantities we use in the source map spec, the first bit is the sign,\n// the next four bits are the actual value, and the 6th bit is the\n// continuation bit. The continuation bit tells us whether there are more\n// digits in this value following this digit.\n//\n//   Continuation\n//   |    Sign\n//   |    |\n//   V    V\n//   101011\n\nvar VLQ_BASE_SHIFT = 5;\n\n// binary: 100000\nvar VLQ_BASE = 1 << VLQ_BASE_SHIFT;\n\n// binary: 011111\nvar VLQ_BASE_MASK = VLQ_BASE - 1;\n\n// binary: 100000\nvar VLQ_CONTINUATION_BIT = VLQ_BASE;\n\n/**\n * Converts from a two-complement value to a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\n *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\n */\nfunction toVLQSigned(aValue) {\n  return aValue < 0\n    ? ((-aValue) << 1) + 1\n    : (aValue << 1) + 0;\n}\n\n/**\n * Converts to a two-complement value from a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\n *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2\n */\nfunction fromVLQSigned(aValue) {\n  var isNegative = (aValue & 1) === 1;\n  var shifted = aValue >> 1;\n  return isNegative\n    ? -shifted\n    : shifted;\n}\n\n/**\n * Returns the base 64 VLQ encoded value.\n */\nexports.encode = function base64VLQ_encode(aValue) {\n  var encoded = \"\";\n  var digit;\n\n  var vlq = toVLQSigned(aValue);\n\n  do {\n    digit = vlq & VLQ_BASE_MASK;\n    vlq >>>= VLQ_BASE_SHIFT;\n    if (vlq > 0) {\n      // There are still more digits in this value, so we must make sure the\n      // continuation bit is marked.\n      digit |= VLQ_CONTINUATION_BIT;\n    }\n    encoded += base64.encode(digit);\n  } while (vlq > 0);\n\n  return encoded;\n};\n\n/**\n * Decodes the next base 64 VLQ value from the given string and returns the\n * value and the rest of the string via the out parameter.\n */\nexports.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {\n  var strLen = aStr.length;\n  var result = 0;\n  var shift = 0;\n  var continuation, digit;\n\n  do {\n    if (aIndex >= strLen) {\n      throw new Error(\"Expected more digits in base 64 VLQ value.\");\n    }\n\n    digit = base64.decode(aStr.charCodeAt(aIndex++));\n    if (digit === -1) {\n      throw new Error(\"Invalid base64 digit: \" + aStr.charAt(aIndex - 1));\n    }\n\n    continuation = !!(digit & VLQ_CONTINUATION_BIT);\n    digit &= VLQ_BASE_MASK;\n    result = result + (digit << shift);\n    shift += VLQ_BASE_SHIFT;\n  } while (continuation);\n\n  aOutParam.value = fromVLQSigned(result);\n  aOutParam.rest = aIndex;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n/**\n * This is a helper function for getting values from parameter/options\n * objects.\n *\n * @param args The object we are extracting values from\n * @param name The name of the property we are getting.\n * @param defaultValue An optional value to return if the property is missing\n * from the object. If this is not specified and the property is missing, an\n * error will be thrown.\n */\nfunction getArg(aArgs, aName, aDefaultValue) {\n  if (aName in aArgs) {\n    return aArgs[aName];\n  } else if (arguments.length === 3) {\n    return aDefaultValue;\n  } else {\n    throw new Error('\"' + aName + '\" is a required argument.');\n  }\n}\nexports.getArg = getArg;\n\nvar urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.-]*)(?::(\\d+))?(.*)$/;\nvar dataUrlRegexp = /^data:.+\\,.+$/;\n\nfunction urlParse(aUrl) {\n  var match = aUrl.match(urlRegexp);\n  if (!match) {\n    return null;\n  }\n  return {\n    scheme: match[1],\n    auth: match[2],\n    host: match[3],\n    port: match[4],\n    path: match[5]\n  };\n}\nexports.urlParse = urlParse;\n\nfunction urlGenerate(aParsedUrl) {\n  var url = '';\n  if (aParsedUrl.scheme) {\n    url += aParsedUrl.scheme + ':';\n  }\n  url += '//';\n  if (aParsedUrl.auth) {\n    url += aParsedUrl.auth + '@';\n  }\n  if (aParsedUrl.host) {\n    url += aParsedUrl.host;\n  }\n  if (aParsedUrl.port) {\n    url += \":\" + aParsedUrl.port\n  }\n  if (aParsedUrl.path) {\n    url += aParsedUrl.path;\n  }\n  return url;\n}\nexports.urlGenerate = urlGenerate;\n\n/**\n * Normalizes a path, or the path portion of a URL:\n *\n * - Replaces consecutive slashes with one slash.\n * - Removes unnecessary '.' parts.\n * - Removes unnecessary '<dir>/..' parts.\n *\n * Based on code in the Node.js 'path' core module.\n *\n * @param aPath The path or url to normalize.\n */\nfunction normalize(aPath) {\n  var path = aPath;\n  var url = urlParse(aPath);\n  if (url) {\n    if (!url.path) {\n      return aPath;\n    }\n    path = url.path;\n  }\n  var isAbsolute = exports.isAbsolute(path);\n\n  var parts = path.split(/\\/+/);\n  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {\n    part = parts[i];\n    if (part === '.') {\n      parts.splice(i, 1);\n    } else if (part === '..') {\n      up++;\n    } else if (up > 0) {\n      if (part === '') {\n        // The first part is blank if the path is absolute. Trying to go\n        // above the root is a no-op. Therefore we can remove all '..' parts\n        // directly after the root.\n        parts.splice(i + 1, up);\n        up = 0;\n      } else {\n        parts.splice(i, 2);\n        up--;\n      }\n    }\n  }\n  path = parts.join('/');\n\n  if (path === '') {\n    path = isAbsolute ? '/' : '.';\n  }\n\n  if (url) {\n    url.path = path;\n    return urlGenerate(url);\n  }\n  return path;\n}\nexports.normalize = normalize;\n\n/**\n * Joins two paths/URLs.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be joined with the root.\n *\n * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\n *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\n *   first.\n * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\n *   is updated with the result and aRoot is returned. Otherwise the result\n *   is returned.\n *   - If aPath is absolute, the result is aPath.\n *   - Otherwise the two paths are joined with a slash.\n * - Joining for example 'http://' and 'www.example.com' is also supported.\n */\nfunction join(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n  if (aPath === \"\") {\n    aPath = \".\";\n  }\n  var aPathUrl = urlParse(aPath);\n  var aRootUrl = urlParse(aRoot);\n  if (aRootUrl) {\n    aRoot = aRootUrl.path || '/';\n  }\n\n  // `join(foo, '//www.example.org')`\n  if (aPathUrl && !aPathUrl.scheme) {\n    if (aRootUrl) {\n      aPathUrl.scheme = aRootUrl.scheme;\n    }\n    return urlGenerate(aPathUrl);\n  }\n\n  if (aPathUrl || aPath.match(dataUrlRegexp)) {\n    return aPath;\n  }\n\n  // `join('http://', 'www.example.com')`\n  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\n    aRootUrl.host = aPath;\n    return urlGenerate(aRootUrl);\n  }\n\n  var joined = aPath.charAt(0) === '/'\n    ? aPath\n    : normalize(aRoot.replace(/\\/+$/, '') + '/' + aPath);\n\n  if (aRootUrl) {\n    aRootUrl.path = joined;\n    return urlGenerate(aRootUrl);\n  }\n  return joined;\n}\nexports.join = join;\n\nexports.isAbsolute = function (aPath) {\n  return aPath.charAt(0) === '/' || urlRegexp.test(aPath);\n};\n\n/**\n * Make a path relative to a URL or another path.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be made relative to aRoot.\n */\nfunction relative(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n\n  aRoot = aRoot.replace(/\\/$/, '');\n\n  // It is possible for the path to be above the root. In this case, simply\n  // checking whether the root is a prefix of the path won't work. Instead, we\n  // need to remove components from the root one by one, until either we find\n  // a prefix that fits, or we run out of components to remove.\n  var level = 0;\n  while (aPath.indexOf(aRoot + '/') !== 0) {\n    var index = aRoot.lastIndexOf(\"/\");\n    if (index < 0) {\n      return aPath;\n    }\n\n    // If the only part of the root that is left is the scheme (i.e. http://,\n    // file:///, etc.), one or more slashes (/), or simply nothing at all, we\n    // have exhausted all components, so the path is not relative to the root.\n    aRoot = aRoot.slice(0, index);\n    if (aRoot.match(/^([^\\/]+:\\/)?\\/*$/)) {\n      return aPath;\n    }\n\n    ++level;\n  }\n\n  // Make sure we add a \"../\" for each component we removed from the root.\n  return Array(level + 1).join(\"../\") + aPath.substr(aRoot.length + 1);\n}\nexports.relative = relative;\n\nvar supportsNullProto = (function () {\n  var obj = Object.create(null);\n  return !('__proto__' in obj);\n}());\n\nfunction identity (s) {\n  return s;\n}\n\n/**\n * Because behavior goes wacky when you set `__proto__` on objects, we\n * have to prefix all the strings in our set with an arbitrary character.\n *\n * See https://github.com/mozilla/source-map/pull/31 and\n * https://github.com/mozilla/source-map/issues/30\n *\n * @param String aStr\n */\nfunction toSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return '$' + aStr;\n  }\n\n  return aStr;\n}\nexports.toSetString = supportsNullProto ? identity : toSetString;\n\nfunction fromSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return aStr.slice(1);\n  }\n\n  return aStr;\n}\nexports.fromSetString = supportsNullProto ? identity : fromSetString;\n\nfunction isProtoString(s) {\n  if (!s) {\n    return false;\n  }\n\n  var length = s.length;\n\n  if (length < 9 /* \"__proto__\".length */) {\n    return false;\n  }\n\n  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 2) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 4) !== 116 /* 't' */ ||\n      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||\n      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||\n      s.charCodeAt(length - 8) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 9) !== 95  /* '_' */) {\n    return false;\n  }\n\n  for (var i = length - 10; i >= 0; i--) {\n    if (s.charCodeAt(i) !== 36 /* '$' */) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Comparator between two mappings where the original positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same original source/line/column, but different generated\n * line and column the same. Useful when searching for a mapping with a\n * stubbed out mapping.\n */\nfunction compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\n  var cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0 || onlyCompareOriginal) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByOriginalPositions = compareByOriginalPositions;\n\n/**\n * Comparator between two mappings with deflated source and name indices where\n * the generated positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same generated line and column, but different\n * source/name/original line and column the same. Useful when searching for a\n * mapping with a stubbed out mapping.\n */\nfunction compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0 || onlyCompareGenerated) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;\n\nfunction strcmp(aStr1, aStr2) {\n  if (aStr1 === aStr2) {\n    return 0;\n  }\n\n  if (aStr1 === null) {\n    return 1; // aStr2 !== null\n  }\n\n  if (aStr2 === null) {\n    return -1; // aStr1 !== null\n  }\n\n  if (aStr1 > aStr2) {\n    return 1;\n  }\n\n  return -1;\n}\n\n/**\n * Comparator between two mappings with inflated source and name strings where\n * the generated positions are compared.\n */\nfunction compareByGeneratedPositionsInflated(mappingA, mappingB) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;\n\n/**\n * Strip any JSON XSSI avoidance prefix from the string (as documented\n * in the source maps specification), and then parse the string as\n * JSON.\n */\nfunction parseSourceMapInput(str) {\n  return JSON.parse(str.replace(/^\\)]}'[^\\n]*\\n/, ''));\n}\nexports.parseSourceMapInput = parseSourceMapInput;\n\n/**\n * Compute the URL of a source given the the source root, the source's\n * URL, and the source map's URL.\n */\nfunction computeSourceURL(sourceRoot, sourceURL, sourceMapURL) {\n  sourceURL = sourceURL || '';\n\n  if (sourceRoot) {\n    // This follows what Chrome does.\n    if (sourceRoot[sourceRoot.length - 1] !== '/' && sourceURL[0] !== '/') {\n      sourceRoot += '/';\n    }\n    // The spec says:\n    //   Line 4: An optional source root, useful for relocating source\n    //   files on a server or removing repeated values in the\n    //   “sources” entry.  This value is prepended to the individual\n    //   entries in the “source” field.\n    sourceURL = sourceRoot + sourceURL;\n  }\n\n  // Historically, SourceMapConsumer did not take the sourceMapURL as\n  // a parameter.  This mode is still somewhat supported, which is why\n  // this code block is conditional.  However, it's preferable to pass\n  // the source map URL to SourceMapConsumer, so that this function\n  // can implement the source URL resolution algorithm as outlined in\n  // the spec.  This block is basically the equivalent of:\n  //    new URL(sourceURL, sourceMapURL).toString()\n  // ... except it avoids using URL, which wasn't available in the\n  // older releases of node still supported by this library.\n  //\n  // The spec says:\n  //   If the sources are not absolute URLs after prepending of the\n  //   “sourceRoot”, the sources are resolved relative to the\n  //   SourceMap (like resolving script src in a html document).\n  if (sourceMapURL) {\n    var parsed = urlParse(sourceMapURL);\n    if (!parsed) {\n      throw new Error(\"sourceMapURL could not be parsed\");\n    }\n    if (parsed.path) {\n      // Strip the last path component, but keep the \"/\".\n      var index = parsed.path.lastIndexOf('/');\n      if (index >= 0) {\n        parsed.path = parsed.path.substring(0, index + 1);\n      }\n    }\n    sourceURL = join(urlGenerate(parsed), sourceURL);\n  }\n\n  return normalize(sourceURL);\n}\nexports.computeSourceURL = computeSourceURL;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar has = Object.prototype.hasOwnProperty;\nvar hasNativeMap = typeof Map !== \"undefined\";\n\n/**\n * A data structure which is a combination of an array and a set. Adding a new\n * member is O(1), testing for membership is O(1), and finding the index of an\n * element is O(1). Removing elements from the set is not supported. Only\n * strings are supported for membership.\n */\nfunction ArraySet() {\n  this._array = [];\n  this._set = hasNativeMap ? new Map() : Object.create(null);\n}\n\n/**\n * Static method for creating ArraySet instances from an existing array.\n */\nArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\n  var set = new ArraySet();\n  for (var i = 0, len = aArray.length; i < len; i++) {\n    set.add(aArray[i], aAllowDuplicates);\n  }\n  return set;\n};\n\n/**\n * Return how many unique items are in this ArraySet. If duplicates have been\n * added, than those do not count towards the size.\n *\n * @returns Number\n */\nArraySet.prototype.size = function ArraySet_size() {\n  return hasNativeMap ? this._set.size : Object.getOwnPropertyNames(this._set).length;\n};\n\n/**\n * Add the given string to this set.\n *\n * @param String aStr\n */\nArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\n  var sStr = hasNativeMap ? aStr : util.toSetString(aStr);\n  var isDuplicate = hasNativeMap ? this.has(aStr) : has.call(this._set, sStr);\n  var idx = this._array.length;\n  if (!isDuplicate || aAllowDuplicates) {\n    this._array.push(aStr);\n  }\n  if (!isDuplicate) {\n    if (hasNativeMap) {\n      this._set.set(aStr, idx);\n    } else {\n      this._set[sStr] = idx;\n    }\n  }\n};\n\n/**\n * Is the given string a member of this set?\n *\n * @param String aStr\n */\nArraySet.prototype.has = function ArraySet_has(aStr) {\n  if (hasNativeMap) {\n    return this._set.has(aStr);\n  } else {\n    var sStr = util.toSetString(aStr);\n    return has.call(this._set, sStr);\n  }\n};\n\n/**\n * What is the index of the given string in the array?\n *\n * @param String aStr\n */\nArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {\n  if (hasNativeMap) {\n    var idx = this._set.get(aStr);\n    if (idx >= 0) {\n        return idx;\n    }\n  } else {\n    var sStr = util.toSetString(aStr);\n    if (has.call(this._set, sStr)) {\n      return this._set[sStr];\n    }\n  }\n\n  throw new Error('\"' + aStr + '\" is not in the set.');\n};\n\n/**\n * What is the element at the given index?\n *\n * @param Number aIdx\n */\nArraySet.prototype.at = function ArraySet_at(aIdx) {\n  if (aIdx >= 0 && aIdx < this._array.length) {\n    return this._array[aIdx];\n  }\n  throw new Error('No element indexed by ' + aIdx);\n};\n\n/**\n * Returns the array representation of this set (which has the proper indices\n * indicated by indexOf). Note that this is a copy of the internal array used\n * for storing the members so that no one can mess with internal state.\n */\nArraySet.prototype.toArray = function ArraySet_toArray() {\n  return this._array.slice();\n};\n\nexports.ArraySet = ArraySet;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nexports.GREATEST_LOWER_BOUND = 1;\nexports.LEAST_UPPER_BOUND = 2;\n\n/**\n * Recursive implementation of binary search.\n *\n * @param aLow Indices here and lower do not contain the needle.\n * @param aHigh Indices here and higher do not contain the needle.\n * @param aNeedle The element being searched for.\n * @param aHaystack The non-empty array being searched.\n * @param aCompare Function which takes two elements and returns -1, 0, or 1.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n */\nfunction recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {\n  // This function terminates when one of the following is true:\n  //\n  //   1. We find the exact element we are looking for.\n  //\n  //   2. We did not find the exact element, but we can return the index of\n  //      the next-closest element.\n  //\n  //   3. We did not find the exact element, and there is no next-closest\n  //      element than the one we are searching for, so we return -1.\n  var mid = Math.floor((aHigh - aLow) / 2) + aLow;\n  var cmp = aCompare(aNeedle, aHaystack[mid], true);\n  if (cmp === 0) {\n    // Found the element we are looking for.\n    return mid;\n  }\n  else if (cmp > 0) {\n    // Our needle is greater than aHaystack[mid].\n    if (aHigh - mid > 1) {\n      // The element is in the upper half.\n      return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // The exact needle element was not found in this haystack. Determine if\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return aHigh < aHaystack.length ? aHigh : -1;\n    } else {\n      return mid;\n    }\n  }\n  else {\n    // Our needle is less than aHaystack[mid].\n    if (mid - aLow > 1) {\n      // The element is in the lower half.\n      return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return mid;\n    } else {\n      return aLow < 0 ? -1 : aLow;\n    }\n  }\n}\n\n/**\n * This is an implementation of binary search which will always try and return\n * the index of the closest element if there is no exact hit. This is because\n * mappings between original and generated line/col pairs are single points,\n * and there is an implicit region between each of them, so a miss just means\n * that you aren't on the very start of a region.\n *\n * @param aNeedle The element you are looking for.\n * @param aHaystack The array that is being searched.\n * @param aCompare A function which takes the needle and an element in the\n *     array and returns -1, 0, or 1 depending on whether the needle is less\n *     than, equal to, or greater than the element, respectively.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.\n */\nexports.search = function search(aNeedle, aHaystack, aCompare, aBias) {\n  if (aHaystack.length === 0) {\n    return -1;\n  }\n\n  var index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack,\n                              aCompare, aBias || exports.GREATEST_LOWER_BOUND);\n  if (index < 0) {\n    return -1;\n  }\n\n  // We have found either the exact element, or the next-closest element than\n  // the one we are searching for. However, there may be more than one such\n  // element. Make sure we always return the smallest of these.\n  while (index - 1 >= 0) {\n    if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {\n      break;\n    }\n    --index;\n  }\n\n  return index;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n// It turns out that some (most?) JavaScript engines don't self-host\n// `Array.prototype.sort`. This makes sense because C++ will likely remain\n// faster than JS when doing raw CPU-intensive sorting. However, when using a\n// custom comparator function, calling back and forth between the VM's C++ and\n// JIT'd JS is rather slow *and* loses JIT type information, resulting in\n// worse generated code for the comparator function than would be optimal. In\n// fact, when sorting with a comparator, these costs outweigh the benefits of\n// sorting in C++. By using our own JS-implemented Quick Sort (below), we get\n// a ~3500ms mean speed-up in `bench/bench.html`.\n\n/**\n * Swap the elements indexed by `x` and `y` in the array `ary`.\n *\n * @param {Array} ary\n *        The array.\n * @param {Number} x\n *        The index of the first item.\n * @param {Number} y\n *        The index of the second item.\n */\nfunction swap(ary, x, y) {\n  var temp = ary[x];\n  ary[x] = ary[y];\n  ary[y] = temp;\n}\n\n/**\n * Returns a random integer within the range `low .. high` inclusive.\n *\n * @param {Number} low\n *        The lower bound on the range.\n * @param {Number} high\n *        The upper bound on the range.\n */\nfunction randomIntInRange(low, high) {\n  return Math.round(low + (Math.random() * (high - low)));\n}\n\n/**\n * The Quick Sort algorithm.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n * @param {Number} p\n *        Start index of the array\n * @param {Number} r\n *        End index of the array\n */\nfunction doQuickSort(ary, comparator, p, r) {\n  // If our lower bound is less than our upper bound, we (1) partition the\n  // array into two pieces and (2) recurse on each half. If it is not, this is\n  // the empty array and our base case.\n\n  if (p < r) {\n    // (1) Partitioning.\n    //\n    // The partitioning chooses a pivot between `p` and `r` and moves all\n    // elements that are less than or equal to the pivot to the before it, and\n    // all the elements that are greater than it after it. The effect is that\n    // once partition is done, the pivot is in the exact place it will be when\n    // the array is put in sorted order, and it will not need to be moved\n    // again. This runs in O(n) time.\n\n    // Always choose a random pivot so that an input array which is reverse\n    // sorted does not cause O(n^2) running time.\n    var pivotIndex = randomIntInRange(p, r);\n    var i = p - 1;\n\n    swap(ary, pivotIndex, r);\n    var pivot = ary[r];\n\n    // Immediately after `j` is incremented in this loop, the following hold\n    // true:\n    //\n    //   * Every element in `ary[p .. i]` is less than or equal to the pivot.\n    //\n    //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.\n    for (var j = p; j < r; j++) {\n      if (comparator(ary[j], pivot) <= 0) {\n        i += 1;\n        swap(ary, i, j);\n      }\n    }\n\n    swap(ary, i + 1, j);\n    var q = i + 1;\n\n    // (2) Recurse on each half.\n\n    doQuickSort(ary, comparator, p, q - 1);\n    doQuickSort(ary, comparator, q + 1, r);\n  }\n}\n\n/**\n * Sort the given array in-place with the given comparator function.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n */\nexports.quickSort = function (ary, comparator) {\n  doQuickSort(ary, comparator, 0, ary.length - 1);\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar binarySearch = require('./binary-search');\nvar ArraySet = require('./array-set').ArraySet;\nvar base64VLQ = require('./base64-vlq');\nvar quickSort = require('./quick-sort').quickSort;\n\nfunction SourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  return sourceMap.sections != null\n    ? new IndexedSourceMapConsumer(sourceMap, aSourceMapURL)\n    : new BasicSourceMapConsumer(sourceMap, aSourceMapURL);\n}\n\nSourceMapConsumer.fromSourceMap = function(aSourceMap, aSourceMapURL) {\n  return BasicSourceMapConsumer.fromSourceMap(aSourceMap, aSourceMapURL);\n}\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nSourceMapConsumer.prototype._version = 3;\n\n// `__generatedMappings` and `__originalMappings` are arrays that hold the\n// parsed mapping coordinates from the source map's \"mappings\" attribute. They\n// are lazily instantiated, accessed via the `_generatedMappings` and\n// `_originalMappings` getters respectively, and we only parse the mappings\n// and create these arrays once queried for a source location. We jump through\n// these hoops because there can be many thousands of mappings, and parsing\n// them is expensive, so we only want to do it if we must.\n//\n// Each object in the arrays is of the form:\n//\n//     {\n//       generatedLine: The line number in the generated code,\n//       generatedColumn: The column number in the generated code,\n//       source: The path to the original source file that generated this\n//               chunk of code,\n//       originalLine: The line number in the original source that\n//                     corresponds to this chunk of generated code,\n//       originalColumn: The column number in the original source that\n//                       corresponds to this chunk of generated code,\n//       name: The name of the original symbol which generated this chunk of\n//             code.\n//     }\n//\n// All properties except for `generatedLine` and `generatedColumn` can be\n// `null`.\n//\n// `_generatedMappings` is ordered by the generated positions.\n//\n// `_originalMappings` is ordered by the original positions.\n\nSourceMapConsumer.prototype.__generatedMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_generatedMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__generatedMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__generatedMappings;\n  }\n});\n\nSourceMapConsumer.prototype.__originalMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_originalMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__originalMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__originalMappings;\n  }\n});\n\nSourceMapConsumer.prototype._charIsMappingSeparator =\n  function SourceMapConsumer_charIsMappingSeparator(aStr, index) {\n    var c = aStr.charAt(index);\n    return c === \";\" || c === \",\";\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    throw new Error(\"Subclasses must implement _parseMappings\");\n  };\n\nSourceMapConsumer.GENERATED_ORDER = 1;\nSourceMapConsumer.ORIGINAL_ORDER = 2;\n\nSourceMapConsumer.GREATEST_LOWER_BOUND = 1;\nSourceMapConsumer.LEAST_UPPER_BOUND = 2;\n\n/**\n * Iterate over each mapping between an original source/line/column and a\n * generated line/column in this source map.\n *\n * @param Function aCallback\n *        The function that is called with each mapping.\n * @param Object aContext\n *        Optional. If specified, this object will be the value of `this` every\n *        time that `aCallback` is called.\n * @param aOrder\n *        Either `SourceMapConsumer.GENERATED_ORDER` or\n *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to\n *        iterate over the mappings sorted by the generated file's line/column\n *        order or the original's source/line/column order, respectively. Defaults to\n *        `SourceMapConsumer.GENERATED_ORDER`.\n */\nSourceMapConsumer.prototype.eachMapping =\n  function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {\n    var context = aContext || null;\n    var order = aOrder || SourceMapConsumer.GENERATED_ORDER;\n\n    var mappings;\n    switch (order) {\n    case SourceMapConsumer.GENERATED_ORDER:\n      mappings = this._generatedMappings;\n      break;\n    case SourceMapConsumer.ORIGINAL_ORDER:\n      mappings = this._originalMappings;\n      break;\n    default:\n      throw new Error(\"Unknown order of iteration.\");\n    }\n\n    var sourceRoot = this.sourceRoot;\n    mappings.map(function (mapping) {\n      var source = mapping.source === null ? null : this._sources.at(mapping.source);\n      source = util.computeSourceURL(sourceRoot, source, this._sourceMapURL);\n      return {\n        source: source,\n        generatedLine: mapping.generatedLine,\n        generatedColumn: mapping.generatedColumn,\n        originalLine: mapping.originalLine,\n        originalColumn: mapping.originalColumn,\n        name: mapping.name === null ? null : this._names.at(mapping.name)\n      };\n    }, this).forEach(aCallback, context);\n  };\n\n/**\n * Returns all generated line and column information for the original source,\n * line, and column provided. If no column is provided, returns all mappings\n * corresponding to a either the line we are searching for or the next\n * closest line that has any mappings. Otherwise, returns all mappings\n * corresponding to the given line and either the column we are searching for\n * or the next closest column that has any offsets.\n *\n * The only argument is an object with the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number is 1-based.\n *   - column: Optional. the column number in the original source.\n *    The column number is 0-based.\n *\n * and an array of objects is returned, each with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *    line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *    The column number is 0-based.\n */\nSourceMapConsumer.prototype.allGeneratedPositionsFor =\n  function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {\n    var line = util.getArg(aArgs, 'line');\n\n    // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping\n    // returns the index of the closest mapping less than the needle. By\n    // setting needle.originalColumn to 0, we thus find the last mapping for\n    // the given line, provided such a mapping exists.\n    var needle = {\n      source: util.getArg(aArgs, 'source'),\n      originalLine: line,\n      originalColumn: util.getArg(aArgs, 'column', 0)\n    };\n\n    needle.source = this._findSourceIndex(needle.source);\n    if (needle.source < 0) {\n      return [];\n    }\n\n    var mappings = [];\n\n    var index = this._findMapping(needle,\n                                  this._originalMappings,\n                                  \"originalLine\",\n                                  \"originalColumn\",\n                                  util.compareByOriginalPositions,\n                                  binarySearch.LEAST_UPPER_BOUND);\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (aArgs.column === undefined) {\n        var originalLine = mapping.originalLine;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we found. Since\n        // mappings are sorted, this is guaranteed to find all mappings for\n        // the line we found.\n        while (mapping && mapping.originalLine === originalLine) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      } else {\n        var originalColumn = mapping.originalColumn;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we were searching for.\n        // Since mappings are sorted, this is guaranteed to find all mappings for\n        // the line we are searching for.\n        while (mapping &&\n               mapping.originalLine === line &&\n               mapping.originalColumn == originalColumn) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      }\n    }\n\n    return mappings;\n  };\n\nexports.SourceMapConsumer = SourceMapConsumer;\n\n/**\n * A BasicSourceMapConsumer instance represents a parsed source map which we can\n * query for information about the original file positions by giving it a file\n * position in the generated source.\n *\n * The first parameter is the raw source map (either as a JSON string, or\n * already parsed to an object). According to the spec, source maps have the\n * following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - sources: An array of URLs to the original source files.\n *   - names: An array of identifiers which can be referrenced by individual mappings.\n *   - sourceRoot: Optional. The URL root from which all sources are relative.\n *   - sourcesContent: Optional. An array of contents of the original source files.\n *   - mappings: A string of base64 VLQs which contain the actual mappings.\n *   - file: Optional. The generated file this source map is associated with.\n *\n * Here is an example source map, taken from the source map spec[0]:\n *\n *     {\n *       version : 3,\n *       file: \"out.js\",\n *       sourceRoot : \"\",\n *       sources: [\"foo.js\", \"bar.js\"],\n *       names: [\"src\", \"maps\", \"are\", \"fun\"],\n *       mappings: \"AA,AB;;ABCDE;\"\n *     }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#\n */\nfunction BasicSourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sources = util.getArg(sourceMap, 'sources');\n  // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which\n  // requires the array) to play nice here.\n  var names = util.getArg(sourceMap, 'names', []);\n  var sourceRoot = util.getArg(sourceMap, 'sourceRoot', null);\n  var sourcesContent = util.getArg(sourceMap, 'sourcesContent', null);\n  var mappings = util.getArg(sourceMap, 'mappings');\n  var file = util.getArg(sourceMap, 'file', null);\n\n  // Once again, Sass deviates from the spec and supplies the version as a\n  // string rather than a number, so we use loose equality checking here.\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  if (sourceRoot) {\n    sourceRoot = util.normalize(sourceRoot);\n  }\n\n  sources = sources\n    .map(String)\n    // Some source maps produce relative source paths like \"./foo.js\" instead of\n    // \"foo.js\".  Normalize these first so that future comparisons will succeed.\n    // See bugzil.la/1090768.\n    .map(util.normalize)\n    // Always ensure that absolute sources are internally stored relative to\n    // the source root, if the source root is absolute. Not doing this would\n    // be particularly problematic when the source root is a prefix of the\n    // source (valid, but why??). See github issue #199 and bugzil.la/1188982.\n    .map(function (source) {\n      return sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source)\n        ? util.relative(sourceRoot, source)\n        : source;\n    });\n\n  // Pass `true` below to allow duplicate names and sources. While source maps\n  // are intended to be compressed and deduplicated, the TypeScript compiler\n  // sometimes generates source maps with duplicates in them. See Github issue\n  // #72 and bugzil.la/889492.\n  this._names = ArraySet.fromArray(names.map(String), true);\n  this._sources = ArraySet.fromArray(sources, true);\n\n  this._absoluteSources = this._sources.toArray().map(function (s) {\n    return util.computeSourceURL(sourceRoot, s, aSourceMapURL);\n  });\n\n  this.sourceRoot = sourceRoot;\n  this.sourcesContent = sourcesContent;\n  this._mappings = mappings;\n  this._sourceMapURL = aSourceMapURL;\n  this.file = file;\n}\n\nBasicSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nBasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;\n\n/**\n * Utility function to find the index of a source.  Returns -1 if not\n * found.\n */\nBasicSourceMapConsumer.prototype._findSourceIndex = function(aSource) {\n  var relativeSource = aSource;\n  if (this.sourceRoot != null) {\n    relativeSource = util.relative(this.sourceRoot, relativeSource);\n  }\n\n  if (this._sources.has(relativeSource)) {\n    return this._sources.indexOf(relativeSource);\n  }\n\n  // Maybe aSource is an absolute URL as returned by |sources|.  In\n  // this case we can't simply undo the transform.\n  var i;\n  for (i = 0; i < this._absoluteSources.length; ++i) {\n    if (this._absoluteSources[i] == aSource) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\n/**\n * Create a BasicSourceMapConsumer from a SourceMapGenerator.\n *\n * @param SourceMapGenerator aSourceMap\n *        The source map that will be consumed.\n * @param String aSourceMapURL\n *        The URL at which the source map can be found (optional)\n * @returns BasicSourceMapConsumer\n */\nBasicSourceMapConsumer.fromSourceMap =\n  function SourceMapConsumer_fromSourceMap(aSourceMap, aSourceMapURL) {\n    var smc = Object.create(BasicSourceMapConsumer.prototype);\n\n    var names = smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);\n    var sources = smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);\n    smc.sourceRoot = aSourceMap._sourceRoot;\n    smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),\n                                                            smc.sourceRoot);\n    smc.file = aSourceMap._file;\n    smc._sourceMapURL = aSourceMapURL;\n    smc._absoluteSources = smc._sources.toArray().map(function (s) {\n      return util.computeSourceURL(smc.sourceRoot, s, aSourceMapURL);\n    });\n\n    // Because we are modifying the entries (by converting string sources and\n    // names to indices into the sources and names ArraySets), we have to make\n    // a copy of the entry or else bad things happen. Shared mutable state\n    // strikes again! See github issue #191.\n\n    var generatedMappings = aSourceMap._mappings.toArray().slice();\n    var destGeneratedMappings = smc.__generatedMappings = [];\n    var destOriginalMappings = smc.__originalMappings = [];\n\n    for (var i = 0, length = generatedMappings.length; i < length; i++) {\n      var srcMapping = generatedMappings[i];\n      var destMapping = new Mapping;\n      destMapping.generatedLine = srcMapping.generatedLine;\n      destMapping.generatedColumn = srcMapping.generatedColumn;\n\n      if (srcMapping.source) {\n        destMapping.source = sources.indexOf(srcMapping.source);\n        destMapping.originalLine = srcMapping.originalLine;\n        destMapping.originalColumn = srcMapping.originalColumn;\n\n        if (srcMapping.name) {\n          destMapping.name = names.indexOf(srcMapping.name);\n        }\n\n        destOriginalMappings.push(destMapping);\n      }\n\n      destGeneratedMappings.push(destMapping);\n    }\n\n    quickSort(smc.__originalMappings, util.compareByOriginalPositions);\n\n    return smc;\n  };\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nBasicSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(BasicSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    return this._absoluteSources.slice();\n  }\n});\n\n/**\n * Provide the JIT with a nice shape / hidden class.\n */\nfunction Mapping() {\n  this.generatedLine = 0;\n  this.generatedColumn = 0;\n  this.source = null;\n  this.originalLine = null;\n  this.originalColumn = null;\n  this.name = null;\n}\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nBasicSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    var generatedLine = 1;\n    var previousGeneratedColumn = 0;\n    var previousOriginalLine = 0;\n    var previousOriginalColumn = 0;\n    var previousSource = 0;\n    var previousName = 0;\n    var length = aStr.length;\n    var index = 0;\n    var cachedSegments = {};\n    var temp = {};\n    var originalMappings = [];\n    var generatedMappings = [];\n    var mapping, str, segment, end, value;\n\n    while (index < length) {\n      if (aStr.charAt(index) === ';') {\n        generatedLine++;\n        index++;\n        previousGeneratedColumn = 0;\n      }\n      else if (aStr.charAt(index) === ',') {\n        index++;\n      }\n      else {\n        mapping = new Mapping();\n        mapping.generatedLine = generatedLine;\n\n        // Because each offset is encoded relative to the previous one,\n        // many segments often have the same encoding. We can exploit this\n        // fact by caching the parsed variable length fields of each segment,\n        // allowing us to avoid a second parse if we encounter the same\n        // segment again.\n        for (end = index; end < length; end++) {\n          if (this._charIsMappingSeparator(aStr, end)) {\n            break;\n          }\n        }\n        str = aStr.slice(index, end);\n\n        segment = cachedSegments[str];\n        if (segment) {\n          index += str.length;\n        } else {\n          segment = [];\n          while (index < end) {\n            base64VLQ.decode(aStr, index, temp);\n            value = temp.value;\n            index = temp.rest;\n            segment.push(value);\n          }\n\n          if (segment.length === 2) {\n            throw new Error('Found a source, but no line and column');\n          }\n\n          if (segment.length === 3) {\n            throw new Error('Found a source and line, but no column');\n          }\n\n          cachedSegments[str] = segment;\n        }\n\n        // Generated column.\n        mapping.generatedColumn = previousGeneratedColumn + segment[0];\n        previousGeneratedColumn = mapping.generatedColumn;\n\n        if (segment.length > 1) {\n          // Original source.\n          mapping.source = previousSource + segment[1];\n          previousSource += segment[1];\n\n          // Original line.\n          mapping.originalLine = previousOriginalLine + segment[2];\n          previousOriginalLine = mapping.originalLine;\n          // Lines are stored 0-based\n          mapping.originalLine += 1;\n\n          // Original column.\n          mapping.originalColumn = previousOriginalColumn + segment[3];\n          previousOriginalColumn = mapping.originalColumn;\n\n          if (segment.length > 4) {\n            // Original name.\n            mapping.name = previousName + segment[4];\n            previousName += segment[4];\n          }\n        }\n\n        generatedMappings.push(mapping);\n        if (typeof mapping.originalLine === 'number') {\n          originalMappings.push(mapping);\n        }\n      }\n    }\n\n    quickSort(generatedMappings, util.compareByGeneratedPositionsDeflated);\n    this.__generatedMappings = generatedMappings;\n\n    quickSort(originalMappings, util.compareByOriginalPositions);\n    this.__originalMappings = originalMappings;\n  };\n\n/**\n * Find the mapping that best matches the hypothetical \"needle\" mapping that\n * we are searching for in the given \"haystack\" of mappings.\n */\nBasicSourceMapConsumer.prototype._findMapping =\n  function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,\n                                         aColumnName, aComparator, aBias) {\n    // To return the position we are searching for, we must first find the\n    // mapping for the given position and then return the opposite position it\n    // points to. Because the mappings are sorted, we can use binary search to\n    // find the best mapping.\n\n    if (aNeedle[aLineName] <= 0) {\n      throw new TypeError('Line must be greater than or equal to 1, got '\n                          + aNeedle[aLineName]);\n    }\n    if (aNeedle[aColumnName] < 0) {\n      throw new TypeError('Column must be greater than or equal to 0, got '\n                          + aNeedle[aColumnName]);\n    }\n\n    return binarySearch.search(aNeedle, aMappings, aComparator, aBias);\n  };\n\n/**\n * Compute the last column for each generated mapping. The last column is\n * inclusive.\n */\nBasicSourceMapConsumer.prototype.computeColumnSpans =\n  function SourceMapConsumer_computeColumnSpans() {\n    for (var index = 0; index < this._generatedMappings.length; ++index) {\n      var mapping = this._generatedMappings[index];\n\n      // Mappings do not contain a field for the last generated columnt. We\n      // can come up with an optimistic estimate, however, by assuming that\n      // mappings are contiguous (i.e. given two consecutive mappings, the\n      // first mapping ends where the second one starts).\n      if (index + 1 < this._generatedMappings.length) {\n        var nextMapping = this._generatedMappings[index + 1];\n\n        if (mapping.generatedLine === nextMapping.generatedLine) {\n          mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;\n          continue;\n        }\n      }\n\n      // The last mapping for each line spans the entire line.\n      mapping.lastGeneratedColumn = Infinity;\n    }\n  };\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nBasicSourceMapConsumer.prototype.originalPositionFor =\n  function SourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._generatedMappings,\n      \"generatedLine\",\n      \"generatedColumn\",\n      util.compareByGeneratedPositionsDeflated,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._generatedMappings[index];\n\n      if (mapping.generatedLine === needle.generatedLine) {\n        var source = util.getArg(mapping, 'source', null);\n        if (source !== null) {\n          source = this._sources.at(source);\n          source = util.computeSourceURL(this.sourceRoot, source, this._sourceMapURL);\n        }\n        var name = util.getArg(mapping, 'name', null);\n        if (name !== null) {\n          name = this._names.at(name);\n        }\n        return {\n          source: source,\n          line: util.getArg(mapping, 'originalLine', null),\n          column: util.getArg(mapping, 'originalColumn', null),\n          name: name\n        };\n      }\n    }\n\n    return {\n      source: null,\n      line: null,\n      column: null,\n      name: null\n    };\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nBasicSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function BasicSourceMapConsumer_hasContentsOfAllSources() {\n    if (!this.sourcesContent) {\n      return false;\n    }\n    return this.sourcesContent.length >= this._sources.size() &&\n      !this.sourcesContent.some(function (sc) { return sc == null; });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nBasicSourceMapConsumer.prototype.sourceContentFor =\n  function SourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    if (!this.sourcesContent) {\n      return null;\n    }\n\n    var index = this._findSourceIndex(aSource);\n    if (index >= 0) {\n      return this.sourcesContent[index];\n    }\n\n    var relativeSource = aSource;\n    if (this.sourceRoot != null) {\n      relativeSource = util.relative(this.sourceRoot, relativeSource);\n    }\n\n    var url;\n    if (this.sourceRoot != null\n        && (url = util.urlParse(this.sourceRoot))) {\n      // XXX: file:// URIs and absolute paths lead to unexpected behavior for\n      // many users. We can help them out when they expect file:// URIs to\n      // behave like it would if they were running a local HTTP server. See\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.\n      var fileUriAbsPath = relativeSource.replace(/^file:\\/\\//, \"\");\n      if (url.scheme == \"file\"\n          && this._sources.has(fileUriAbsPath)) {\n        return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]\n      }\n\n      if ((!url.path || url.path == \"/\")\n          && this._sources.has(\"/\" + relativeSource)) {\n        return this.sourcesContent[this._sources.indexOf(\"/\" + relativeSource)];\n      }\n    }\n\n    // This function is used recursively from\n    // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we\n    // don't want to throw if we can't find the source - we just want to\n    // return null, so we provide a flag to exit gracefully.\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + relativeSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nBasicSourceMapConsumer.prototype.generatedPositionFor =\n  function SourceMapConsumer_generatedPositionFor(aArgs) {\n    var source = util.getArg(aArgs, 'source');\n    source = this._findSourceIndex(source);\n    if (source < 0) {\n      return {\n        line: null,\n        column: null,\n        lastColumn: null\n      };\n    }\n\n    var needle = {\n      source: source,\n      originalLine: util.getArg(aArgs, 'line'),\n      originalColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._originalMappings,\n      \"originalLine\",\n      \"originalColumn\",\n      util.compareByOriginalPositions,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (mapping.source === needle.source) {\n        return {\n          line: util.getArg(mapping, 'generatedLine', null),\n          column: util.getArg(mapping, 'generatedColumn', null),\n          lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n        };\n      }\n    }\n\n    return {\n      line: null,\n      column: null,\n      lastColumn: null\n    };\n  };\n\nexports.BasicSourceMapConsumer = BasicSourceMapConsumer;\n\n/**\n * An IndexedSourceMapConsumer instance represents a parsed source map which\n * we can query for information. It differs from BasicSourceMapConsumer in\n * that it takes \"indexed\" source maps (i.e. ones with a \"sections\" field) as\n * input.\n *\n * The first parameter is a raw source map (either as a JSON string, or already\n * parsed to an object). According to the spec for indexed source maps, they\n * have the following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - file: Optional. The generated file this source map is associated with.\n *   - sections: A list of section definitions.\n *\n * Each value under the \"sections\" field has two fields:\n *   - offset: The offset into the original specified at which this section\n *       begins to apply, defined as an object with a \"line\" and \"column\"\n *       field.\n *   - map: A source map definition. This source map could also be indexed,\n *       but doesn't have to be.\n *\n * Instead of the \"map\" field, it's also possible to have a \"url\" field\n * specifying a URL to retrieve a source map from, but that's currently\n * unsupported.\n *\n * Here's an example source map, taken from the source map spec[0], but\n * modified to omit a section which uses the \"url\" field.\n *\n *  {\n *    version : 3,\n *    file: \"app.js\",\n *    sections: [{\n *      offset: {line:100, column:10},\n *      map: {\n *        version : 3,\n *        file: \"section.js\",\n *        sources: [\"foo.js\", \"bar.js\"],\n *        names: [\"src\", \"maps\", \"are\", \"fun\"],\n *        mappings: \"AAAA,E;;ABCDE;\"\n *      }\n *    }],\n *  }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt\n */\nfunction IndexedSourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sections = util.getArg(sourceMap, 'sections');\n\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n\n  var lastOffset = {\n    line: -1,\n    column: 0\n  };\n  this._sections = sections.map(function (s) {\n    if (s.url) {\n      // The url field will require support for asynchronicity.\n      // See https://github.com/mozilla/source-map/issues/16\n      throw new Error('Support for url field in sections not implemented.');\n    }\n    var offset = util.getArg(s, 'offset');\n    var offsetLine = util.getArg(offset, 'line');\n    var offsetColumn = util.getArg(offset, 'column');\n\n    if (offsetLine < lastOffset.line ||\n        (offsetLine === lastOffset.line && offsetColumn < lastOffset.column)) {\n      throw new Error('Section offsets must be ordered and non-overlapping.');\n    }\n    lastOffset = offset;\n\n    return {\n      generatedOffset: {\n        // The offset fields are 0-based, but we use 1-based indices when\n        // encoding/decoding from VLQ.\n        generatedLine: offsetLine + 1,\n        generatedColumn: offsetColumn + 1\n      },\n      consumer: new SourceMapConsumer(util.getArg(s, 'map'), aSourceMapURL)\n    }\n  });\n}\n\nIndexedSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nIndexedSourceMapConsumer.prototype.constructor = SourceMapConsumer;\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nIndexedSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(IndexedSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    var sources = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {\n        sources.push(this._sections[i].consumer.sources[j]);\n      }\n    }\n    return sources;\n  }\n});\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nIndexedSourceMapConsumer.prototype.originalPositionFor =\n  function IndexedSourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    // Find the section containing the generated position we're trying to map\n    // to an original position.\n    var sectionIndex = binarySearch.search(needle, this._sections,\n      function(needle, section) {\n        var cmp = needle.generatedLine - section.generatedOffset.generatedLine;\n        if (cmp) {\n          return cmp;\n        }\n\n        return (needle.generatedColumn -\n                section.generatedOffset.generatedColumn);\n      });\n    var section = this._sections[sectionIndex];\n\n    if (!section) {\n      return {\n        source: null,\n        line: null,\n        column: null,\n        name: null\n      };\n    }\n\n    return section.consumer.originalPositionFor({\n      line: needle.generatedLine -\n        (section.generatedOffset.generatedLine - 1),\n      column: needle.generatedColumn -\n        (section.generatedOffset.generatedLine === needle.generatedLine\n         ? section.generatedOffset.generatedColumn - 1\n         : 0),\n      bias: aArgs.bias\n    });\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nIndexedSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function IndexedSourceMapConsumer_hasContentsOfAllSources() {\n    return this._sections.every(function (s) {\n      return s.consumer.hasContentsOfAllSources();\n    });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nIndexedSourceMapConsumer.prototype.sourceContentFor =\n  function IndexedSourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      var content = section.consumer.sourceContentFor(aSource, true);\n      if (content) {\n        return content;\n      }\n    }\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based. \n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nIndexedSourceMapConsumer.prototype.generatedPositionFor =\n  function IndexedSourceMapConsumer_generatedPositionFor(aArgs) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      // Only consider this section if the requested source is in the list of\n      // sources of the consumer.\n      if (section.consumer._findSourceIndex(util.getArg(aArgs, 'source')) === -1) {\n        continue;\n      }\n      var generatedPosition = section.consumer.generatedPositionFor(aArgs);\n      if (generatedPosition) {\n        var ret = {\n          line: generatedPosition.line +\n            (section.generatedOffset.generatedLine - 1),\n          column: generatedPosition.column +\n            (section.generatedOffset.generatedLine === generatedPosition.line\n             ? section.generatedOffset.generatedColumn - 1\n             : 0)\n        };\n        return ret;\n      }\n    }\n\n    return {\n      line: null,\n      column: null\n    };\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nIndexedSourceMapConsumer.prototype._parseMappings =\n  function IndexedSourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    this.__generatedMappings = [];\n    this.__originalMappings = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n      var sectionMappings = section.consumer._generatedMappings;\n      for (var j = 0; j < sectionMappings.length; j++) {\n        var mapping = sectionMappings[j];\n\n        var source = section.consumer._sources.at(mapping.source);\n        source = util.computeSourceURL(section.consumer.sourceRoot, source, this._sourceMapURL);\n        this._sources.add(source);\n        source = this._sources.indexOf(source);\n\n        var name = null;\n        if (mapping.name) {\n          name = section.consumer._names.at(mapping.name);\n          this._names.add(name);\n          name = this._names.indexOf(name);\n        }\n\n        // The mappings coming from the consumer for the section have\n        // generated positions relative to the start of the section, so we\n        // need to offset them to be relative to the start of the concatenated\n        // generated file.\n        var adjustedMapping = {\n          source: source,\n          generatedLine: mapping.generatedLine +\n            (section.generatedOffset.generatedLine - 1),\n          generatedColumn: mapping.generatedColumn +\n            (section.generatedOffset.generatedLine === mapping.generatedLine\n            ? section.generatedOffset.generatedColumn - 1\n            : 0),\n          originalLine: mapping.originalLine,\n          originalColumn: mapping.originalColumn,\n          name: name\n        };\n\n        this.__generatedMappings.push(adjustedMapping);\n        if (typeof adjustedMapping.originalLine === 'number') {\n          this.__originalMappings.push(adjustedMapping);\n        }\n      }\n    }\n\n    quickSort(this.__generatedMappings, util.compareByGeneratedPositionsDeflated);\n    quickSort(this.__originalMappings, util.compareByOriginalPositions);\n  };\n\nexports.IndexedSourceMapConsumer = IndexedSourceMapConsumer;\n","/*\n * Copyright 2009-2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE.txt or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nexports.SourceMapGenerator = require('./lib/source-map-generator').SourceMapGenerator;\nexports.SourceMapConsumer = require('./lib/source-map-consumer').SourceMapConsumer;\nexports.SourceNode = require('./lib/source-node').SourceNode;\n","// tslint:disable:no-conditional-assignment\nimport {SourceMapConsumer} from \"source-map\";\n\nexport class ErrorMapper {\n  // Cache consumer\n  private static _consumer?: SourceMapConsumer;\n\n  public static get consumer(): SourceMapConsumer {\n    if (this._consumer == null) {\n      this._consumer = new SourceMapConsumer(require(\"main.js.map\"));\n    }\n\n    return this._consumer;\n  }\n\n  // Cache previously mapped traces to improve performance\n  public static cache: { [key: string]: string } = {};\n\n  /**\n   * Generates a stack trace using a source map generate original symbol names.\n   *\n   * WARNING - EXTREMELY high CPU cost for first call after reset - >30 CPU! Use sparingly!\n   * (Consecutive calls after a reset are more reasonable, ~0.1 CPU/ea)\n   *\n   * @param {Error | string} error The error or original stack trace\n   * @returns {string} The source-mapped stack trace\n   */\n  public static sourceMappedStackTrace(error: Error | string): string {\n    const stack: string = error instanceof Error ? error.stack as string : error;\n    if (this.cache.hasOwnProperty(stack)) {\n      return this.cache[stack];\n    }\n\n    const re = /^\\s+at\\s+(.+?\\s+)?\\(?([0-z._\\-\\\\\\/]+):(\\d+):(\\d+)\\)?$/gm;\n    let match: RegExpExecArray | null;\n    let outStack = error.toString();\n\n    while (match = re.exec(stack)) {\n      if (match[2] === \"main\") {\n        const pos = this.consumer.originalPositionFor({\n          column: parseInt(match[4], 10),\n          line: parseInt(match[3], 10)\n        });\n\n        if (pos.line != null) {\n          if (pos.name) {\n            outStack += `\\n    at ${pos.name} (${pos.source}:${pos.line}:${pos.column})`;\n          } else {\n            if (match[1]) {\n              // no original source file name known - use file name from given trace\n              outStack += `\\n    at ${match[1]} (${pos.source}:${pos.line}:${pos.column})`;\n            } else {\n              // no original source file name known or in given trace - omit name\n              outStack += `\\n    at ${pos.source}:${pos.line}:${pos.column}`;\n            }\n          }\n        } else {\n          // no known position\n          break;\n        }\n      } else {\n        // no more parseable lines\n        break;\n      }\n    }\n\n    this.cache[stack] = outStack;\n    return outStack;\n  }\n\n  public static wrapLoop(loop: () => void): () => void {\n    return () => {\n      try {\n        loop();\n      } catch (e) {\n        if (e instanceof Error) {\n          if (\"sim\" in Game.rooms) {\n            const message = `Source maps don't work in the simulator - displaying original error`;\n            console.log(`<span style='color:red'>${message}<br>${_.escape(e.stack)}</span>`);\n          } else {\n            console.log(`<span style='color:red'>${_.escape(this.sourceMappedStackTrace(e))}</span>`);\n          }\n        } else {\n          // can't handle it\n          throw e;\n        }\n      }\n    };\n  }\n}\n","\r\nexport function findSpawns(roomName: string, onlyNonSpawning: boolean = true) {\r\n  let room = Game.rooms[roomName];\r\n  return room.find(FIND_MY_STRUCTURES, {\r\n    filter: (structure: Structure) => {\r\n      if (structure.structureType == STRUCTURE_SPAWN) {\r\n        let spawner = structure as StructureSpawn;\r\n        Memory.spawns[spawner.id] = spawner\r\n        return onlyNonSpawning ? spawner.spawning === null : true;\r\n      }\r\n      return false;\r\n    }\r\n  });\r\n}\r\nexport function findFlags(roomName: string) {\r\n  let room = Game.rooms[roomName];\r\n  var flags = room.find(FIND_FLAGS);\r\n  console.log(\"found \" + flags.length + \" flags.\")\r\n  for (var id in flags) {\r\n    Memory.flags[id] = flags[id];\r\n  }\r\n  //m().flags = room.find(FIND_FLAGS);\r\n}\r\n\r\nexport class Search2 {\r\n\r\n  constructor(roomName: string) { this._roomName = roomName; }\r\n  private toFind: BaseEdge = \"rampart\";\r\n  private _roomName: string;\r\n  private floodArray = new PathFinder.CostMatrix();\r\n  private outerRamparts: { [friendlyCoords: string]: string } = {};\r\n  private outerWalls: { [friendlyCoords: string]: string } = {};\r\n\r\n  private getRoomPosition(friendly: string): RoomPosition {\r\n    var test = friendly.split(\",\");\r\n    return new RoomPosition(Number(test[0]), Number(test[1]), this._roomName);\r\n  }\r\n  public findEntrances(toFind: BaseEdge): RoomPosition[] {\r\n\r\n    this.toFind = toFind;\r\n    var room = Game.rooms[this._roomName];\r\n    if (room == undefined) throw Error(\"Cant get neighbors on a non-visible room...\");\r\n\r\n    var ramparts = room.find(FIND_STRUCTURES).filter(s => s != undefined && s.structureType == \"rampart\");\r\n    var walls = room.find(FIND_STRUCTURES).filter(s => s != undefined && s.structureType == \"constructedWall\");\r\n\r\n    for (let i = 0; i < 50; i++) {\r\n      for (let j = 0; j < 50; j++) {\r\n        this.floodArray.set(i, j, Game.map.getTerrainAt(i, j, this._roomName) == \"wall\" ? 1 : 0);\r\n      }\r\n    }\r\n    for (let id in walls) {\r\n      let w = walls[id];\r\n      this.floodArray.set(w.pos.x, w.pos.y, 2);\r\n    }\r\n    for (let id in ramparts) {\r\n      let r = ramparts[id];\r\n      this.floodArray.set(r.pos.x, r.pos.y, 3);\r\n    }\r\n    for (let i = 0; i < 50; i++) {\r\n\r\n      if (this.floodArray.get(0,i) == 0) {\r\n        this.floodFill(0, i);\r\n      }\r\n      if (this.floodArray.get(49,i) == 0) {\r\n        this.floodFill(49, i);\r\n      }\r\n      if (this.floodArray.get(i,0) == 0) {\r\n        this.floodFill(i, 0);\r\n      }\r\n      if (this.floodArray.get(i,49) == 0) {\r\n        this.floodFill(i, 49);\r\n      }\r\n\r\n    }\r\n    if (toFind == \"rampart\") {\r\n      let ramparts: RoomPosition[] = [];\r\n      for (var i in this.outerRamparts) {\r\n        ramparts.push(this.getRoomPosition(i));\r\n      }\r\n      return ramparts;\r\n\r\n    }\r\n    if (toFind == \"constructedWall\") {\r\n      let walls: RoomPosition[] = [];\r\n      for (var i in this.outerWalls) {\r\n        walls.push(this.getRoomPosition(i));\r\n      }\r\n      return walls;\r\n\r\n    }\r\n    else throw Error(\"Nope.\")\r\n  }\r\n\r\n  private floodFill(i: number, j: number) {\r\n\r\n\r\n    if (this.floodArray.get(i, j) == 0) {\r\n      this.floodArray.set(i, j, 1);\r\n      for (let x = -1; x <= 1; x++) {\r\n        if (i + x < 0 || i + x >= 50) continue;\r\n        for (let y = -1; y <= 1; y++) {\r\n          if (j + y < 0 || j + y >= 50) continue;\r\n          this.floodFill(i + x, j + y);\r\n        }\r\n      }\r\n    }\r\n    else if (this.floodArray.get(i, j) == 2) {\r\n      this.floodArray.set(i, j, 4);\r\n      //console.log(\"found wall\");\r\n      this.outerWalls[`${i},${j}`] = \"constructedWall\";\r\n    }\r\n    else if (this.floodArray.get(i, j) == 3) {\r\n      this.floodArray.set(i, j, 4);\r\n      //console.log(\"found rampart\");\r\n      this.outerRamparts[`${i},${j}`] = \"rampart\";\r\n    }\r\n\r\n  }\r\n}\r\n\r\nexport class Search {\r\n\r\n  constructor(roomName: string) { this._roomName = roomName; }\r\n  private _roomName: string;\r\n  private visited: { [index: string]: boolean } = {};\r\n\r\n  //visited = 2\r\n  //rampart = 1\r\n\r\n\r\n  private newVisited: CostMatrix = new PathFinder.CostMatrix();\r\n\r\n  private test() {\r\n\r\n    var room = Game.rooms[this._roomName];\r\n    if (room == undefined) throw Error(\"Cant get neighbors on a non-visible room...\");\r\n\r\n    const visited = new PathFinder.CostMatrix();\r\n    const unchecked :any[] = [];\r\n\r\n    room.find(FIND_EXIT).forEach(e => {\r\n      unchecked.push(this.friendlyName(e));\r\n      visited.set(e.x, e.y, 4);\r\n    })\r\n\r\n    //while (unchecked.length != 0) {\r\n    //  const next = unchecked.pop();\r\n\r\n    //  for (let x = next.x - 1; x <= next.x + 1; x++) {\r\n    //    for (let y = next.y - 1; y <= next.y + 1; y++) {\r\n    //      if (x < 0 || x > 49 || y < 0 || y > 49) continue;\r\n    //      if (x === next.x && y === next.y) continue;\r\n    //      if(visited.get(x,y))\r\n    //    }\r\n    //  }\r\n    //}\r\n\r\n  }\r\n\r\n\r\n  private getNeighbors(source: RoomPosition, includeRamparts: boolean) : RoomPosition[] {\r\n    var room = Game.rooms[source.roomName];\r\n    if (room == undefined) throw Error(\"Cant get neighbors on a non-visible room...\");\r\n\r\n    var found: RoomPosition[] = [];\r\n\r\n    var top = new RoomPosition(source.x, source.y - 1, source.roomName)\r\n    var bottom = new RoomPosition(source.x, source.y + 1, source.roomName)\r\n    var left = new RoomPosition(source.x - 1, source.y, source.roomName)\r\n    var right = new RoomPosition(source.x + 1, source.y, source.roomName)\r\n    var topLeft = new RoomPosition(source.x - 1, source.y - 1, source.roomName)\r\n    var bottomLeft = new RoomPosition(source.x - 1, source.y + 1, source.roomName)\r\n    var topRight = new RoomPosition(source.x + 1, source.y - 1, source.roomName)\r\n    var bottomRight = new RoomPosition(source.x + 1, source.y + 1, source.roomName)\r\n\r\n    if (this.walkable(top, includeRamparts)) found.push(top);\r\n    if (this.walkable(bottom, includeRamparts)) found.push(bottom);\r\n    if (this.walkable(left, includeRamparts)) found.push(left);\r\n    if (this.walkable(right, includeRamparts)) found.push(right);\r\n    if (this.walkable(topLeft, includeRamparts)) found.push(topLeft);\r\n    if (this.walkable(bottomLeft, includeRamparts)) found.push(bottomLeft);\r\n    if (this.walkable(bottomRight, includeRamparts)) found.push(bottomRight);\r\n    if (this.walkable(topRight, includeRamparts)) found.push(topRight);\r\n\r\n    return found;\r\n\r\n\r\n  }\r\n\r\n  private walkable(position: RoomPosition, includeRamparts: boolean): boolean {\r\n    if (position.x < 0 || position.y < 0) return false;\r\n    if (position.x > 49 || position.y > 49) return false;\r\n    if (this.visited[this.friendlyName(position)]) return false;\r\n    \r\n    const lookItems = position.look();\r\n    for (var i in lookItems) {\r\n      var lookItem = lookItems[i];\r\n      var walkStatus: BFSSearchType = \"blocked\";\r\n      \r\n      if (lookItem.type == LOOK_TERRAIN) {\r\n        let terrain = lookItem[LOOK_TERRAIN];\r\n        if (terrain == \"plain\" || terrain == \"swamp\") {\r\n          walkStatus = \"walkable\";\r\n        }\r\n      }\r\n\r\n      const structures = position.lookFor(LOOK_STRUCTURES);\r\n      if (_.find(structures, s => s.structureType == STRUCTURE_RAMPART)) {\r\n        walkStatus = \"rampart\";\r\n      }\r\n      else if (_.find(structures, s => s.structureType == STRUCTURE_ROAD)) {\r\n        walkStatus = \"walkable\"\r\n      }\r\n\r\n      position.bfsType = walkStatus;\r\n      return position.bfsType != \"blocked\";\r\n    }\r\n    throw Error(\"should never get here\");\r\n  }\r\n\r\n\r\n  private friendlyName(roomPosition: RoomPosition) {\r\n    return `${roomPosition.x}:${roomPosition.y}`;\r\n  }\r\n\r\n\r\n  public findBaseEntrancesBFS(roomName: string): RoomPosition[] {\r\n\r\n    //constraining to 1 room for debugging\r\n    if (roomName != \"W4S43\") return [];\r\n\r\n    var room = Game.rooms[roomName];\r\n    if (room == undefined) throw Error(\"Can't BFS a non-visible room...\");\r\n\r\n    //var entrances: { [friendlyName: string]: RoomPosition } = {};\r\n    var entrances: RoomPosition[] = [];\r\n\r\n    var queue = new Queue<RoomPosition>();\r\n\r\n    var count: number = 0;\r\n    var exits = room.find(FIND_EXIT);\r\n    for (const i in exits) {\r\n      const start = exits[i];\r\n      this.visited[this.friendlyName(start)] = true\r\n      count++;\r\n      //room.visual.circle(start.x, start.y);\r\n      queue.push(start);\r\n    }\r\n\r\n    while (queue.length() > 0) {\r\n      const next = queue.pop();\r\n      if (next == undefined) throw Error(\"queue.length > 0, next undefined\");\r\n\r\n      var neighbors = this.getNeighbors(next, true);\r\n      for (var i in neighbors) {\r\n        let neighbor = neighbors[i];\r\n        if (this.visited[this.friendlyName(neighbor)]) continue;\r\n\r\n        if (neighbor.bfsType == STRUCTURE_RAMPART) {\r\n          if (!_.find(entrances, t => t.x == neighbor.x && t.y == neighbor.y)) {\r\n            entrances.push(neighbor);\r\n          }\r\n        }\r\n        else {\r\n          this.visited[this.friendlyName(neighbor)] = true;\r\n          count++;\r\n          //room.visual.circle(neighbor.x, neighbor.y);\r\n          queue.push(neighbor);\r\n        }\r\n      }\r\n    }\r\n    console.log(\"COUNT!!!!!!!!!! : \" + count)\r\n    return entrances;\r\n  }\r\n}\r\n\r\nclass Queue<T> {\r\n  _store: T[] = [];\r\n  length(): number { return this._store.length }\r\n  push(val: T) {\r\n    this._store.push(val);\r\n  }\r\n  pop(): T | undefined {\r\n    return this._store.shift();\r\n  }\r\n}\r\n\r\nexport function findIdleCreeps(homeRoomName: string, role: CreepRole =\"ROLE_ALL\"): Creep[] {\r\n\r\n  var creeps = Game.creeps;\r\n  var idle : Creep[] = []\r\n  for (var i in creeps) {\r\n    var creep = creeps[i] as Creep;\r\n    var mem = creep.memory as CreepMemory;\r\n    if (getHomeRoom(creep.name) != homeRoomName) continue;\r\n    if (!mem.idle) continue;\r\n    if (mem.role != role && role !=\"ROLE_ALL\") continue;\r\n    idle.push(creep);\r\n  }\r\n  return idle;\r\n\r\n  //return Game.rooms[homeRoomName].find(FIND_MY_CREEPS, {\r\n  //  filter: (creep: Creep) => {\r\n  //    let memory = (creep.memory as CreepMemory);\r\n  //    return memory.idle && (memory.role == role || role ==\"ROLE_ALL\");\r\n  //  }\r\n  //});\r\n}\r\nexport function ildeCreepCount(roomName: string, role: CreepRole =\"ROLE_ALL\") {\r\n  return findIdleCreeps(roomName, role).length;\r\n}\r\nexport function findClosestContainer(roomName: string, targetID: string, fullOK: boolean, emptyOK: boolean): StructureContainer | undefined {\r\n  let target = Game.getObjectById(targetID);\r\n  if (target == null) {\r\n    //console.log(\"container target was null.\")\r\n    return;\r\n  }\r\n  let roomContainers = findAllContainers(roomName)\r\n    .sort((a, b) => a.pos.getRangeTo(target as any) - b.pos.getRangeTo(target as any));\r\n\r\n  for (const id in roomContainers) {\r\n    let container = roomContainers[id] as StructureContainer;\r\n    if (container == null) continue;\r\n    if (!fullOK && container.store.energy == container.storeCapacity) continue; //has room\r\n    if (!emptyOK && container.store.energy == 0) continue; //can't be empty\r\n    return container;\r\n  }\r\n  return undefined;\r\n}\r\nexport function creepIDsByRole(roomName: string, role: CreepRole): string[] {\r\n  let room = Game.rooms[roomName];\r\n  let creeps = room.find(FIND_MY_CREEPS) as Creep[];\r\n  let found: string[] = [];\r\n  for (const key in creeps) {\r\n    if (creeps.hasOwnProperty(key)) {\r\n      const creep = creeps[key];\r\n      const mem = creep.memory as CreepMemory;\r\n      if (mem.role == role || role == undefined) found.push(creep.id);\r\n    }\r\n  }\r\n  return found;\r\n}\r\nexport function creepNamesByRole(roomName: string, role: CreepRole): string[] {\r\n  let room = Game.rooms[roomName];\r\n  let creeps = room.find(FIND_MY_CREEPS) as Creep[];\r\n  let found: string[] = [];\r\n  for (const key in creeps) {\r\n    if (creeps.hasOwnProperty(key)) {\r\n      const creep = creeps[key];\r\n      const mem = creep.memory as CreepMemory;\r\n      if (mem.role == role || role == undefined) found.push(creep.name);\r\n    }\r\n  }\r\n  return found;\r\n}\r\nexport function creepCount(roomName: string, role: CreepRole | undefined): number {\r\n  let room = Game.rooms[roomName];\r\n  if (room == undefined) return 0;\r\n  let creeps = room.find(FIND_MY_CREEPS) as Creep[];\r\n  if (role == undefined) return creeps.length;\r\n  else {\r\n    return creepIDsByRole(roomName, role).length\r\n  }\r\n}\r\nexport function creepCountAllRooms(role: CreepRole): number {\r\n  var count = 0;\r\n  let rooms = Game.rooms;\r\n  for (var id in rooms) {\r\n    var room = rooms[id];\r\n    let creeps = room.find(FIND_MY_CREEPS) as Creep[];\r\n    count += creepIDsByRole(room.name, role).length;\r\n  }\r\n  return count;\r\n}\r\nexport function roomSources(roomName: string): Source[] {\r\n  return Game.rooms[roomName].find(FIND_SOURCES) as Source[];\r\n}\r\nexport function sourceCount(roomName: string) {\r\n  return roomSources(roomName).length;\r\n}\r\nexport function findAllContainers(roomName: string): Array<StructureContainer> {\r\n  return Game.rooms[roomName].find(FIND_STRUCTURES).filter(i => {\r\n    return i.structureType == STRUCTURE_CONTAINER;\r\n  }) as StructureContainer[];\r\n\r\n}\r\nexport function findIdleSmartStructures(roomName: string): Array<SmartStructure> {\r\n\r\n  let roomMem = Game.rooms[roomName].memory as RoomMemory;\r\n  let structs = roomMem.towers;\r\n  //console.log(\"Tower memory count: \" + Object.keys(structs).length);\r\n  var t: SmartStructure[] = [];\r\n  for (var s in structs) {\r\n    var smart = structs[s] as SmartStructure;\r\n    var mem = smart.memory as StructureMemory;\r\n    t.push(smart);\r\n  }\r\n  //console.log(\"Smart Structure Count: \" + t.length);\r\n  return t;\r\n  //return structs.filter(struc => {\r\n  //  let mem = struc.memory as StructureMemory;\r\n  //  return mem.idle;\r\n  //})\r\n\r\n}\r\nexport function getRestockables(roomName: string): Array<AnyStructure> {\r\n  let room = Game.rooms[roomName];\r\n  return room.find(FIND_STRUCTURES, {\r\n    filter: (structure) => {\r\n      return (structure.structureType == STRUCTURE_EXTENSION\r\n        || structure.structureType == STRUCTURE_SPAWN)\r\n        && structure.energy < structure.energyCapacity;\r\n    }\r\n  });\r\n}\r\n\r\nexport function getRole(creepName: string): CreepRole {\r\n\r\n  if (creepName.search(\"ROLE_MINER\") != -1) return \"ROLE_MINER\";\r\n  if (creepName.search(\"ROLE_WORKER\") != -1) return \"ROLE_WORKER\";\r\n  if (creepName.search(\"ROLE_UPGRADER\") != -1) return \"ROLE_UPGRADER\";\r\n  if (creepName.search(\"ROLE_CARRIER\") != -1) return \"ROLE_CARRIER\";\r\n  if (creepName.search(\"ROLE_SCOUT\") != -1) return \"ROLE_SCOUT\";\r\n  if (creepName.search(\"ROLE_REMOTE_UPGRADER\") != -1) return \"ROLE_REMOTE_UPGRADER\";\r\n  if (creepName.search(\"ROLE_DEFENDER\") != -1) return \"ROLE_DEFENDER\";\r\n  if (creepName.search(\"ROLE_DISMANTLER\") != -1) return \"ROLE_DISMANTLER\";\r\n  if (creepName.search(\"unknown role\") != -1) return \"ROLE_DISMANTLER\";\r\n  return\"ROLE_UNASSIGNED\";\r\n}\r\nexport function getHomeRoom(creepName: string): string {\r\n\r\n  return creepName.split(\"-\")[0];\r\n}\r\n//export function getRoleString(job: CreepRole): string {\r\n//  switch (job) {\r\n//    case\"ROLE_MINER\": return \"ROLE_MINER\";\r\n//    case\"ROLE_CARRIER\": return \"ROLE_CARRIER\";\r\n//    case\"ROLE_UPGRADER\": return \"ROLE_UPGRADER\";\r\n//    case\"ROLE_WORKER\": return \"ROLE_WORKER\";\r\n//    case\"ROLE_SCOUT\": return \"ROLE_SCOUT\";\r\n//    case\"ROLE_REMOTE_UPGRADER\": return \"ROLE_REMOTE_UPGRADER\";\r\n//    case\"ROLE_UNASSIGNED\": return \"ROLE_UNASSIGNED\";\r\n//    case\"ROLE_DEFENDER\": return \"ROLE_DEFENDER\";\r\n//    case\"ROLE_ALL\": return \"ROLE_ALL\";\r\n//    default: {\r\n//      console.log(\"unknown role: \" + job)\r\n//      return \"unknown role\";\r\n//    }\r\n//  }\r\n//}\r\nexport enum CantBuildReasons {\r\n  NotTheOwner = -1,\r\n  NameAlreadyExists = -3,\r\n  BuildingBusy = -4,\r\n  NotEnoughEnergy = -6,\r\n  InvalidArguments = -10,\r\n  RCLNotHighEnough = -14\r\n\r\n}\r\n// export function hasEnergy(creepName: string) : boolean {\r\n// \tlet creep = Game.creeps[creepName];\r\n// \treturn creep.carry.energy > 0;\r\n// }\r\n// export function hasRoom(creepName: string) : boolean{\r\n// \tlet creep = Game.creeps[creepName];\r\n// \treturn creep.carry.energy < creep.carryCapacity;\r\n// }\r\nexport function errorToString(job: CantBuildReasons): string {\r\n  switch (job) {\r\n    case CantBuildReasons.NotTheOwner: return \"You don't own this building...?\";\r\n    case CantBuildReasons.NameAlreadyExists: return \"Name already exists...\";\r\n    case CantBuildReasons.BuildingBusy: return \"Name already exists...\";\r\n    case CantBuildReasons.NotEnoughEnergy: return \"You can't afford it!\";\r\n    case CantBuildReasons.InvalidArguments: return \"Invalid arguments passed to spawnCreep\";\r\n    case CantBuildReasons.RCLNotHighEnough: return \"Your RCL level is not high enough\";\r\n    default: return \"unknown error\";\r\n  }\r\n}\r\n\r\n\r\n\r\n// export function sendCreepsHome(roomName: string, creeps: Creep[]): void\r\n// {\r\n// \tlet spawn = findStructureSpawns(roomName)[0];\r\n\r\n// \tconsole.log(`There are ${creeps.length} idle creeps.`)\r\n// \tfor (const creep of creeps)\r\n// \t{\r\n// \t\tlet mem = creep.memory as CreepMemory;\r\n// \t\tif (mem.idle) creep.moveTo(spawn);\r\n// \t}\r\n// }\r\n","//import { StructureTaskRequest } from \"tasks/StructureTaskRequest\";\r\nimport { CreepTaskRequest } from \"tasks/CreepTaskRequest\";\r\nimport { StructureTaskRequest } from \"tasks/StructureTaskRequest\";\r\nimport * as utils from \"utils/utils\";\r\nexport const MemoryVersion = 0;\r\n//export function m(): GameMemory {\r\n//  return Memory as any as GameMemory;\r\n//}\r\n//export interface GameMemory {\r\n//  uuid: number;\r\n//  memVersion: number;\r\n//  gcl: any;\r\n//  map: any;\r\n//  initialized: boolean;\r\n//  creeps:\r\n//  {\r\n//    [name: string]: any;\r\n//  };\r\n\r\n//  flags:\r\n//  {\r\n//    [name: string]: any;\r\n//  };\r\n\r\n//  rooms:\r\n//  {\r\n//    [name: string]: RoomMemory;\r\n//  };\r\n\r\n//  spawns:\r\n//  {\r\n//    [name: string]: any;\r\n//  };\r\n//}\r\n\r\n//export enum CreepRole {\r\n//  ROLE_UNASSIGNED = 0,\r\n//  ROLE_ALL = 1,\r\n//  ROLE_MINER = 2,\r\n//  ROLE_WORKER = 3,\r\n//  ROLE_UPGRADER = 4,\r\n//  ROLE_SCOUT = 5,\r\n//  ROLE_CARRIER = 6,\r\n//  ROLE_REMOTE_UPGRADER = 7,\r\n//  ROLE_DEFENDER = 8\r\n//}\r\n//export enum TaskStatus {\r\n//  PENDING = 0,\r\n//  INIT = 1,\r\n//  PREPARE = 2,\r\n//  PRE_RUN = 3,\r\n//  IN_PROGRESS = 4,\r\n//  POST_RUN = 5,\r\n//  FINISHED = 6,\r\n//}\r\n//export enum LinkMode {\r\n//  SEND = 0, MASTER_RECEIVE = 1, SLAVE_RECEIVE = 2\r\n//}\r\n\r\n//interface RoomMemory {\r\n//  harvestLocations: { [index: string]: SmartSource };\r\n//  activeWorkerRequests: { [index: string]: CreepTaskRequest };\r\n//  test: StructureContainer[];\r\n//  pendingWorkerRequests: CreepTaskRequest[];\r\n//  pendingStructureRequests: StructureTaskRequest[];\r\n//  activeStructureRequests: { [index: string]: StructureTaskRequest };\r\n//  containers: {[index:string]:SmartContainer}\r\n//  links: {[index:string]:SmartLink}\r\n//  //activeResourcePileIDs: string[];\r\n//  towers: { [id: string]: SmartStructure };\r\n//  settingsMap: { [energyLevel: number]: RoomSettings };\r\n//  //avoid: any;\r\n//}\r\n\r\nexport function initRoomMemory(roomName: string): void {\r\n  let room = Game.rooms[roomName];\r\n  const rm: RoomMemory = Memory.rooms[room.name];\r\n  rm.harvestLocations = {};\r\n  rm.test = [];\r\n  rm.activeWorkerRequests = {};\r\n  rm.pendingWorkerRequests = [];\r\n  rm.activeResourcePileIDs = [];\r\n  rm.activeStructureRequests = {};\r\n  rm.pendingStructureRequests = []\r\n  rm.towers = {};\r\n  rm.containers = {};\r\n  rm.links = {};\r\n  rm.settingsMap = SetupRoomSettings(roomName);\r\n  rm.baseEntranceRamparts = [];\r\n  let start = Game.cpu.getUsed()\r\n  var s = new utils.Search2(roomName);\r\n  rm.baseEntranceRamparts = s.findEntrances(\"rampart\");\r\n  rm.baseEntranceWalls = s.findEntrances(\"constructedWall\");\r\n  console.log(\"CPU USAGE: \" + (Game.cpu.getUsed() - start))\r\n}\r\ninterface RoomSettingsMap {\r\n  [energyLevel: number]: RoomSettings;\r\n}\r\nexport function SetupRoomSettings(roomName: string) : RoomSettingsMap\r\n{\r\n  const settingsMap: RoomSettingsMap = {};\r\n  var level1Settings = new RoomSettings(roomName);\r\n  level1Settings.minersPerSource = 2;\r\n  level1Settings.maxWorkerCount = 4;\r\n  level1Settings.maxUpgraderCount = 3;\r\n  settingsMap[1] = level1Settings;\r\n\r\n  var level2Settings = new RoomSettings(roomName);\r\n  level2Settings.minersPerSource = 2\r\n  level2Settings.maxUpgraderCount = 4;\r\n  level2Settings.maxWorkerCount = 3;\r\n  settingsMap[2] = level2Settings;\r\n\r\n  var level3Settings = new RoomSettings(roomName);\r\n  level3Settings.minersPerSource = 1;\r\n  level3Settings.maxCarrierCount = 2;\r\n  level3Settings.maxUpgraderCount = 2;\r\n  settingsMap[3] = level3Settings;\r\n\r\n  var level4Settings = new RoomSettings(roomName);\r\n  level4Settings.minersPerSource = 1;\r\n  level4Settings.maxCarrierCount = 2;\r\n  level4Settings.maxUpgraderCount = 3;\r\n  settingsMap[4] = level4Settings;\r\n\r\n\r\n  var level5Settings = new RoomSettings(roomName);\r\n  level5Settings.minersPerSource = 1;\r\n  level5Settings.maxCarrierCount = 1;\r\n  level5Settings.maxUpgraderCount = 1;\r\n  settingsMap[5] = level5Settings;\r\n\r\n  return settingsMap;\r\n}\r\n\r\n\r\nexport function cleanupCreeps(): void {\r\n  for (const name in Memory.creeps) {\r\n    if (!Game.creeps[name]) {\r\n      console.log(\"Clearing dead creeps from memory.\")\r\n      for (const roomName in Game.rooms) {\r\n        //let room = Game.rooms[roomName] as Room;\r\n        //let roomMemory = room.memory as RoomMemory;\r\n        //room.memory.\r\n        let harvestLocations = Game.rooms[roomName].memory.harvestLocations;\r\n        for (const sourceID in harvestLocations) {\r\n          let harvestSpot = harvestLocations[sourceID];\r\n          if (_.includes(harvestSpot.assignedTo, name)) {\r\n            console.log(\"unassiging harvest spot for \" + name + \" source: \" + harvestSpot.sourceID)\r\n            harvestSpot.assignedTo = harvestSpot.assignedTo.filter(s=>s!=name);\r\n            //console.log(JSON.stringify(site.assignedTo))\r\n          }\r\n        }\r\n      }\r\n      delete Memory.creeps[name];\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nexport class SmartContainer {\r\n  containerID: string;\r\n  roomName: string;\r\n  shouldFill: boolean;\r\n  allowedWithdrawRoles: CreepRole[];\r\n  constructor(roomName: string, containerID: string, shouldFill: boolean, allowedWithdrawRoles: CreepRole[]) {\r\n    this.containerID = containerID;\r\n    this.roomName = roomName;\r\n    this.allowedWithdrawRoles = allowedWithdrawRoles;\r\n    this.shouldFill = shouldFill;\r\n  }\r\n}\r\nexport class SmartSource {\r\n  sourceID: string;\r\n  roomName: string;\r\n  assignedTo: string[] = [];\r\n  linkID: string = \"\";\r\n  constructor(sourceID: string, roomName: string) {\r\n    this.sourceID = sourceID;\r\n    this.roomName = roomName;\r\n  }\r\n}\r\n\r\nexport class SmartLink {\r\n  linkID: string;\r\n  roomName: string;\r\n  linkMode: LinkMode;\r\n  constructor(roomName: string, linkID: string, linkMode: LinkMode = \"SEND\") {\r\n    this.linkID = linkID;\r\n    this.roomName = roomName;\r\n    this.linkMode = linkMode;\r\n  }\r\n}\r\n\r\nexport class RoomSettings {\r\n  roomName: string;\r\n  minimumWorkerCount: number = 1;\r\n  //lowLevelMinersPerSource: number = 2;\r\n  //highLevelMinersPerSource: number = 1;\r\n  minersPerSource: number = 2;\r\n  minimumCarrierCount: number = 1;\r\n  maxCarrierCount: number = 3;\r\n  minimumMinerCount: number = 2;\r\n  maxWorkerCount: number = 1;\r\n  maxUpgraderCount: number = 3;\r\n  constructor(roomName: string) { this.roomName = roomName; }\r\n}\r\n\r\n","import { CreepTaskRequest } from \"tasks/CreepTaskRequest\";\r\nimport * as utils from \"utils/utils\"\r\n\r\nexport class CreepTaskQueue {\r\n  \r\n  \r\n\r\n  static addPendingRequest(request: CreepTaskRequest): any {\r\n\r\n    var totalCurrent = CreepTaskQueue.totalCount(request.roomName, request.name);\r\n    if (totalCurrent < request.maxConcurrent) {\r\n      let roomMem = Game.rooms[request.roomName].memory as RoomMemory;\r\n      roomMem.pendingWorkerRequests.push(request);\r\n    }\r\n\r\n  }\r\n  static startPendingRequest(creepName: string, roomName: string): void {\r\n    let roomMem = Game.rooms[roomName].memory as RoomMemory;\r\n    if (roomMem.pendingWorkerRequests.length == 0) return;\r\n\r\n    const creep = Game.creeps[creepName] as Creep;\r\n    const mem = creep.memory as CreepMemory;\r\n\r\n    const validTasks = roomMem.pendingWorkerRequests.filter(r => _.includes(r.requiredRole, mem.role));\r\n    if (validTasks.length == 0) return;\r\n    //console.log(\"valid: \" + mem.role + \" , \" + validTasks[0].requiredRole)\r\n      \r\n    const sortedValidTasks = _.sortByAll(validTasks, ['priority', t => creep.pos.getRangeTo(Game.getObjectById(validTasks[0].targetID) as AnyStructure | Creep | RoomObject)]);\r\n\r\n    //let debug: string = \"\"\r\n    //for (const key in sortedValidTasks) {\r\n    //  let task = sortedValidTasks[key];\r\n    //  if (task != undefined) debug += task.priority + \", \"\r\n    //}\r\n    //console.log(\"Debug: \" + debug);\r\n\r\n    for (const key in sortedValidTasks)\r\n    {\r\n      if (sortedValidTasks.hasOwnProperty(key))\r\n      {\r\n        const task = sortedValidTasks[key];\r\n        var nextTask = _.find(roomMem.pendingWorkerRequests, task)\r\n\r\n        if (nextTask != undefined)\r\n        {\r\n          nextTask.assignedTo = creepName;\r\n          mem.idle = false;\r\n          mem.currentTask = nextTask.name;\r\n          \r\n          roomMem.activeWorkerRequests[creepName] = nextTask;\r\n          _.remove(roomMem.pendingWorkerRequests, nextTask);\r\n\r\n          //console.log(JSON.stringify(nextTask))\r\n\r\n          nextTask.status = \"INIT\";\r\n          break;\r\n        }\r\n        else {\r\n          //console.log(\"ARGH!!!.\")\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n  \r\n  static allActive(roomName: string): { [index: string]: CreepTaskRequest } {\r\n    let roomMem = Game.rooms[roomName].memory as RoomMemory;\r\n    return roomMem.activeWorkerRequests as { [index: string]: CreepTaskRequest };\r\n  }\r\n  static getActiveRequest(roomName: string, creepName: string): CreepTaskRequest | undefined {\r\n    let roomMem = Game.rooms[roomName].memory as RoomMemory;\r\n    var request = roomMem.activeWorkerRequests[creepName];\r\n    return request;\r\n  }\r\n  //}\r\n  //static getPendingRequest(roomName: string, creepName: string): CreepTaskRequest | undefined {\r\n  //  let roomMem = Game.rooms[roomName].memory as RoomMemory;\r\n  //  var request = roomMem.activeWorkerRequests[creepName];\r\n  //  return request;\r\n  //}\r\n  static totalCount(roomName: string, taskName: string = \"\") {\r\n    return CreepTaskQueue.activeCount(roomName, taskName)\r\n      + CreepTaskQueue.pendingCount(roomName, taskName)\r\n  }\r\n  static pendingCount(roomName: string, taskName: string = \"\"): number {\r\n    let roomMem = Game.rooms[roomName].memory as RoomMemory;\r\n\r\n    if (taskName == \"\") {\r\n      return roomMem.pendingWorkerRequests.length;\r\n    }\r\n    else {\r\n\r\n      let count = 0;\r\n      const tasks = roomMem.pendingWorkerRequests;\r\n      for (const id in tasks) {\r\n        const task = tasks[id];\r\n        if (task.name == taskName) count++;\r\n      }\r\n      return count;\r\n    }\r\n  }\r\n  static activeCountAllRooms(taskName: string): number {\r\n\r\n    var count: number = 0;\r\n    for (var i in Game.rooms) {\r\n      var room = Game.rooms[i];\r\n      if (room == undefined) continue;\r\n      count += this.activeCount(room.name, taskName);\r\n    }\r\n    return count;\r\n  }\r\n  static pendingCountAllRooms(taskName: string): number {\r\n\r\n    var count: number = 0;\r\n    for (var i in Game.rooms) {\r\n      var room = Game.rooms[i];\r\n      if (room == undefined) continue;\r\n      count += this.pendingCount(room.name, taskName);\r\n    }\r\n    return count;\r\n  }\r\n  static activeCount(roomName: string, taskName: string = \"\"): number {\r\n\r\n    let roomMem = Game.rooms[roomName].memory as RoomMemory;\r\n    var count: number = 0;\r\n    for (var i in roomMem.activeWorkerRequests) {\r\n      var request = roomMem.activeWorkerRequests[i];\r\n      if (request.name == taskName || taskName == \"\")\r\n        count++;\r\n\r\n    }\r\n    return count;\r\n    //return Object.keys(roomMem.activeWorkerRequests).length;\r\n\r\n  }\r\n  static active(roomName: string, taskName: string = \"\", targetID: string = \"\"): CreepTaskRequest[] {\r\n\r\n    let room = Game.rooms[roomName];\r\n    if (room == undefined) return [];\r\n\r\n    let roomMem = room.memory as RoomMemory;\r\n    var requests: CreepTaskRequest[] = [];\r\n    for (var i in roomMem.activeWorkerRequests) {\r\n      var request = roomMem.activeWorkerRequests[i];\r\n      if (taskName != \"\" && request.name != taskName) continue;\r\n      if (targetID != \"\" && request.targetID != targetID) continue;\r\n      requests.push(request);\r\n    }\r\n    return requests;\r\n\r\n  }\r\n  static pending(roomName: string, taskName: string = \"\", targetID: string = \"\"): CreepTaskRequest[] {\r\n\r\n    let room = Game.rooms[roomName];\r\n    if (room == undefined) return [];\r\n\r\n    let roomMem = room.memory as RoomMemory;\r\n    var requests: CreepTaskRequest[] = [];\r\n    for (var i in roomMem.pendingWorkerRequests) {\r\n      var request = roomMem.pendingWorkerRequests[i];\r\n      if (taskName != \"\" && request.name != taskName) continue;\r\n      if (targetID != \"\" && request.targetID != targetID) continue;\r\n      requests.push(request);\r\n    }\r\n    return requests;\r\n    //return Object.keys(roomMem.activeWorkerRequests).length;\r\n\r\n  }\r\n}\r\n","import * as utils from \"utils/utils\"\r\nimport { RoomManager } from \"RoomManager\";\r\nimport { CreepTaskQueue } from \"tasks/CreepTaskQueue\";\r\nimport { CreepTaskRequest } from \"tasks/CreepTaskRequest\";\r\nimport { ScoutRequest } from \"Scout\";\r\nexport class CreepManager {\r\n  \r\n  \r\n\r\n  static GetCreepParts(role: CreepRole, roomEnergyLevel: number): BodyPartConstant[] {\r\n\r\n    switch (role) {\r\n      case \"ROLE_MINER\": return CreepManager.getMinerBodyParts(roomEnergyLevel);\r\n      case \"ROLE_UPGRADER\": return CreepManager.getUpgraderBodyParts(roomEnergyLevel);\r\n      case \"ROLE_WORKER\": return CreepManager.getWorkerBodyParts(roomEnergyLevel);\r\n      case\"ROLE_SCOUT\": return CreepManager.getScoutBodyParts(roomEnergyLevel);\r\n      case\"ROLE_CARRIER\": return CreepManager.getCarrierBodyParts(roomEnergyLevel);\r\n      case\"ROLE_DEFENDER\": return CreepManager.getDefenderBodyParts(roomEnergyLevel);\r\n      case\"ROLE_REMOTE_UPGRADER\": return CreepManager.getRemoteUpgraderBodyParts(roomEnergyLevel);\r\n      case\"ROLE_DISMANTLER\": return CreepManager.getDismantlerBodyParts(roomEnergyLevel);\r\n      default: throw new Error(`${role} is not a valid creep role.`);\r\n    }\r\n  }\r\n\r\n  static spawnMissingCreeps(roomName: string, energyLevel: number) {\r\n    //console.log(\"spawning missing creeps.\")\r\n    CreepManager.spawnMissingMiners(roomName, energyLevel);\r\n    CreepManager.spawnMissingWorkers(roomName, energyLevel);\r\n    CreepManager.spawnMissingUpgraders(roomName, energyLevel);\r\n    CreepManager.spawnMissingCarriers(roomName, energyLevel);\r\n    CreepManager.spawnMissingScouts(roomName, energyLevel);\r\n    CreepManager.spawnMissingRemoteUpgraders(roomName, energyLevel);\r\n    CreepManager.spawnMissingDismantlers(roomName, energyLevel);\r\n    //CreepManager.spawnMissingDefenders(roomName, energyLevel);\r\n    //console.log(\"spawned missing creeps.\")\r\n  }\r\n\r\n\r\n  static trySpawnCreep(spawn: StructureSpawn, role: CreepRole, energyLevel: number) {\r\n\r\n    console.log(\"trying to spawn a \" + role + \" for \" + spawn.room.name)\r\n    var bodyParts = CreepManager.GetCreepParts(role, energyLevel);\r\n    return this.spawnCreep(spawn, bodyParts, role) == OK\r\n\r\n  }\r\n  private static getUpgraderBodyParts(energyLevel: number): BodyPartConstant[] {\r\n\r\n    switch (energyLevel) {\r\n      case 1: return [WORK, MOVE, MOVE, CARRY];\r\n      case 2: return [WORK, WORK, WORK, MOVE, MOVE, MOVE, CARRY, CARRY]\r\n      case 3: return [WORK, WORK, WORK, WORK, WORK, MOVE, MOVE, MOVE, MOVE, CARRY, CARRY, CARRY]\r\n      case 4: return [WORK, WORK, WORK, WORK, WORK, WORK, WORK, WORK, MOVE, MOVE, MOVE, MOVE, MOVE, MOVE, MOVE, CARRY, CARRY, CARRY, CARRY, CARRY, CARRY]\r\n      case 5: return [WORK, WORK, WORK, WORK, WORK, WORK, WORK, WORK, MOVE, MOVE, MOVE, MOVE, MOVE, MOVE, MOVE, CARRY, CARRY, CARRY, CARRY, CARRY, CARRY]\r\n      default: return [WORK, MOVE, MOVE, CARRY];\r\n    }\r\n  }\r\n  static getDismantlerBodyParts(energyLevel: number): BodyPartConstant[] {\r\n    switch (energyLevel) {\r\n      case 1: return [WORK, MOVE, MOVE, CARRY];\r\n      case 2: return [WORK, WORK, WORK, MOVE, MOVE, MOVE, CARRY, CARRY]\r\n      case 3: return [WORK, WORK, WORK, WORK, MOVE, MOVE, MOVE, MOVE, CARRY, CARRY, CARRY, CARRY]\r\n      case 4: return [WORK, WORK, WORK, WORK, MOVE, MOVE, MOVE, MOVE, CARRY, CARRY, CARRY, CARRY]\r\n      case 5: return [MOVE, MOVE, MOVE, MOVE, MOVE, MOVE, MOVE, MOVE, MOVE, MOVE, MOVE, MOVE, MOVE, MOVE, MOVE, MOVE, WORK, WORK, WORK, WORK, WORK, WORK, WORK, WORK, WORK, WORK, WORK, WORK, WORK, WORK, WORK, WORK, WORK, WORK, WORK, WORK, WORK, WORK, WORK, WORK, WORK, WORK, WORK, WORK, WORK, WORK, WORK, WORK]\r\n      default: return [WORK, MOVE, MOVE, CARRY];\r\n    }\r\n  }\r\n  private static getDefenderBodyParts(energyLevel: number): BodyPartConstant[] {\r\n\r\n    switch (energyLevel) {\r\n      case 1: return [WORK, MOVE, MOVE, CARRY];\r\n      case 2: return [ATTACK, ATTACK, MOVE, MOVE]\r\n      case 3: return [WORK, WORK, WORK, WORK, WORK, MOVE, MOVE, MOVE, MOVE, CARRY, CARRY, CARRY]\r\n      case 4: return [WORK, WORK, WORK, WORK, WORK, MOVE, MOVE, MOVE, MOVE, CARRY, CARRY, CARRY]\r\n      default: return [WORK, MOVE, MOVE, CARRY];\r\n    }\r\n  }\r\n  private static getRemoteUpgraderBodyParts(energyLevel: number): BodyPartConstant[] {\r\n\r\n    switch (energyLevel) {\r\n      case 1: return [WORK, MOVE, MOVE, CARRY];\r\n      case 2: return [WORK, WORK, WORK, MOVE, MOVE, MOVE, CARRY, CARRY]\r\n      case 3: return [WORK, WORK, WORK, WORK, MOVE, MOVE, MOVE, MOVE, MOVE, MOVE, MOVE, MOVE, CARRY, CARRY, CARRY, CARRY]\r\n      case 4: return [WORK, WORK, WORK, WORK, MOVE, MOVE, MOVE, MOVE, MOVE, MOVE, MOVE, MOVE, MOVE, MOVE, CARRY, CARRY, CARRY, CARRY, CARRY, CARRY]\r\n      default: return [WORK, MOVE, MOVE, CARRY];\r\n    }\r\n  }\r\n  private static getWorkerBodyParts(energyLevel: number): BodyPartConstant[] {\r\n\r\n    switch (energyLevel) {\r\n      case 1: return [WORK, MOVE, MOVE, CARRY];\r\n      case 2: return [WORK, WORK, WORK, MOVE, MOVE, MOVE, CARRY, CARRY]\r\n      case 3: return [WORK, WORK, WORK, WORK, MOVE, MOVE, MOVE, MOVE, CARRY, CARRY, CARRY, CARRY]\r\n      case 4: return [WORK, WORK, WORK, WORK, MOVE, MOVE, MOVE, MOVE, CARRY, CARRY, CARRY, CARRY]\r\n      case 5: return [WORK, WORK, WORK, WORK, MOVE, MOVE, MOVE, MOVE, CARRY, CARRY, CARRY, CARRY]\r\n      default: return [WORK, MOVE, MOVE, CARRY];\r\n    }\r\n  }\r\n  private static getCarrierBodyParts(energyLevel: number): BodyPartConstant[] {\r\n\r\n    //console.log(\"getting carrier body parts\")\r\n    switch (energyLevel) {\r\n      case 1: return [MOVE, MOVE, CARRY, CARRY];\r\n      case 2: return [MOVE, MOVE, MOVE, MOVE, MOVE, CARRY, CARRY, CARRY, CARRY, CARRY]\r\n      case 3: return [MOVE, MOVE, MOVE, MOVE, MOVE, MOVE, MOVE, MOVE, CARRY, CARRY, CARRY, CARRY, CARRY, CARRY, CARRY, CARRY]\r\n      case 4: return [MOVE, MOVE, MOVE, MOVE, MOVE, MOVE, MOVE, MOVE, CARRY, CARRY, CARRY, CARRY, CARRY, CARRY, CARRY, CARRY]\r\n      case 5: return [MOVE, MOVE, MOVE, MOVE, MOVE, MOVE, MOVE, MOVE, MOVE, MOVE, CARRY, CARRY, CARRY, CARRY, CARRY, CARRY, CARRY, CARRY, CARRY, CARRY, CARRY, CARRY, CARRY, CARRY, CARRY, CARRY, CARRY, CARRY, CARRY, CARRY]\r\n      default: return [WORK, MOVE, MOVE, CARRY];\r\n    }\r\n  }\r\n  private static getMinerBodyParts(energyLevel: number): BodyPartConstant[] {\r\n\r\n    switch (energyLevel) {\r\n      case 1: return [WORK, WORK, MOVE, MOVE];\r\n      case 2: return [WORK, WORK, WORK, MOVE, MOVE, MOVE, MOVE]\r\n      case 3: return [WORK, WORK, WORK, WORK, WORK, WORK, MOVE, MOVE, MOVE, MOVE, MOVE, MOVE, MOVE, CARRY]\r\n      case 4: return [WORK, WORK, WORK, WORK, WORK, WORK, MOVE, MOVE, MOVE, MOVE, MOVE, MOVE, MOVE, CARRY]\r\n      case 5: return [WORK, WORK, WORK, WORK, WORK, WORK, MOVE, MOVE, MOVE, MOVE, MOVE, MOVE, MOVE, CARRY]\r\n      default: return [WORK, WORK, MOVE, MOVE];\r\n    }\r\n  }\r\n  private static getScoutBodyParts(energyLevel: number): BodyPartConstant[] {\r\n\r\n    switch (energyLevel) {\r\n      case 1: return [MOVE, MOVE, MOVE];\r\n      case 2: return [MOVE, MOVE, MOVE ]\r\n      case 3: return [CLAIM, MOVE,]\r\n      case 4: return [CLAIM, MOVE,]\r\n      case 5: return [MOVE, CLAIM, MOVE, CLAIM ]\r\n      default: return [MOVE, MOVE];\r\n    }\r\n  }\r\n  static spawnMissingRemoteUpgraders(roomName: string, energyLevel: number) {\r\n    const miners = utils.creepCount(roomName,\"ROLE_MINER\");\r\n    const workers = utils.creepCount(roomName,\"ROLE_WORKER\");\r\n    const carriers = utils.creepCount(roomName,\"ROLE_CARRIER\");\r\n    const upgraders = utils.creepCount(roomName,\"ROLE_UPGRADER\");\r\n    const roomMem = Game.rooms[roomName].memory as RoomMemory;\r\n    const settings = roomMem.settingsMap[energyLevel];\r\n    const currentRUCount = utils.creepCountAllRooms(\"ROLE_REMOTE_UPGRADER\");\r\n    //console.log(\"current Remote Upgrader Count: \" + currentRUCount)\r\n    if (miners < settings.minersPerSource * 2\r\n      || workers < settings.maxWorkerCount\r\n      || carriers < settings.maxCarrierCount) return;\r\n\r\n    var flags = _.filter(Game.flags, f => f.color == COLOR_BLUE && f.secondaryColor == COLOR_BLUE);\r\n    if (flags.length == 0) return;\r\n    const spawns = utils.findSpawns(roomName);\r\n    let remoteUpgradersNeeded: number = 3 - currentRUCount;\r\n    let spawned: number = 0;\r\n    for (var i in spawns) {\r\n\r\n      if (spawned < remoteUpgradersNeeded) {\r\n        var spawn = spawns[i] as StructureSpawn;\r\n        if (spawn.spawning) continue;\r\n\r\n        CreepManager.trySpawnCreep(spawn,\"ROLE_REMOTE_UPGRADER\", energyLevel);\r\n        if (spawn.spawning) spawned++;\r\n      }\r\n      else break;\r\n    }\r\n  }\r\n  static spawnMissingDefenders(roomName: string, energyLevel: number) {\r\n    //const miners = utils.creepCount(roomName,\"ROLE_MINER\");\r\n    //const workers = utils.creepCount(roomName,\"ROLE_WORKER\");\r\n    //const carriers = utils.creepCount(roomName,\"ROLE_CARRIER\");\r\n    //const upgraders = utils.creepCount(roomName,\"ROLE_UPGRADER\");\r\n    //const roomMem = Game.rooms[roomName].memory as RoomMemory;\r\n    //const settings = roomMem.settingsMap[energyLevel];\r\n    const currentDefenderCount = utils.creepCountAllRooms(\"ROLE_DEFENDER\");\r\n    ////console.log(\"current Remote Upgrader Count: \" + currentRUCount)\r\n    //if (miners < settings.minersPerSource * 2\r\n    //  || workers < settings.maxWorkerCount\r\n    //  || carriers < settings.maxCarrierCount) return;\r\n    const spawns = utils.findSpawns(roomName);\r\n    let defendersNeeded: number = 3 - currentDefenderCount;\r\n    let spawned: number = 0;\r\n    for (var i in spawns) {\r\n\r\n      if (spawned < defendersNeeded) {\r\n        var spawn = spawns[i] as StructureSpawn;\r\n        if (spawn.spawning) continue;\r\n\r\n        CreepManager.trySpawnCreep(spawn,\"ROLE_DEFENDER\", energyLevel);\r\n        if (spawn.spawning) spawned++;\r\n      }\r\n      else break;\r\n    }\r\n   \r\n  }\r\n  static spawnMissingScouts(roomName: string, energyLevel: number): void {\r\n    const miners = utils.creepCount(roomName,\"ROLE_MINER\");\r\n    const workers = utils.creepCount(roomName,\"ROLE_WORKER\");\r\n    const upgraders = utils.creepCount(roomName,\"ROLE_UPGRADER\");\r\n    const carriers = utils.creepCount(roomName,\"ROLE_CARRIER\");\r\n    const roomMem = Game.rooms[roomName].memory as RoomMemory;\r\n    const settings = roomMem.settingsMap[energyLevel];\r\n    //const currentScoutCount = utils.creepCountAllRooms(\"ROLE_SCOUT\");\r\n    if (miners < settings.minimumMinerCount\r\n      || carriers < settings.maxCarrierCount\r\n      || upgraders < settings.maxUpgraderCount) {\r\n      return;\r\n    }\r\n    \r\n    var flags = Game.flags;\r\n    //console.log(\"Processing flags: \" + Object.keys(flags).length)\r\n    for (var id in flags) {\r\n      var flag = flags[id] as Flag;\r\n      if (flag.name != roomName) continue;\r\n\r\n      var currentActive = CreepTaskQueue.active(roomName, \"Scout\", flag.name);\r\n      //console.log(`Active Scout Tasks for ${roomName} to ${flag.pos.roomName}: ${currentActive.length}`);\r\n\r\n      var currentPending = CreepTaskQueue.pending(roomName, \"Scout\", flag.name);\r\n      //console.log(`Pending Scout Tasks for ${roomName} to ${flag.pos.roomName}: ${currentPending.length}`);\r\n\r\n      var room = Game.rooms[flag.pos.roomName];\r\n      if (room != undefined\r\n        && room.controller != undefined\r\n        && room.controller.reservation != undefined\r\n        && room.controller.reservation.username == \"KeyserSoze\"\r\n        && room.controller.reservation.ticksToEnd > 2000) {\r\n        //console.log(\"not spawning scout for \" + roomName)\r\n        continue;\r\n      }\r\n      const spawns = utils.findSpawns(roomName, false);\r\n      const currentScoutCountInSourceRoom = utils.creepCount(roomName,\"ROLE_SCOUT\");\r\n      const currentScoutCountInTargetRoom = utils.creepCount(flag.pos.roomName,\"ROLE_SCOUT\");\r\n      //console.log(`found ${currentScoutCountInSourceRoom} scouts in source, and ${currentScoutCountInTargetRoom} in target room`)\r\n      var currentlySpawning = _.filter(spawns, s => {\r\n        var spawn = s as StructureSpawn;\r\n        return spawn.spawning != null && utils.getRole(spawn.spawning.name) ==\"ROLE_SCOUT\";\r\n      }).length;\r\n      var totalTasks = currentActive.length + currentPending.length;\r\n      var totalScouts = currentScoutCountInSourceRoom + currentScoutCountInTargetRoom;\r\n\r\n      var scoutsNeeded = totalTasks - (totalScouts + currentlySpawning);\r\n      if (scoutsNeeded < 1) return;\r\n\r\n      console.log(`Need to spawn ${scoutsNeeded} scouts for ${roomName} to ${flag.pos.roomName}`)\r\n      var currentlySpawning = _.filter(spawns, s => {\r\n        var spawn = s as StructureSpawn;\r\n        return spawn.spawning != null && utils.getRole(spawn.spawning.name) ==\"ROLE_SCOUT\";\r\n      }).length;\r\n\r\n      var availableSpawns = utils.findSpawns(roomName, true);\r\n\r\n      //var taskName = new ScoutRequest(\"test\", \"temp\", false).name;\r\n      let scoutsSpawned: number = 0;\r\n      for (var i in availableSpawns) {\r\n        var spawn = availableSpawns[i] as StructureSpawn;\r\n        if (scoutsSpawned < scoutsNeeded) {\r\n          if (CreepManager.trySpawnCreep(spawn,\"ROLE_SCOUT\", energyLevel)) scoutsSpawned++;\r\n        }\r\n        else break;\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n  private static spawnMissingDismantlers(roomName: string, energyLevel: number) {\r\n    const miners = utils.creepCount(roomName, \"ROLE_MINER\");\r\n    const carriers = utils.creepCount(roomName, \"ROLE_CARRIER\");\r\n    const upgraders = utils.creepCount(roomName, \"ROLE_UPGRADER\");\r\n    const room = Game.rooms[roomName]\r\n    const roomMem = room.memory as RoomMemory;\r\n    const settings = roomMem.settingsMap[energyLevel];\r\n    const currentCount = utils.creepCount(roomName, \"ROLE_WORKER\");\r\n    if (miners < settings.minimumMinerCount - 1 && currentCount > 0) {\r\n      //console.log(\"skipping workers for now.\")\r\n      return;\r\n    }\r\n    if (carriers < settings.minimumCarrierCount || upgraders < settings.maxUpgraderCount) return;\r\n\r\n    var flags = _.filter(Game.flags, f => f.pos.roomName == roomName && f.color == COLOR_YELLOW && f.secondaryColor == COLOR_YELLOW);\r\n    if (flags.length == 0) return;\r\n    CreepManager.spawnCreeps(roomName, \"ROLE_DISMANTLER\", 1, energyLevel);\r\n\r\n  }\r\n\r\n  private static spawnMissingWorkers(roomName: string, energyLevel: number) {\r\n    const miners = utils.creepCount(roomName,\"ROLE_MINER\");\r\n    const carriers = utils.creepCount(roomName,\"ROLE_CARRIER\");\r\n    const upgraders = utils.creepCount(roomName,\"ROLE_UPGRADER\");\r\n    const room = Game.rooms[roomName]\r\n    const roomMem = room.memory as RoomMemory;\r\n    const settings = roomMem.settingsMap[energyLevel];\r\n    const currentCount = utils.creepCount(roomName,\"ROLE_WORKER\");\r\n    if (miners < settings.minimumMinerCount - 1 && currentCount > 0) {\r\n      //console.log(\"skipping workers for now.\")\r\n      return;\r\n    }\r\n    if (carriers < settings.minimumCarrierCount || upgraders < settings.maxUpgraderCount) return;\r\n\r\n    if (room.find(FIND_CONSTRUCTION_SITES).length == 0) return;\r\n    CreepManager.spawnCreeps(roomName,\"ROLE_WORKER\", settings.maxWorkerCount, energyLevel);\r\n    \r\n  }\r\n\r\n  private static spawnMissingCarriers(roomName: string, energyLevel: number) {\r\n    const miners = utils.creepCount(roomName,\"ROLE_MINER\");\r\n    const workers = utils.creepCount(roomName,\"ROLE_WORKER\");\r\n\r\n    const room = Game.rooms[roomName];\r\n    const roomMem = room.memory as RoomMemory;\r\n    const settings = roomMem.settingsMap[energyLevel];\r\n    const currentCarrierCount = utils.creepCount(roomName,\"ROLE_CARRIER\");\r\n    if (miners < settings.minimumMinerCount - 1 && workers < settings.minimumWorkerCount && currentCarrierCount > 0) {\r\n      //console.log(\"skipping carriers for now.\")\r\n      return;\r\n    }\r\n    CreepManager.spawnCreeps(roomName,\"ROLE_CARRIER\", settings.maxCarrierCount, energyLevel);\r\n  }\r\n  private static spawnMissingUpgraders(roomName: string, energyLevel: number) {\r\n    const roomMem = Game.rooms[roomName].memory as RoomMemory;\r\n    const settings = roomMem.settingsMap[energyLevel];\r\n    const workers = utils.creepCount(roomName,\"ROLE_WORKER\");\r\n    const carriers = utils.creepCount(roomName,\"ROLE_CARRIER\");\r\n    //if (workers < settings.minimumWorkerCount + 1) return;\r\n    const miners = utils.creepCount(roomName,\"ROLE_MINER\");\r\n    if (miners < settings.minimumMinerCount) return;\r\n    if (carriers < settings.minimumCarrierCount) return;\r\n    //if (workers < settings.minimumWorkerCount) return;\r\n    //console.log(\"upgrader\")\r\n    CreepManager.spawnCreeps(roomName,\"ROLE_UPGRADER\", settings.maxUpgraderCount, energyLevel);\r\n  }\r\n  private static spawnMissingMiners(roomName: string, energyLevel: number) {\r\n    //console.log(\"spawning miners\")\r\n    const roomMem = Game.rooms[roomName].memory as RoomMemory;\r\n    const settings = roomMem.settingsMap[energyLevel];\r\n    const spawns = utils.findSpawns(roomName);\r\n    const currentMinerCount = utils.creepCount(roomName,\"ROLE_MINER\");\r\n\r\n    const room = Game.rooms[roomName]\r\n    const sources = room.find(FIND_SOURCES);\r\n\r\n\r\n    const minerCount = sources.length * settings.minersPerSource;\r\n    CreepManager.spawnCreeps(roomName,\"ROLE_MINER\", minerCount, energyLevel);\r\n   \r\n  }\r\n\r\n  private static spawnCreeps(roomName: string, role: CreepRole, max: number, energyLevel: number) {\r\n    const spawns = utils.findSpawns(roomName, false);\r\n    const currentCount = utils.creepCount(roomName, role);\r\n    var currentlySpawning = _.filter(spawns, s => {\r\n      var spawn = s as StructureSpawn;\r\n      return spawn.spawning != null && utils.getRole(spawn.spawning.name) == role;\r\n    }).length;\r\n\r\n    var availableSpawns = utils.findSpawns(roomName, true);\r\n\r\n    let totalNeeded: number = max - (currentCount + currentlySpawning);\r\n    if (totalNeeded < 1) return;\r\n\r\n    let creepsSpawned: number = 0;\r\n\r\n    for (var i in availableSpawns) {\r\n      var spawn = availableSpawns[i] as StructureSpawn;\r\n      if (creepsSpawned < totalNeeded) {\r\n        if (CreepManager.trySpawnCreep(spawn, role, energyLevel)) creepsSpawned++;\r\n      }\r\n      else break;\r\n    }\r\n  }\r\n\r\n  private static spawnCreep(spawn: StructureSpawn, bodyParts: BodyPartConstant[], role: CreepRole): number {\r\n    //console.log(\"trying to spawn \" + getRoleString(role))\r\n    let uuid: number = Memory.uuid;\r\n    let creepName: string = spawn.room.name + \"-\" + role + \"-\" + (uuid + 1);\r\n    let status: number | string = spawn.spawnCreep(bodyParts, creepName, { dryRun: true });\r\n    status = _.isString(status) ? OK : status;\r\n\r\n    while (status == -3) {\r\n      uuid++;\r\n      creepName = spawn.room.name + \"-\" + role + \"-\" + (uuid + 1);\r\n      status = spawn.spawnCreep(bodyParts, creepName, { dryRun: true });\r\n      status = _.isString(status) ? OK : status;\r\n    }\r\n\r\n    if (status === OK && spawn.spawning == null) {\r\n      Memory.uuid = uuid + 1;\r\n      const creepName: string = spawn.room.name + \"-\" + role + \"-\" + uuid;\r\n\r\n      const memory: CreepMemory =\r\n      {\r\n        spawnID: spawn.id,\r\n        idle: true,\r\n        currentTask: \"\",\r\n        alive: true,\r\n        role: role,\r\n        _trav: 0,\r\n        _travel: 0\r\n        \r\n      };\r\n\r\n      //console.log(\"Started creating new creep: \" + creepName);\r\n\r\n      status = spawn.spawnCreep(bodyParts, creepName, { memory: memory });\r\n\r\n      return _.isString(status) ? OK : status;\r\n    }\r\n    else {\r\n      //console.log(\"Coudldn't spawn: \" + Utils.errorToString(status))\r\n      // if (Config.ENABLE_DEBUG_MODE && status !== ERR_NOT_ENOUGH_ENERGY)\r\n      // {\r\n      // \tlog.info(\"Failed creating new creep: \" + status);\r\n      // }\r\n\r\n      return status;\r\n    }\r\n  }\r\n}\r\n","import { StructureTaskRequest } from \"tasks/StructureTaskRequest\";\r\n\r\nexport class StructureTaskQueue {\r\n  static totalCount(roomName: string, taskName: string = \"\") {\r\n    return StructureTaskQueue.activeCount(roomName, taskName)\r\n      + StructureTaskQueue.pendingCount(roomName, taskName);\r\n  }\r\n  static pendingCount(roomName: string, taskName: string = \"\"): number {\r\n    let roomMem = Game.rooms[roomName].memory as RoomMemory;\r\n    if (taskName == \"\") {\r\n      return roomMem.pendingStructureRequests.length;\r\n    }\r\n    else {\r\n      let count = 0;\r\n      let tasks = roomMem.pendingStructureRequests;\r\n      for (const id in tasks) {\r\n        let task = tasks[id];\r\n        if (task.name == taskName)\r\n          count++;\r\n      }\r\n      return count;\r\n    }\r\n  }\r\n  static activeCount(roomName: string, taskName: string = \"\"): number {\r\n\r\n\r\n    let roomMem = Game.rooms[roomName].memory as RoomMemory;\r\n    var count: number = 0;\r\n    for (var i in roomMem.activeStructureRequests) {\r\n      var request = roomMem.activeStructureRequests[i];\r\n      if (request.name == taskName || taskName == \"\")\r\n        count++;\r\n\r\n    }\r\n    return count;\r\n\r\n    //let roomMem = Game.rooms[roomName].memory as RoomMemory;\r\n    //if (taskName == \"\") {\r\n    //  return roomMem.activeStructureRequestCount;\r\n    //}\r\n    //else {\r\n    //  let count = 0;\r\n    //  let tasks = roomMem.activeStructureRequests;\r\n    //  for (let task in tasks) {\r\n    //    let test = tasks[task];\r\n    //    if (test.name == taskName)\r\n    //      count++;\r\n    //  }\r\n    //  return count;\r\n    //}\r\n  }\r\n  static addPendingRequest(request: StructureTaskRequest): void {\r\n    //console.log(\"addpending\")\r\n    let roomMem = Game.rooms[request.roomName].memory as RoomMemory;\r\n    var totalCurrent = StructureTaskQueue.totalCount(request.roomName, request.name);\r\n    //console.log(\"total current pending tasks: \"+ request.name + \" \"+ totalCurrent)\r\n    //console.log(\"when adding: \"+ request.targetID)\r\n    if (totalCurrent < request.maxConcurrent) {\r\n      let roomMem = Game.rooms[request.roomName].memory as RoomMemory;\r\n      roomMem.pendingStructureRequests.push(request);\r\n    }\r\n\r\n  }\r\n  static startTask(buildingID: string, roomName: string): void {\r\n    let roomMem = Game.rooms[roomName].memory as RoomMemory;\r\n    if (roomMem.pendingStructureRequests.length == 0) {\r\n      //console.log(\"no pending requests.\")\r\n      return;\r\n    }\r\n    const sortedTasks = _.sortBy(roomMem.pendingStructureRequests, s => s.priority);\r\n    //console.log(\"sorted priority: \" + JSON.stringify(sortedTasks.map(t => t.priority)))\r\n    for (const key in sortedTasks) {\r\n      if (sortedTasks.hasOwnProperty(key)) {\r\n        const task = sortedTasks[key];\r\n        var nextTask = _.find(roomMem.pendingStructureRequests, task)\r\n\r\n        if (nextTask != undefined) {\r\n          nextTask.assignedTo = buildingID;\r\n          //mem.idle = false;\r\n          //mem.currentTask = nextTask.name;\r\n\r\n          roomMem.activeStructureRequests[buildingID] = nextTask;\r\n          _.remove(roomMem.pendingStructureRequests, nextTask);\r\n\r\n          //console.log(JSON.stringify(nextTask))\r\n\r\n          nextTask.status = \"INIT\";\r\n          break;\r\n        }\r\n        else {\r\n          //console.log(\"ARGH!!!.\")\r\n        }\r\n      }\r\n    }\r\n    //let nextTask = roomMem.pendingStructureRequests.shift();\r\n    //if (nextTask != undefined) {\r\n    //  console.log(JSON.stringify(nextTask))\r\n    //  nextTask.assignedTo = buildingID;\r\n    //  roomMem.activeStructureRequests[buildingID] = nextTask;\r\n    //  nextTask.status = \"INIT\";\r\n    //}\r\n  }\r\n  //static finish(creepName: string, roomName: string) {\r\n  //  let roomMem = Game.rooms[roomName].memory as RoomMemory;\r\n  //  delete roomMem.activeStructureRequests[creepName];\r\n  //  roomMem.activeStructureRequestCount--;\r\n  //}\r\n  static allActive(roomName: string): { [index: string]: StructureTaskRequest; } {\r\n    let roomMem = Game.rooms[roomName].memory as RoomMemory;\r\n    return roomMem.activeStructureRequests as { [index: string]: StructureTaskRequest; };\r\n  }\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export abstract class CreepTaskRequest implements ITaskRequest\r\n{\r\n\tstatus: TaskStatus;\r\n\twingDing: string;\r\n\tisCreepTask: boolean = true;\r\n\ttargetID: string;\r\n\tabstract name: string;\r\n\troomName: string;\r\n\tassignedTo: string = \"\";\r\n\tabstract priority: number;\r\n\tabstract requiredRole: CreepRole[];\r\n\tabstract maxConcurrent: number;\r\n\tconstructor(roomName: string, wingDing: string, targetID: string = \"\")\r\n\t{\r\n\t\tthis.targetID = targetID;\r\n\t\tthis.roomName = roomName;\r\n\t\tthis.wingDing = wingDing;\r\n\t\tthis.status = \"PENDING\"\r\n\t}\r\n}\r\n","export abstract class Task implements ITask {\r\n\r\n  request: ITaskRequest;\r\n  constructor(taskInfo: ITaskRequest) {\r\n    this.request = taskInfo;\r\n  }\r\n  //protected abstract prerun(): void;\r\n  protected abstract init(): void;\r\n  protected abstract prepare(): void;\r\n  protected abstract continue(): void;\r\n  //protected abstract postrun(): void;\r\n  protected abstract finish(): void;\r\n  public run(): void {\r\n    //console.log(`RUN: ${this.request.name} + ${this.request.assignedTo} + ${Task.getStatus(this.request.status)} `)\r\n\r\n    //if (Game.creeps[this.request.assignedTo] == undefined) console.log(\"creep was null during run - should handle.\")\r\n\r\n    var oldStatus = this.request.status;\r\n    switch (this.request.status) {\r\n      // case TaskState.PENDING: this.pending();\r\n      case \"INIT\": this.init(); break;\r\n      case \"PREPARE\": this.prepare(); break;\r\n      //case \"PRE_RUN\": this.p(); break;\r\n      case \"IN_PROGRESS\": this.continue(); break;\r\n      case \"FINISHED\": this.finish(); break;\r\n      // case TaskState.POST_RUN: this.preRun();\r\n    }\r\n    if (this.request != null && oldStatus != this.request.status) this.run()\r\n  }\r\n  static getStatus(state: TaskStatus) {\r\n    if (state == \"PENDING\") return \"PENDING\";\r\n    if (state == \"INIT\") return \"INIT\";\r\n    if (state == \"PREPARE\") return \"PREPARE\";\r\n    if (state == \"PRE_RUN\") return \"PRE_RUN\";\r\n    if (state == \"IN_PROGRESS\") return \"IN_PROGRESS\";\r\n    if (state == \"POST_RUN\") return \"POST_RUN\";\r\n    if (state == \"FINISHED\") return \"FINISHED\";\r\n    return `${state} is unknown...`\r\n  }\r\n}\r\n","/**\r\n * To start using Traveler, require it in main.js:\r\n * Example: var Traveler = require('Traveler.js');\r\n */\r\nexport class Traveler {\r\n\r\n  private static structureMatrixCache: { [roomName: string]: CostMatrix } = {};\r\n  private static creepMatrixCache: { [roomName: string]: CostMatrix } = {};\r\n  private static creepMatrixTick: number;\r\n  private static structureMatrixTick: number;\r\n\r\n  /**\r\n   * move creep to destination\r\n   * @param creep\r\n   * @param destination\r\n   * @param options\r\n   * @returns {number}\r\n   */\r\n\r\n  public static travelTo(creep: Creep, destination: HasPos | RoomPosition, options: TravelToOptions = {}): number {\r\n\r\n    // uncomment if you would like to register hostile rooms entered\r\n    // this.updateRoomStatus(creep.room);\r\n    if (!destination) {\r\n      return ERR_INVALID_ARGS;\r\n    }\r\n    if (creep.fatigue > 0) {\r\n      Traveler.circle(creep.pos, \"aqua\", .3);\r\n      return ERR_TIRED;\r\n    }\r\n\r\n    destination = this.normalizePos(destination);\r\n\r\n    // manage case where creep is nearby destination\r\n    let rangeToDestination = creep.pos.getRangeTo(destination);\r\n    if (options.range && rangeToDestination <= options.range) {\r\n      return OK;\r\n    } else if (rangeToDestination <= 1) {\r\n      if (rangeToDestination === 1 && !options.range) {\r\n        let direction = creep.pos.getDirectionTo(destination);\r\n        if (options.returnData) {\r\n          options.returnData.nextPos = destination;\r\n          options.returnData.path = direction.toString();\r\n        }\r\n        return creep.move(direction);\r\n      }\r\n      return OK;\r\n    }\r\n\r\n    // initialize data object\r\n    if (!creep.memory._trav) {\r\n      delete creep.memory._travel;\r\n      creep.memory._trav = {};\r\n    }\r\n    let travelData = creep.memory._trav as TravelData;\r\n\r\n    let state = this.deserializeState(travelData, destination);\r\n\r\n    // uncomment to visualize destination\r\n    // this.circle(destination.pos, \"orange\");\r\n    // check if creep is stuck\r\n    if (this.isStuck(creep, state)) {\r\n      state.stuckCount++;\r\n      Traveler.circle(creep.pos, \"magenta\", state.stuckCount * .2);\r\n    } else {\r\n      state.stuckCount = 0;\r\n    }\r\n\r\n    // handle case where creep is stuck\r\n    if (!options.stuckValue) { options.stuckValue = DEFAULT_STUCK_VALUE; }\r\n    if (state.stuckCount >= options.stuckValue && Math.random() > .5) {\r\n      options.ignoreCreeps = false;\r\n      options.freshMatrix = true;\r\n      delete travelData.path;\r\n    }\r\n\r\n    // TODO:handle case where creep moved by some other function, but destination is still the same\r\n    // delete path cache if destination is different\r\n    if (!this.samePos(state.destination, destination)) {\r\n      if (options.movingTarget && state.destination.isNearTo(destination)) {\r\n        travelData.path += state.destination.getDirectionTo(destination);\r\n        state.destination = destination;\r\n      } else {\r\n        delete travelData.path;\r\n      }\r\n    }\r\n\r\n    if (options.repath && Math.random() < options.repath) {\r\n      // add some chance that you will find a new path randomly\r\n      delete travelData.path;\r\n    }\r\n\r\n    // pathfinding\r\n    let newPath = false;\r\n    if (!travelData.path) {\r\n      newPath = true;\r\n      if (creep.spawning) { return ERR_BUSY; }\r\n\r\n      state.destination = destination;\r\n\r\n      let cpu = Game.cpu.getUsed();\r\n      let ret = this.findTravelPath(creep.pos, destination, options);\r\n\r\n      let cpuUsed = Game.cpu.getUsed() - cpu;\r\n      state.cpu = _.round(cpuUsed + state.cpu);\r\n      if (state.cpu > REPORT_CPU_THRESHOLD) {\r\n        // see note at end of file for more info on this\r\n        console.log(`TRAVELER: heavy cpu use: ${creep.name}, cpu: ${state.cpu} origin: ${\r\n          creep.pos}, dest: ${destination}`);\r\n      }\r\n\r\n      let color = \"orange\";\r\n      if (ret.incomplete) {\r\n        // uncommenting this is a great way to diagnose creep behavior issues\r\n        // console.log(`TRAVELER: incomplete path for ${creep.name}`);\r\n        color = \"red\";\r\n      }\r\n\r\n      if (options.returnData) {\r\n        options.returnData.pathfinderReturn = ret;\r\n      }\r\n\r\n      travelData.path = Traveler.serializePath(creep.pos, ret.path, color);\r\n      state.stuckCount = 0;\r\n    }\r\n\r\n    this.serializeState(creep, destination, state, travelData);\r\n\r\n    if (!travelData.path || travelData.path.length === 0) {\r\n      return ERR_NO_PATH;\r\n    }\r\n\r\n    // consume path\r\n    if (state.stuckCount === 0 && !newPath) {\r\n      travelData.path = travelData.path.substr(1);\r\n    }\r\n\r\n    let nextDirection = parseInt(travelData.path[0], 10);\r\n    if (options.returnData) {\r\n      if (nextDirection) {\r\n        let nextPos = Traveler.positionAtDirection(creep.pos, nextDirection);\r\n        if (nextPos) { options.returnData.nextPos = nextPos; }\r\n      }\r\n      options.returnData.state = state;\r\n      options.returnData.path = travelData.path;\r\n    }\r\n    return creep.move(nextDirection as DirectionConstant);\r\n  }\r\n\r\n  /**\r\n   * make position objects consistent so that either can be used as an argument\r\n   * @param destination\r\n   * @returns {any}\r\n   */\r\n\r\n  public static normalizePos(destination: HasPos | RoomPosition): RoomPosition {\r\n    if (!(destination instanceof RoomPosition)) {\r\n      return destination.pos;\r\n    }\r\n    return destination;\r\n  }\r\n\r\n  /**\r\n   * check if room should be avoided by findRoute algorithm\r\n   * @param roomName\r\n   * @returns {RoomMemory|number}\r\n   */\r\n\r\n  public static checkAvoid(roomName: string) {\r\n    return Memory.rooms && Memory.rooms[roomName] && Memory.rooms[roomName].avoid;\r\n  }\r\n\r\n  /**\r\n   * check if a position is an exit\r\n   * @param pos\r\n   * @returns {boolean}\r\n   */\r\n\r\n  public static isExit(pos: Coord): boolean {\r\n    return pos.x === 0 || pos.y === 0 || pos.x === 49 || pos.y === 49;\r\n  }\r\n\r\n  /**\r\n   * check two coordinates match\r\n   * @param pos1\r\n   * @param pos2\r\n   * @returns {boolean}\r\n   */\r\n\r\n  public static sameCoord(pos1: Coord, pos2: Coord): boolean {\r\n    return pos1.x === pos2.x && pos1.y === pos2.y;\r\n  }\r\n\r\n  /**\r\n   * check if two positions match\r\n   * @param pos1\r\n   * @param pos2\r\n   * @returns {boolean}\r\n   */\r\n\r\n  public static samePos(pos1: RoomPosition, pos2: RoomPosition) {\r\n    return this.sameCoord(pos1, pos2) && pos1.roomName === pos2.roomName;\r\n  }\r\n\r\n  /**\r\n   * draw a circle at position\r\n   * @param pos\r\n   * @param color\r\n   * @param opacity\r\n   */\r\n\r\n  public static circle(pos: RoomPosition, color: string, opacity?: number) {\r\n    new RoomVisual(pos.roomName).circle(pos, {\r\n      radius: .45, fill: \"transparent\", stroke: color, strokeWidth: .15, opacity: opacity\r\n    });\r\n  }\r\n\r\n  /**\r\n   * update memory on whether a room should be avoided based on controller owner\r\n   * @param room\r\n   */\r\n\r\n  public static updateRoomStatus(room: Room) {\r\n    if (!room) { return; }\r\n    if (room.controller) {\r\n      if (room.controller.owner && !room.controller.my) {\r\n        room.memory.avoid = 1;\r\n      } else {\r\n        delete room.memory.avoid;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * find a path from origin to destination\r\n   * @param origin\r\n   * @param destination\r\n   * @param options\r\n   * @returns {PathfinderReturn}\r\n   */\r\n\r\n  public static findTravelPath(origin: RoomPosition | HasPos, destination: RoomPosition | HasPos,\r\n    options: TravelToOptions = {}): PathfinderReturn {\r\n\r\n    _.defaults(options, {\r\n      ignoreCreeps: true,\r\n      maxOps: DEFAULT_MAXOPS,\r\n      range: 1,\r\n    });\r\n\r\n    if (options.movingTarget) {\r\n      options.range = 0;\r\n    }\r\n\r\n    origin = this.normalizePos(origin);\r\n    destination = this.normalizePos(destination);\r\n    let originRoomName = origin.roomName;\r\n    let destRoomName = destination.roomName;\r\n\r\n    // check to see whether findRoute should be used\r\n    let roomDistance = Game.map.getRoomLinearDistance(origin.roomName, destination.roomName);\r\n    let allowedRooms = options.route;\r\n    if (!allowedRooms && (options.useFindRoute || (options.useFindRoute === undefined && roomDistance > 2))) {\r\n      let route = this.findRoute(origin.roomName, destination.roomName, options);\r\n      if (route) { allowedRooms = route; }\r\n    }\r\n\r\n    let roomsSearched = 0;\r\n\r\n    let callback = (roomName: string): CostMatrix | boolean => {\r\n\r\n      if (allowedRooms) {\r\n        if (!allowedRooms[roomName]) {\r\n          return false;\r\n        }\r\n      } else if (!options.allowHostile && Traveler.checkAvoid(roomName)\r\n        && roomName !== destRoomName && roomName !== originRoomName) {\r\n        return false;\r\n      }\r\n\r\n      roomsSearched++;\r\n\r\n      let matrix;\r\n      let room = Game.rooms[roomName];\r\n      if (room) {\r\n        if (options.ignoreStructures) {\r\n          matrix = new PathFinder.CostMatrix();\r\n          if (!options.ignoreCreeps) {\r\n            Traveler.addCreepsToMatrix(room, matrix);\r\n          }\r\n        } else if (options.ignoreCreeps || roomName !== originRoomName) {\r\n          matrix = this.getStructureMatrix(room, options.freshMatrix);\r\n        } else {\r\n          matrix = this.getCreepMatrix(room);\r\n        }\r\n\r\n        if (options.obstacles) {\r\n          matrix = matrix.clone();\r\n          for (let obstacle of options.obstacles) {\r\n            if (obstacle.pos.roomName !== roomName) { continue; }\r\n            matrix.set(obstacle.pos.x, obstacle.pos.y, 0xff);\r\n          }\r\n        }\r\n      }\r\n\r\n      if (options.roomCallback) {\r\n        if (!matrix) { matrix = new PathFinder.CostMatrix(); }\r\n        let outcome = options.roomCallback(roomName, matrix.clone());\r\n        if (outcome !== undefined) {\r\n          return outcome;\r\n        }\r\n      }\r\n\r\n      return matrix as CostMatrix;\r\n    };\r\n\r\n    let ret = PathFinder.search(origin, { pos: destination, range: options.range! }, {\r\n      maxOps: options.maxOps,\r\n      maxRooms: options.maxRooms,\r\n      plainCost: options.offRoad ? 1 : options.ignoreRoads ? 1 : 2,\r\n      swampCost: options.offRoad ? 1 : options.ignoreRoads ? 5 : 10,\r\n      roomCallback: callback,\r\n    });\r\n\r\n    if (ret.incomplete && options.ensurePath) {\r\n\r\n      if (options.useFindRoute === undefined) {\r\n\r\n        // handle case where pathfinder failed at a short distance due to not using findRoute\r\n        // can happen for situations where the creep would have to take an uncommonly indirect path\r\n        // options.allowedRooms and options.routeCallback can also be used to handle this situation\r\n        if (roomDistance <= 2) {\r\n          console.log(`TRAVELER: path failed without findroute, trying with options.useFindRoute = true`);\r\n          console.log(`from: ${origin}, destination: ${destination}`);\r\n          options.useFindRoute = true;\r\n          ret = this.findTravelPath(origin, destination, options);\r\n          console.log(`TRAVELER: second attempt was ${ret.incomplete ? \"not \" : \"\"}successful`);\r\n          return ret;\r\n        }\r\n\r\n        // TODO: handle case where a wall or some other obstacle is blocking the exit assumed by findRoute\r\n      } else {\r\n\r\n      }\r\n    }\r\n\r\n    return ret;\r\n  }\r\n\r\n  /**\r\n   * find a viable sequence of rooms that can be used to narrow down pathfinder's search algorithm\r\n   * @param origin\r\n   * @param destination\r\n   * @param options\r\n   * @returns {{}}\r\n   */\r\n\r\n  public static findRoute(origin: string, destination: string,\r\n    options: TravelToOptions = {}): { [roomName: string]: boolean } | void {\r\n\r\n    let restrictDistance = options.restrictDistance || Game.map.getRoomLinearDistance(origin, destination) + 10;\r\n    let allowedRooms = { [origin]: true, [destination]: true };\r\n\r\n    let highwayBias = 1;\r\n    if (options.preferHighway) {\r\n      highwayBias = 2.5;\r\n      if (options.highwayBias) {\r\n        highwayBias = options.highwayBias;\r\n      }\r\n    }\r\n\r\n    let ret = Game.map.findRoute(origin, destination, {\r\n      routeCallback: (roomName: string) => {\r\n\r\n        if (options.routeCallback) {\r\n          let outcome = options.routeCallback(roomName);\r\n          if (outcome !== undefined) {\r\n            return outcome;\r\n          }\r\n        }\r\n\r\n        let rangeToRoom = Game.map.getRoomLinearDistance(origin, roomName);\r\n        if (rangeToRoom > restrictDistance) {\r\n          // room is too far out of the way\r\n          return Number.POSITIVE_INFINITY;\r\n        }\r\n\r\n        if (!options.allowHostile && Traveler.checkAvoid(roomName) &&\r\n          roomName !== destination && roomName !== origin) {\r\n          // room is marked as \"avoid\" in room memory\r\n          return Number.POSITIVE_INFINITY;\r\n        }\r\n\r\n        let parsed;\r\n        if (options.preferHighway) {\r\n          parsed = /^[WE]([0-9]+)[NS]([0-9]+)$/.exec(roomName) as any;\r\n          let isHighway = (parsed[1] % 10 === 0) || (parsed[2] % 10 === 0);\r\n          if (isHighway) {\r\n            return 1;\r\n          }\r\n        }\r\n        // SK rooms are avoided when there is no vision in the room, harvested-from SK rooms are allowed\r\n        if (!options.allowSK && !Game.rooms[roomName]) {\r\n          if (!parsed) { parsed = /^[WE]([0-9]+)[NS]([0-9]+)$/.exec(roomName) as any; }\r\n          let fMod = parsed[1] % 10;\r\n          let sMod = parsed[2] % 10;\r\n          let isSK = !(fMod === 5 && sMod === 5) &&\r\n            ((fMod >= 4) && (fMod <= 6)) &&\r\n            ((sMod >= 4) && (sMod <= 6));\r\n          if (isSK) {\r\n            return 10 * highwayBias;\r\n          }\r\n        }\r\n\r\n        return highwayBias;\r\n      },\r\n    });\r\n\r\n    if (!_.isArray(ret)) {\r\n      console.log(`couldn't findRoute to ${destination}`);\r\n      return;\r\n    }\r\n    for (let value of ret) {\r\n      allowedRooms[value.room] = true;\r\n    }\r\n\r\n    return allowedRooms;\r\n  }\r\n\r\n  /**\r\n   * check how many rooms were included in a route returned by findRoute\r\n   * @param origin\r\n   * @param destination\r\n   * @returns {number}\r\n   */\r\n\r\n  public static routeDistance(origin: string, destination: string): number | void {\r\n    let linearDistance = Game.map.getRoomLinearDistance(origin, destination);\r\n    if (linearDistance >= 32) {\r\n      return linearDistance;\r\n    }\r\n\r\n    let allowedRooms = this.findRoute(origin, destination);\r\n    if (allowedRooms) {\r\n      return Object.keys(allowedRooms).length;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * build a cost matrix based on structures in the room. Will be cached for more than one tick. Requires vision.\r\n   * @param room\r\n   * @param freshMatrix\r\n   * @returns {any}\r\n   */\r\n\r\n  public static getStructureMatrix(room: Room, freshMatrix?: boolean): CostMatrix {\r\n    if (!this.structureMatrixCache[room.name] || (freshMatrix && Game.time !== this.structureMatrixTick)) {\r\n      this.structureMatrixTick = Game.time;\r\n      let matrix = new PathFinder.CostMatrix();\r\n      this.structureMatrixCache[room.name] = Traveler.addStructuresToMatrix(room, matrix, 1);\r\n    }\r\n    return this.structureMatrixCache[room.name];\r\n  }\r\n\r\n  /**\r\n   * build a cost matrix based on creeps and structures in the room. Will be cached for one tick. Requires vision.\r\n   * @param room\r\n   * @returns {any}\r\n   */\r\n\r\n  public static getCreepMatrix(room: Room) {\r\n    if (!this.creepMatrixCache[room.name] || Game.time !== this.creepMatrixTick) {\r\n      this.creepMatrixTick = Game.time;\r\n      this.creepMatrixCache[room.name] = Traveler.addCreepsToMatrix(room,\r\n        this.getStructureMatrix(room, true).clone());\r\n    }\r\n    return this.creepMatrixCache[room.name];\r\n  }\r\n\r\n  /**\r\n   * add structures to matrix so that impassible structures can be avoided and roads given a lower cost\r\n   * @param room\r\n   * @param matrix\r\n   * @param roadCost\r\n   * @returns {CostMatrix}\r\n   */\r\n\r\n  public static addStructuresToMatrix(room: Room, matrix: CostMatrix, roadCost: number): CostMatrix {\r\n\r\n    let impassibleStructures: Structure[] = [];\r\n    for (let structure of room.find<Structure>(FIND_STRUCTURES)) {\r\n      if (structure instanceof StructureRampart) {\r\n        if (!structure.my && !structure.isPublic) {\r\n          impassibleStructures.push(structure);\r\n        }\r\n      } else if (structure instanceof StructureRoad) {\r\n        matrix.set(structure.pos.x, structure.pos.y, roadCost);\r\n      } else if (structure instanceof StructureContainer) {\r\n        matrix.set(structure.pos.x, structure.pos.y, 5);\r\n      } else {\r\n        impassibleStructures.push(structure);\r\n      }\r\n    }\r\n\r\n    for (let site of room.find(FIND_MY_CONSTRUCTION_SITES)) {\r\n      if (site.structureType === STRUCTURE_CONTAINER || site.structureType === STRUCTURE_ROAD\r\n        || site.structureType === STRUCTURE_RAMPART) { continue; }\r\n      matrix.set(site.pos.x, site.pos.y, 0xff);\r\n    }\r\n\r\n    for (let structure of impassibleStructures) {\r\n      matrix.set(structure.pos.x, structure.pos.y, 0xff);\r\n    }\r\n\r\n    return matrix;\r\n  }\r\n\r\n  /**\r\n   * add creeps to matrix so that they will be avoided by other creeps\r\n   * @param room\r\n   * @param matrix\r\n   * @returns {CostMatrix}\r\n   */\r\n\r\n  public static addCreepsToMatrix(room: Room, matrix: CostMatrix): CostMatrix {\r\n    room.find(FIND_CREEPS).forEach((creep: Creep) => matrix.set(creep.pos.x, creep.pos.y, 0xff));\r\n    return matrix;\r\n  }\r\n\r\n  /**\r\n   * serialize a path, traveler style. Returns a string of directions.\r\n   * @param startPos\r\n   * @param path\r\n   * @param color\r\n   * @returns {string}\r\n   */\r\n\r\n  public static serializePath(startPos: RoomPosition, path: RoomPosition[], color = \"orange\"): string {\r\n    let serializedPath = \"\";\r\n    let lastPosition = startPos;\r\n    this.circle(startPos, color);\r\n    for (let position of path) {\r\n      if (position.roomName === lastPosition.roomName) {\r\n        new RoomVisual(position.roomName)\r\n          .line(position, lastPosition, { color: color, lineStyle: \"dashed\" });\r\n        serializedPath += lastPosition.getDirectionTo(position);\r\n      }\r\n      lastPosition = position;\r\n    }\r\n    return serializedPath;\r\n  }\r\n\r\n  /**\r\n   * returns a position at a direction relative to origin\r\n   * @param origin\r\n   * @param direction\r\n   * @returns {RoomPosition}\r\n   */\r\n\r\n  public static positionAtDirection(origin: RoomPosition, direction: number): RoomPosition | void {\r\n    let offsetX = [0, 0, 1, 1, 1, 0, -1, -1, -1];\r\n    let offsetY = [0, -1, -1, 0, 1, 1, 1, 0, -1];\r\n    let x = origin.x + offsetX[direction];\r\n    let y = origin.y + offsetY[direction];\r\n    if (x > 49 || x < 0 || y > 49 || y < 0) { return; }\r\n    return new RoomPosition(x, y, origin.roomName);\r\n  }\r\n\r\n  /**\r\n   * convert room avoidance memory from the old pattern to the one currently used\r\n   * @param cleanup\r\n   */\r\n\r\n  public static patchMemory(cleanup = false) {\r\n    if (!Memory.empire) { return; }\r\n    if (!Memory.empire.hostileRooms) { return; }\r\n    let count = 0;\r\n    for (let roomName in Memory.empire.hostileRooms) {\r\n      if (Memory.empire.hostileRooms[roomName]) {\r\n        if (!Memory.rooms[roomName]) { Memory.rooms[roomName] = {} as any; }\r\n        Memory.rooms[roomName].avoid = 1;\r\n        count++;\r\n      }\r\n      if (cleanup) {\r\n        delete Memory.empire.hostileRooms[roomName];\r\n      }\r\n    }\r\n    if (cleanup) {\r\n      delete Memory.empire.hostileRooms;\r\n    }\r\n\r\n    console.log(`TRAVELER: room avoidance data patched for ${count} rooms`);\r\n  }\r\n\r\n  private static deserializeState(travelData: TravelData, destination: RoomPosition): TravelState {\r\n    let state = {} as TravelState;\r\n    if (travelData.state) {\r\n      state.lastCoord = { x: travelData.state[STATE_PREV_X], y: travelData.state[STATE_PREV_Y] };\r\n      state.cpu = travelData.state[STATE_CPU];\r\n      state.stuckCount = travelData.state[STATE_STUCK];\r\n      state.destination = new RoomPosition(travelData.state[STATE_DEST_X], travelData.state[STATE_DEST_Y],\r\n        travelData.state[STATE_DEST_ROOMNAME]);\r\n    } else {\r\n      state.cpu = 0;\r\n      state.destination = destination;\r\n    }\r\n    return state;\r\n  }\r\n\r\n  private static serializeState(creep: Creep, destination: RoomPosition, state: TravelState, travelData: TravelData) {\r\n    travelData.state = [creep.pos.x, creep.pos.y, state.stuckCount, state.cpu, destination.x, destination.y,\r\n    destination.roomName];\r\n  }\r\n\r\n  private static isStuck(creep: Creep, state: TravelState): boolean {\r\n    let stuck = false;\r\n    if (state.lastCoord !== undefined) {\r\n      if (this.sameCoord(creep.pos, state.lastCoord)) {\r\n        // didn't move\r\n        stuck = true;\r\n      } else if (this.isExit(creep.pos) && this.isExit(state.lastCoord)) {\r\n        // moved against exit\r\n        stuck = true;\r\n      }\r\n    }\r\n\r\n    return stuck;\r\n  }\r\n}\r\n\r\n// this might be higher than you wish, setting it lower is a great way to diagnose creep behavior issues. When creeps\r\n// need to repath to often or they aren't finding valid paths, it can sometimes point to problems elsewhere in your code\r\nconst REPORT_CPU_THRESHOLD = 1000;\r\n\r\nconst DEFAULT_MAXOPS = 20000;\r\nconst DEFAULT_STUCK_VALUE = 2;\r\nconst STATE_PREV_X = 0;\r\nconst STATE_PREV_Y = 1;\r\nconst STATE_STUCK = 2;\r\nconst STATE_CPU = 3;\r\nconst STATE_DEST_X = 4;\r\nconst STATE_DEST_Y = 5;\r\nconst STATE_DEST_ROOMNAME = 6;\r\n\r\n// assigns a function to Creep.prototype: creep.travelTo(destination)\r\nCreep.prototype.travelTo = function (destination: RoomPosition | { pos: RoomPosition }, options?: TravelToOptions) {\r\n  return Traveler.travelTo(this, destination, options);\r\n};\r\n","import { Task } from \"./Task\";\r\nimport { CreepTaskRequest } from \"./CreepTaskRequest\";\r\n//import { SmartContainer, SmartSource,  SmartLink } from \"utils/memory\"\r\nimport * as utils from \"utils/utils\";\r\nimport { Traveler } from \"Traveler\";\r\n\r\n\r\nexport abstract class CreepTask extends Task {\r\n  public request: CreepTaskRequest;\r\n  protected creep: Creep;\r\n  creepMemory!: CreepMemory;\r\n\r\n  constructor(request: CreepTaskRequest) {\r\n    super(request);\r\n\r\n    this.request = request as CreepTaskRequest;\r\n    this.creep = Game.creeps[this.request.assignedTo];\r\n    if (this.creep == undefined || this.creep.memory == undefined) {\r\n      this.request.status == \"FINISHED\";\r\n      return;\r\n    }\r\n    this.creepMemory = this.creep.memory as CreepMemory;\r\n\r\n  }\r\n  protected init(): void {\r\n\r\n    this.creep = Game.creeps[this.request.assignedTo];\r\n    if (this.creep == undefined || this.creep.memory == undefined) {\r\n      this.request.status == \"FINISHED\";\r\n      return;\r\n    }\r\n    else {\r\n      this.creepMemory = this.creep.memory as CreepMemory;\r\n      if (Game.time % 5 == 0) this.creep.say(`${this.request.wingDing}`);\r\n    }\r\n\r\n\r\n  }\r\n  protected prepare(): void {\r\n    this.creep = Game.creeps[this.request.assignedTo];\r\n    if (this.creep == undefined || this.creep.memory == undefined) {\r\n      this.request.status = \"FINISHED\";\r\n    }\r\n    else {\r\n      this.creepMemory = this.creep.memory as CreepMemory;\r\n      if (Game.time % 5 == 0) this.creep.say(`${this.request.wingDing}`);\r\n    }\r\n\r\n  }\r\n\r\n  protected continue(): void {\r\n    this.creep = Game.creeps[this.request.assignedTo];\r\n    if (this.creep == undefined || this.creep.memory == undefined) {\r\n      this.request.status = \"FINISHED\";\r\n    }\r\n    else {\r\n      this.creepMemory = this.creep.memory as CreepMemory;\r\n      if (Game.time % 5 == 0) this.creep.say(`${this.request.wingDing}`);\r\n    }\r\n  }\r\n\r\n  protected finish(): void {\r\n\r\n    const creep = Game.creeps[this.request.assignedTo];\r\n    if (creep != undefined && creep.memory != undefined) {\r\n      var creepMemory = creep.memory as CreepMemory;\r\n      creepMemory.idle = true;\r\n      creepMemory.currentTask = \"\";\r\n      creep.say(\"✔\")\r\n\r\n    }\r\n  }\r\n  protected collectFromMasterLink(roomName: string): boolean {\r\n\r\n    const room = Game.rooms[roomName];\r\n    const roomMem = room.memory as RoomMemory;\r\n   \r\n    let masterLink = _.find(roomMem.links, l => l.linkMode == \"MASTER_RECEIVE\") as SmartLink;\r\n    if (masterLink == undefined) return false\r\n\r\n    var link = Game.getObjectById(masterLink.linkID) as StructureLink;\r\n\r\n    if (link.energy < link.energyCapacity / 2) return false;\r\n\r\n    var result = this.creep.withdraw(link, RESOURCE_ENERGY)\r\n    if (result == ERR_NOT_IN_RANGE) {\r\n      this.creep.travelTo(link);\r\n    }\r\n    return true;\r\n  }\r\n  protected collectFromDroppedEnergy(roomName: string): boolean {\r\n    const room = Game.rooms[roomName];\r\n    const roomMemory = room.memory as RoomMemory;\r\n\r\n    const debugSources = roomMemory.activeResourcePileIDs\r\n      .map(s => Game.getObjectById(s) as Resource)\r\n      .filter(ss => ss.amount > 300)\r\n    if (debugSources.length == 0) return false;\r\n\r\n    const sortDebug = _.sortBy(debugSources, s => s.amount / this.creep.pos.getRangeTo(s.pos)).reverse();\r\n    var mine = _.first(sortDebug);\r\n    var range = this.creep.pos.getRangeTo(mine);\r\n    var result = this.creep.pickup(mine)\r\n    if (result == ERR_NOT_IN_RANGE) {\r\n      Traveler.travelTo(this.creep, mine);\r\n      //this.creep.moveTo(mine);\r\n    }\r\n    return true;\r\n   \r\n  }\r\n  protected collectFromContainer(roomName: string): boolean {\r\n    const room = Game.rooms[roomName];\r\n    const roomMemory = room.memory as RoomMemory;\r\n\r\n    const containers = roomMemory.containers;\r\n    var creepRole = this.creepMemory.role;\r\n    var valids: SmartContainer[] = [];\r\n\r\n    for (var i in containers) {\r\n      var smartContainer = containers[i];\r\n      var container = Game.getObjectById(smartContainer.containerID) as StructureContainer;\r\n      if (container == null) {\r\n        return false;\r\n       \r\n      }\r\n      if (_.includes(smartContainer.allowedWithdrawRoles, creepRole) && container.store.energy > (this.creep.carryCapacity - this.creep.carry.energy)/4) {\r\n        valids.push(smartContainer);\r\n      }\r\n    }\r\n    if (valids.length == 0) return false;\r\n    //console.log(\"valids found\")\r\n    const sortDebug = _.sortBy(valids, s => {\r\n      var c = Game.getObjectById(s.containerID) as StructureContainer;\r\n      return c.store.energy / this.creep.pos.getRangeTo(c.pos)\r\n    }).reverse();\r\n    var container = Game.getObjectById(_.first(sortDebug).containerID) as StructureContainer;\r\n    var result = this.creep.withdraw(container, RESOURCE_ENERGY)\r\n    if (result == ERR_NOT_IN_RANGE) {\r\n      Traveler.travelTo(this.creep, container);\r\n      //this.creep.moveTo(mine);\r\n    }\r\n    return true;\r\n\r\n  }\r\n  protected collectFromStorage(roomName: string): boolean {\r\n    const room = Game.rooms[roomName];\r\n    const roomMem = room.memory as RoomMemory;\r\n    const storage = _.first(room.find(FIND_MY_STRUCTURES).filter(s => s.structureType == \"storage\")) as StructureStorage;\r\n\r\n    if (storage == undefined) {\r\n      return false;\r\n    }\r\n    if (storage.store.energy < 1000) return false;\r\n\r\n    var result = this.creep.withdraw(storage, RESOURCE_ENERGY);\r\n    if (result == ERR_NOT_IN_RANGE) {\r\n      Traveler.travelTo(this.creep, storage);\r\n      //this.creep.moveTo(storage);\r\n      //return true;\r\n    }\r\n    return true;\r\n    //else if (result == OK) return true;\r\n  }\r\n  protected collectFromTombstone(roomName: string): boolean {\r\n    //console.log(\"collect from tombstone\")\r\n    const room = Game.rooms[roomName];\r\n    //if (this.creep.carry.energy == this.creep.carryCapacity) return;\r\n    const tombstones = room.find(FIND_TOMBSTONES).filter(t => Object.keys(t.store).length > 1 || t.store.energy > 0) as Tombstone[]\r\n\r\n\r\n\r\n    const byRange = _.sortBy(tombstones, t => this.creep.pos.getRangeTo(t));\r\n\r\n    const tombstone = _.first(byRange); \r\n    if (tombstone == undefined) return false;\r\n\r\n    if (this.request.name == \"FillStorage\") {\r\n      var result = this.creep.withdraw(tombstone, _.findKey(tombstone.store) as ResourceConstant);\r\n      if (result == ERR_NOT_IN_RANGE) {\r\n        Traveler.travelTo(this.creep, tombstone);\r\n        //this.creep.moveTo(tombstone);\r\n        return true;\r\n      }\r\n      else if (result == OK) return true;\r\n      return false;\r\n    }\r\n    else {\r\n      var result = this.creep.withdraw(tombstone, RESOURCE_ENERGY);\r\n      if (result == ERR_NOT_IN_RANGE) {\r\n        Traveler.travelTo(this.creep, tombstone);\r\n        //this.creep.moveTo(tombstone);\r\n\r\n      }\r\n      else if (result == OK) return true;\r\n      return false;\r\n    }\r\n   \r\n  }\r\n\r\n  protected collectFromSource(roomName: string): boolean {\r\n\r\n    const roomMem = Game.rooms[roomName].memory as RoomMemory;\r\n   \r\n    var withEnergy = _.filter(roomMem.harvestLocations, s => {\r\n      var source = Game.getObjectById(s.sourceID) as Source;\r\n      return source.energy > 0;\r\n    });\r\n    var site = Game.getObjectById(this.request.targetID) as AnyStructure | ConstructionSite | Source;\r\n    if (site == null) return false;\r\n   \r\n    var closest = _.min(withEnergy, s => site.pos.getRangeTo(Game.getObjectById(s.sourceID) as Source))\r\n\r\n    if (closest == undefined) return false;\r\n    \r\n    var sourceID = closest.sourceID;\r\n    var source = Game.getObjectById(sourceID) as Source\r\n\r\n    var result = this.creep.harvest(source)\r\n    if (result == ERR_NOT_IN_RANGE) {\r\n      Traveler.travelTo(this.creep, source);\r\n      //this.creep.moveTo(source);\r\n      this.creep.harvest(source);\r\n    }\r\n    return true;\r\n\r\n  }\r\n\r\n}\r\n","import { CreepTaskRequest } from \"../CreepTaskRequest\";\r\nimport { CreepTask } from \"../CreepTask\";\r\nimport { SmartSource } from \"utils/memory\"\r\nimport * as utils from \"utils/utils\";\r\nimport { CreepTaskQueue } from \"../CreepTaskQueue\";\r\nimport { Task } from \"../Task\";\r\n\r\nexport class MineRequest extends CreepTaskRequest {\r\n  priority: number = 1;\r\n  requiredRole: CreepRole[] = [\"ROLE_MINER\"]\r\n  name: string = \"Mine\";\r\n  maxConcurrent: number;\r\n  id: number\r\n  //source: SmartSource;\r\n  constructor(roomName: string, sourceID: string) {\r\n    super(roomName, `💲`, sourceID);\r\n\r\n    const roomMem = Game.rooms[roomName].memory as RoomMemory;\r\n    //console.log(\"source id in mine req ctor: \" + sourceID)\r\n    const source = roomMem.harvestLocations[sourceID] as SmartSource;\r\n    //this.source = _.find(roomMem.harvestLocations, h => h.sourceID == sourceID) as SmartSource;\r\n    if (source == undefined) console.log(\"You cant init a mine request with an undefined source.\")\r\n\r\n    //console.log(\"after finding source: \" + this.source.sourceID)\r\n    this.id = _.random(0, 10);\r\n    var minerCount = utils.creepCount(roomName,\"ROLE_MINER\");\r\n    this.maxConcurrent = minerCount;\r\n    //console.log(\"max concurrent: \" + this.maxConcurrent)\r\n  }\r\n}\r\n\r\nexport class Mine extends CreepTask {\r\n  protected init(): void {\r\n    super.init();\r\n    const roomMem = Game.rooms[this.request.roomName].memory as RoomMemory;\r\n    const source = roomMem.harvestLocations[this.request.targetID] as SmartSource;\r\n    const request = this.request as MineRequest;\r\n    source.assignedTo.push(request.assignedTo);\r\n    console.log(\"mine init assigned to \" + source.assignedTo)\r\n    this.request.status = \"PREPARE\";\r\n    \r\n  }\r\n\r\n  protected prepare(): void {\r\n    super.prepare();\r\n    if (this.request.status == \"FINISHED\") return;\r\n\r\n    this.request.status = \"IN_PROGRESS\";\r\n  }\r\n  protected continue(): void {\r\n    super.continue();\r\n    if (this.request.status == \"FINISHED\") return;\r\n\r\n    if (this.creep.carryCapacity == 0) {\r\n      this.harvest();\r\n\r\n    }\r\n    else {\r\n      if (this.creep.carry.energy >= this.creep.carryCapacity - 10) this.deliver();\r\n      else this.harvest();\r\n    \r\n    }\r\n    //else(this.creep.drop(RESOURCE_ENERGY))\r\n    \r\n  }\r\n  protected finish(): void {\r\n    super.finish();\r\n  }\r\n\r\n  static addRequests(roomName: string, energyLevel: number): void {\r\n    const room = Game.rooms[roomName];\r\n    const mem = room.memory as RoomMemory;\r\n\r\n    //const unassigned = _.filter(mem.harvestLocations, h => h.assignedTo === null) as SmartSource[];\r\n    \r\n    //if (unassigned.length === 0) return;\r\n    var minersPerSource = 1;\r\n    //var energyLevel = RoomManager.getRoomEnergyLevel(roomName);\r\n    if (energyLevel < 3) {\r\n      minersPerSource = 2;\r\n    }\r\n    for (const key in mem.harvestLocations) {\r\n      const smartSource = mem.harvestLocations[key] as SmartSource;\r\n      //console.log(\"sourceid: \" + smartSource.sourceID)\r\n      if (smartSource.assignedTo.length == minersPerSource) continue;\r\n      var needed = minersPerSource - smartSource.assignedTo.length;\r\n      for (var i = 0; i < needed; i++) {\r\n        \r\n        var request = new MineRequest(roomName, smartSource.sourceID);\r\n        var totalCurrent = CreepTaskQueue.totalCount(request.roomName, request.name);\r\n        //console.log(\"total current:\" + totalCurrent)\r\n        if (totalCurrent < request.maxConcurrent) {\r\n          //console.log(\"about to add source for this id: \" + smartSource.sourceID)\r\n          CreepTaskQueue.addPendingRequest(request);\r\n        }\r\n      }\r\n      \r\n    }\r\n  }\r\n\r\n  private harvest() {\r\n    const creep = Game.creeps[this.request.assignedTo] as Creep;\r\n    const source = Game.getObjectById(this.request.targetID) as Source\r\n    //creep.say(\"moving\")\r\n    if (creep.harvest(source) == ERR_NOT_IN_RANGE) {\r\n      \r\n      creep.moveTo(source, { visualizePathStyle: { stroke: '#ffaa00' } });\r\n    }\r\n\r\n  }\r\n  private deliver() {\r\n    const creep = Game.creeps[this.request.assignedTo] as Creep;\r\n    const room = Game.rooms[this.request.roomName];\r\n    const roomMemory = room.memory as RoomMemory;\r\n\r\n    var smartSource = roomMemory.harvestLocations[this.request.targetID];\r\n    //if (room.name == \"W5S43\") {\r\n    //  console.log(\"smartsource id:\" + smartSource.linkID)\r\n    //}\r\n    if (smartSource.linkID != \"\") {\r\n      \r\n      var link = Game.getObjectById(smartSource.linkID) as StructureLink;\r\n      if (creep.transfer(link, RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {\r\n        creep.moveTo(link, { visualizePathStyle: { stroke: '#ffffff' } });\r\n      }\r\n\r\n    }\r\n    else {\r\n      const container = utils.findClosestContainer(this.request.roomName, creep.id, true, true) as StructureContainer;\r\n      if (container == undefined) {\r\n        creep.drop(RESOURCE_ENERGY);\r\n        return;\r\n      }\r\n\r\n      if (container.store.energy == container.storeCapacity) return;\r\n\r\n      if (creep.transfer(container, RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {\r\n        creep.moveTo(container, { visualizePathStyle: { stroke: '#ffffff' } });\r\n      }\r\n\r\n    }\r\n\r\n    \r\n  }\r\n\r\n  constructor(taskInfo: CreepTaskRequest) {\r\n    super(taskInfo);\r\n  }\r\n}\r\n\r\n","import { CreepTask } from \"../CreepTask\";\r\nimport { CreepTaskRequest } from \"../CreepTaskRequest\";\r\nimport { CreepTaskQueue } from \"../CreepTaskQueue\";\r\nimport * as utils from \"utils/utils\"\r\n\r\nexport class PickUpEnergyRequest extends CreepTaskRequest {\r\n  priority: number = 0;\r\n  name: string = \"PickupEnergy\";\r\n  requiredRole: CreepRole[] = [\"ROLE_WORKER\"];\r\n  maxConcurrent: number = 2;\r\n  resourceType: string;\r\n  constructor(roomName: string, resourceID: string, resourceType: string) {\r\n    super(roomName, \"😍\", resourceID);\r\n    this.resourceType = resourceType;\r\n  }\r\n}\r\nexport class PickupEnergy extends CreepTask {\r\n\r\n\r\n  protected init(): void {\r\n    super.init();\r\n    //console.log(\"mine init assigned to \" + this.request.assignedTo)\r\n\r\n    this.request.status = \"PREPARE\";\r\n  }\r\n  protected prepare(): void {\r\n    super.prepare();\r\n    if (this.request.status == \"FINISHED\") return;\r\n\r\n    this.request.status = \"IN_PROGRESS\";\r\n  }\r\n\r\n  protected continue() {\r\n    const requestInfo = this.request as PickUpEnergyRequest;\r\n    const resource = Game.getObjectById(this.request.targetID);\r\n    if (resource == null) {\r\n      this.request.status = \"FINISHED\";\r\n      return;\r\n    }\r\n    if (requestInfo.resourceType == \"tombstone\") {\r\n      let tombstone = resource as Tombstone;\r\n      if (this.creep.withdraw(tombstone, RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {\r\n        this.creep.moveTo(tombstone);\r\n      }\r\n      else this.request.status = \"FINISHED\";\r\n    }\r\n    else if (requestInfo.resourceType == \"resource\") {\r\n      let droppedResource = resource as Resource;\r\n      if (this.creep.pickup(droppedResource) == ERR_NOT_IN_RANGE) {\r\n        this.creep.moveTo(droppedResource);\r\n      }\r\n      else this.request.status = \"FINISHED\";\r\n    }\r\n  }\r\n\r\n  static addRequests(roomName: string): void {\r\n    let room = Game.rooms[roomName];\r\n    let resources = room.find(FIND_DROPPED_RESOURCES) as Resource[];\r\n    let tombstones = room.find(FIND_TOMBSTONES) as Tombstone[];\r\n\r\n    let workers = utils.creepNamesByRole(roomName,\"ROLE_WORKER\").filter(name => {\r\n      const worker = Game.creeps[name] as Creep;\r\n      return worker.carry.energy < worker.carryCapacity;\r\n    })\r\n    if (workers.length == 0) return;\r\n\r\n    if (resources.length > 0) {\r\n      //console.log(\"found \" + resources.length + \" dropped resources\")\r\n      for (const key in resources) {\r\n        if (!resources.hasOwnProperty(key)) continue;\r\n        const resource = resources[key] as Resource;\r\n        if (resource.resourceType != RESOURCE_ENERGY) continue;\r\n\r\n        let droppedReq = new PickUpEnergyRequest(roomName, resource.id, \"resource\")\r\n        CreepTaskQueue.addPendingRequest(droppedReq);\r\n      }\r\n    }\r\n    if (tombstones.length > 0) {\r\n      for (const key in tombstones) {\r\n        if (!tombstones.hasOwnProperty(key)) continue;\r\n        const tombstone = tombstones[key] as Tombstone;\r\n        if (tombstone.store.energy == 0) continue;\r\n        //console.log(\"found a tombstone with energy\")\r\n        let ts = new PickUpEnergyRequest(roomName, tombstone.id, \"resource\")\r\n        if (CreepTaskQueue.totalCount(roomName, ts.name) < ts.maxConcurrent) {\r\n          CreepTaskQueue.addPendingRequest(ts);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  //private deliver() {\r\n  //  let creep = Game.creeps[this.request.assignedTo];\r\n  //  let container = utils.findClosestContainer(this.request.roomName, creep.id, false, true) as StructureContainer;\r\n  //  if (container == undefined) throw \"Error!\";\r\n\r\n  //  if (container.store.energy == container.storeCapacity) return;\r\n\r\n  //  if (creep.transfer(container, RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {\r\n  //    creep.moveTo(container, { visualizePathStyle: { stroke: '#ffffff' } });\r\n  //  }\r\n  //}\r\n  constructor(taskInfo: CreepTaskRequest) {\r\n    super(taskInfo);\r\n  }\r\n}\r\n\r\n","import { CreepTask } from \"tasks/CreepTask\";\r\nimport { CreepTaskRequest } from \"tasks/CreepTaskRequest\";\r\nimport { CreepTaskQueue } from \"../CreepTaskQueue\";\r\nimport * as utils from \"utils/utils\"\r\nimport { SmartLink } from \"utils/memory\";\r\nimport { Task } from \"../Task\";\r\n\r\nexport class RestockRequest extends CreepTaskRequest {\r\n  priority: number = 0;\r\n  name = \"Restock\";\r\n  requiredRole : CreepRole[]= [\"ROLE_CARRIER\",\"ROLE_REMOTE_UPGRADER\"];\r\n  maxConcurrent = 2;\r\n  constructor(roomName: string, restockID: string) {\r\n    super(roomName, `🛒`, restockID);\r\n  }\r\n}\r\n\r\n\r\nexport class Restock extends CreepTask {\r\n\r\n  sources: Source[] = []\r\n  protected init(): void {\r\n    super.init();\r\n\r\n    var restock = this.request as RestockRequest;\r\n\r\n    //console.log(\"status after init\" + Task.getStatus(this.request.status))\r\n    this.request.status = \"PREPARE\";\r\n  }\r\n\r\n  protected prepare(): void {\r\n    super.prepare();\r\n    if (this.request.status == \"FINISHED\") return;\r\n    const restockInfo = this.request as RestockRequest;\r\n    var room = Game.rooms[this.request.roomName];\r\n    var roomMem = room.memory as RoomMemory;\r\n    var masterLink = _.find(roomMem.links, l => l.linkMode == \"MASTER_RECEIVE\");\r\n\r\n    //this.collectFromContainer(this.request.roomName, creep.id);\r\n    let targets = this.creep.room.find(FIND_STRUCTURES, {\r\n      filter: (structure) => {\r\n        return (structure.structureType == STRUCTURE_EXTENSION || structure.structureType == STRUCTURE_SPAWN) &&\r\n          structure.energy < structure.energyCapacity;\r\n      }\r\n    }).sort((structureA, structureB) => this.creep.pos.getRangeTo(structureA) - this.creep.pos.getRangeTo(structureB));\r\n    //console.log(\"restock targets: \" + targets.length);\r\n    if (targets.length == 0) {\r\n\r\n      this.request.status = \"FINISHED\";\r\n      return;\r\n    }\r\n    //temp code...\r\n    if (this.creep.carry.energy < this.creep.carryCapacity) {\r\n      if (masterLink == undefined) {\r\n        //console.log(\"collecting...\")\r\n        //if (this.collectFromStorage(room.name)) return;\r\n        if (this.collectFromDroppedEnergy(room.name)) return;\r\n        //console.log(\"no dropped energy...\")\r\n        if (this.collectFromTombstone(room.name)) return;\r\n        else if (this.collectFromContainer(room.name)) return;\r\n        else if (this.collectFromMasterLink(room.name)) return;\r\n        else if (this.collectFromStorage(room.name)) return;\r\n        else if (this.collectFromSource(room.name)) return;\r\n        //this.collectFromDroppedEnergy(room.name);\r\n        //this.collectFromTombstone(room.name);\r\n        //this.collectFromSource(room.name);\r\n      }\r\n      else {\r\n        if (this.collectFromDroppedEnergy(room.name)) return;\r\n        //console.log(\"no dropped energy...\")\r\n        if (this.collectFromMasterLink(room.name)) return;\r\n        if (this.collectFromTombstone(room.name)) return;\r\n        \r\n        if (this.collectFromContainer(room.name)) return;\r\n        \r\n        if (this.collectFromStorage(room.name)) return;\r\n        if (this.collectFromSource(room.name)) return;\r\n      }\r\n\r\n    }\r\n    else {\r\n      this.request.status = \"IN_PROGRESS\";\r\n    }\r\n  }\r\n  protected continue(): void {\r\n    super.continue();\r\n    if (this.request.status == \"FINISHED\") return;\r\n    const creep = Game.creeps[this.request.assignedTo];\r\n\r\n    if (creep.room.name != this.request.roomName) {\r\n      this.creep.moveTo(new RoomPosition(25, 25, this.request.roomName));\r\n      return;\r\n    }\r\n    const room = Game.rooms[this.request.roomName];\r\n    const roomMem = room.memory as RoomMemory;\r\n    //var /*storage*/ = _.find(room.find(FIND_STRUCTURES), s => s.structureType == \"storage\") as StructureStorage;\r\n    //if (storage == undefined) return;\r\n\r\n    let targets = creep.room.find(FIND_STRUCTURES, {\r\n      filter: (structure) => {\r\n        return (structure.structureType == STRUCTURE_EXTENSION || structure.structureType == STRUCTURE_SPAWN) &&\r\n          structure.energy < structure.energyCapacity;\r\n      }\r\n    }).sort((structureA, structureB) => creep.pos.getRangeTo(structureA) - creep.pos.getRangeTo(structureB));\r\n    //console.log(\"restock targets: \" + targets.length);\r\n    if (targets.length == 0) {\r\n\r\n      this.request.status = \"FINISHED\";\r\n      return;\r\n    }\r\n    else {\r\n      const result = creep.transfer(targets[0], RESOURCE_ENERGY)\r\n      const target = targets[0]\r\n      if (result == ERR_NOT_IN_RANGE) {\r\n        creep.moveTo(target, { visualizePathStyle: { stroke: '#ffffff' } });\r\n      }\r\n      if (this.creep.carry.energy == 0) this.request.status = \"FINISHED\";\r\n    }\r\n  }\r\n  constructor(taskInfo: CreepTaskRequest) {\r\n    super(taskInfo);\r\n  }\r\n\r\n  static addRequests(roomName: string, energyLevel: number) {\r\n    let restockables = utils.getRestockables(roomName);\r\n  \r\n    for (const targetID in restockables) {\r\n      let restockable = restockables[targetID];\r\n      let request = new RestockRequest(roomName, restockable.id);\r\n      //if (energyLevel > 2) {\r\n      //  request.requiredRole = [\"ROLE_CARRIER\",\"ROLE_REMOTE_UPGRADER\"]\r\n      //}\r\n      let existingTaskCount = CreepTaskQueue.totalCount(roomName, request.name);\r\n      let maxConcurrentCount = request.maxConcurrent;\r\n\r\n      if (existingTaskCount < maxConcurrentCount) {\r\n        CreepTaskQueue.addPendingRequest(request)\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { CreepTask } from \"tasks/CreepTask\";\r\nimport { CreepTaskRequest } from \"tasks/CreepTaskRequest\";\r\nimport { CreepTaskQueue } from \"../CreepTaskQueue\";\r\nimport { Task } from \"../Task\";\r\nimport { Traveler } from \"Traveler\";\r\nexport class BuildRequest extends CreepTaskRequest {\r\n  priority: number = 1;\r\n  requiredRole: CreepRole[] = [\"ROLE_WORKER\",\"ROLE_REMOTE_UPGRADER\"];\r\n  name = \"Build\";\r\n  maxConcurrent = 5;\r\n  constructor(roomName: string, siteID: string) {\r\n    super(roomName, `🚧`, siteID);\r\n  }\r\n}\r\nexport class DismantleRequest extends CreepTaskRequest {\r\n  priority: number = 1;\r\n  requiredRole: CreepRole[] = [\"ROLE_WORKER\", \"ROLE_DISMANTLER\"];\r\n  name = \"Dismantle\";\r\n  position: RoomPosition;\r\n  maxConcurrent = 2;\r\n  constructor(roomName: string, siteID: string) {\r\n    super(roomName, `🚧2`, siteID);\r\n    let obj = Game.getObjectById(siteID) as AnyStructure;\r\n    this.position = obj.pos;\r\n  }\r\n}\r\n\r\n\r\nexport class Dismantle extends CreepTask {\r\n\r\n  protected init(): void {\r\n    super.init();\r\n    this.request.status = \"PREPARE\";\r\n  }\r\n\r\n  protected prepare(): void {\r\n    super.prepare();\r\n    this.request.status = \"IN_PROGRESS\";\r\n  }\r\n  protected continue(): void {\r\n    super.continue();\r\n    \r\n    if (this.request.status == \"FINISHED\") return;\r\n    var specificRequest = this.request as DismantleRequest;\r\n    const creep = Game.creeps[this.request.assignedTo];\r\n    const site = Game.getObjectById<AnyStructure>(this.request.targetID);\r\n    if (site == null) {\r\n      this.request.status = \"FINISHED\";\r\n      var flag = _.first(Game.rooms[this.request.roomName]\r\n        .lookForAt(\"flag\", specificRequest.position.x, specificRequest.position.y)\r\n        .filter(f => f.color == COLOR_YELLOW && f.secondaryColor == COLOR_YELLOW));\r\n      flag.remove();\r\n      return;\r\n    }\r\n    const result = creep.dismantle(site);\r\n    \r\n    if (result == ERR_NOT_IN_RANGE) {\r\n      Traveler.travelTo(this.creep, site);\r\n    }\r\n    if (creep.carry.energy == this.creep.carryCapacity) {\r\n      creep.drop(RESOURCE_ENERGY);\r\n    }\r\n  }\r\n\r\n  static addRequests(roomName: string): void {\r\n\r\n    var room = Game.rooms[roomName];\r\n    var flags = _.filter(Game.flags, f => f.color == COLOR_YELLOW && f.secondaryColor == COLOR_YELLOW);\r\n    if (flags.length == 0) return;\r\n\r\n    for (var i in flags) {\r\n      var flag = flags[i];\r\n      var structureType = flag.name as StructureConstant;\r\n      var test = room.lookForAt(\"structure\", flag.pos.x, flag.pos.y);\r\n      var dismantle = _.first(test.filter(t => t.structureType == structureType));\r\n      if (dismantle == undefined) return;\r\n      var request = new DismantleRequest(roomName, dismantle.id)\r\n      if (CreepTaskQueue.active(roomName, request.name, request.targetID).length < 2) {\r\n        CreepTaskQueue.addPendingRequest(request);\r\n      }\r\n        \r\n\r\n    }\r\n    \r\n  }\r\n  constructor(taskInfo: CreepTaskRequest) {\r\n    super(taskInfo);\r\n  }\r\n\r\n}\r\n\r\nexport class Build extends CreepTask {\r\n\r\n  protected init(): void {\r\n    super.init();\r\n    this.request.status = \"PREPARE\";\r\n  }\r\n\r\n  protected prepare(): void {\r\n    super.prepare();\r\n    if (this.request.status == \"FINISHED\") return;\r\n    const info = this.request as BuildRequest;\r\n    const site = Game.getObjectById(info.targetID) as ConstructionSite;\r\n\r\n    if (this.creep.carry.energy == this.creep.carryCapacity) {\r\n      this.request.status = \"IN_PROGRESS\";\r\n      return;\r\n    }\r\n    if (site == null || site.progressTotal - site.progress == 0) {\r\n      this.request.status = \"FINISHED\";\r\n      return;\r\n    }\r\n    var progressLeft = site.progressTotal - site.progress\r\n    if (this.creep.carry.energy < progressLeft) {\r\n\r\n      var roomName = this.request.roomName;\r\n      if (this.collectFromTombstone(roomName)) return;\r\n      if (this.collectFromDroppedEnergy(roomName)) return;\r\n      if (this.collectFromStorage(roomName)) return;\r\n      if (this.collectFromSource(roomName)) return;\r\n    }\r\n    else this.request.status = \"IN_PROGRESS\";\r\n\r\n  }\r\n  protected continue(): void {\r\n    super.continue();\r\n    \r\n    if (this.request.status == \"FINISHED\") return;\r\n    const creep = Game.creeps[this.request.assignedTo];\r\n    const site = Game.getObjectById<ConstructionSite>(this.request.targetID);\r\n    if (site == null || site.progressTotal - site.progress == 0) {\r\n      this.request.status = \"FINISHED\";\r\n      return;\r\n    }\r\n    const result = creep.build(site);\r\n    if (result == ERR_NOT_IN_RANGE) {\r\n      Traveler.travelTo(this.creep, site);\r\n    }\r\n    else if (creep.carry.energy == 0) {\r\n      this.request.status = \"PREPARE\";\r\n    }\r\n  }\r\n\r\n  static addRequests(roomName: string): void {\r\n\r\n    for (var name in Game.rooms) {\r\n      let sites = Game.rooms[name].find(FIND_CONSTRUCTION_SITES);\r\n      const sorted = _.sortBy(sites, s => s.progress).reverse();\r\n\r\n      _.each(sorted, site => {\r\n\r\n        if (site.progressTotal > 0) {\r\n          CreepTaskQueue.addPendingRequest(new BuildRequest(name, site.id));\r\n        }\r\n      })\r\n    }\r\n    \r\n  }\r\n  constructor(taskInfo: CreepTaskRequest) {\r\n    super(taskInfo);\r\n  }\r\n\r\n}\r\n","import { CreepTask } from \"tasks/CreepTask\"\r\nimport { CreepTaskRequest } from \"tasks/CreepTaskRequest\";\r\nimport { CreepTaskQueue } from \"../CreepTaskQueue\";\r\nimport * as utils from \"utils/utils\";\r\n//import { RoomManager } from \"RoomManager\";\r\n\r\nexport class UpgradeRequest extends CreepTaskRequest {\r\n\r\n  requiredRole : CreepRole[] = [\"ROLE_UPGRADER\"]\r\n  priority: number = 5;\r\n  name: string = \"Upgrade\"\r\n  maxConcurrent: number;\r\n  constructor(roomName: string, controllerID: string, maxPerRoom: number) {\r\n    super(roomName, `🎇`, controllerID);\r\n    this.maxConcurrent = maxPerRoom\r\n  }\r\n}\r\nexport class DefendRequest extends CreepTaskRequest {\r\n\r\n  requiredRole: CreepRole[] = [\"ROLE_DEFENDER\"]\r\n  priority: number = 0;\r\n  name = \"DEFEND\";\r\n  maxConcurrent: number;\r\n  constructor(roomName: string, controllerID: string, maxPerRoom: number) {\r\n    super(roomName, `🎇`, controllerID);\r\n    this.maxConcurrent = maxPerRoom\r\n  }\r\n}\r\n\r\nexport class Defend extends CreepTask {\r\n  public name: string = \"Defend\";\r\n\r\n  \r\n  northDefendPositionW6S43_1: RoomPosition = new RoomPosition(33,4,\"W6S43\");\r\n  northDefendPositionW6S43_2: RoomPosition = new RoomPosition(33,6,\"W6S43\");\r\n  northDefendPositionW6S43_3: RoomPosition = new RoomPosition(33, 7, \"W6S43\");\r\n\r\n  protected init(): void {\r\n    super.init();\r\n    this.request.status = \"PREPARE\";\r\n\r\n  }\r\n\r\n  protected prepare(): void {\r\n    super.prepare();\r\n    if (this.request.status == \"FINISHED\") return;\r\n\r\n    var room = Game.rooms[this.request.roomName];\r\n    var roomMem = room.memory as RoomMemory;\r\n    this.request.status = \"IN_PROGRESS\";\r\n    //if (room.energyAvailable < 1000) return;\r\n    //if (this.creep.carry.energy == 0) {\r\n\r\n    //  if (this.collectFromContainer(room.name)) return;\r\n    //  if (room.energyCapacityAvailable > 1300) return;\r\n    //  if (this.collectFromDroppedEnergy(room.name)) return;\r\n    //  if (this.collectFromTombstone(room.name)) return;\r\n    //  if (this.collectFromStorage(room.name)) return;\r\n      \r\n      \r\n    //  //this.collectFromSource(room.name);\r\n\r\n    //}\r\n    //else this.request.status = \"IN_PROGRESS\";\r\n  }\r\n  protected continue(): void {\r\n    super.continue();\r\n    if (this.request.status == \"FINISHED\") return;\r\n    var room = Game.rooms[this.request.roomName];\r\n    var roomMem = room.memory as RoomMemory;\r\n    var enemies = room.find(FIND_HOSTILE_CREEPS).sort(e => e.hits);\r\n    var closestRampartToEn\r\n    if (enemies.length == 0) {\r\n      this.request.status = \"FINISHED\";\r\n      return;\r\n    }\r\n    var lowest = _.first(enemies);\r\n    if (this.creep.attack(lowest) == ERR_NOT_IN_RANGE) {\r\n      this.creep.moveTo(lowest);\r\n    }\r\n    \r\n    //const creep = Game.creeps[this.request.assignedTo];\r\n    //if (this.creep.carry.energy == 0) {\r\n    //  this.request.status = \"PREPARE\";\r\n    //  return;\r\n    //}\r\n    //const info = this.request as UpgradeRequest\r\n    //let controller = Game.getObjectById(info.targetID) as StructureController;\r\n    //if (this.creep.upgradeController(controller) == ERR_NOT_IN_RANGE) {\r\n    //  this.creep.moveTo(controller, { visualizePathStyle: { stroke: '#ffffff' } });\r\n    //}\r\n    \r\n  }\r\n  constructor(taskInfo: CreepTaskRequest) {\r\n    super(taskInfo);\r\n  }\r\n\r\n  static addRequests(roomName: string, maxPerRoom: number): void {\r\n    let controller = Game.rooms[roomName].controller as StructureController;\r\n    let request = new DefendRequest(roomName, controller.id, maxPerRoom);\r\n    let tasksNeeded = request.maxConcurrent - CreepTaskQueue.totalCount(roomName, request.name);\r\n    for (let i = 0; i < tasksNeeded; i++) {\r\n      CreepTaskQueue.addPendingRequest(request);\r\n    }\r\n  }\r\n}\r\n\r\nexport class Upgrade extends CreepTask {\r\n  \r\n  protected init(): void {\r\n    super.init();\r\n    this.request.status = \"PREPARE\";\r\n  }\r\n\r\n  protected prepare(): void {\r\n    super.prepare();\r\n    if (this.request.status == \"FINISHED\") return;\r\n\r\n    var room = Game.rooms[this.request.roomName];\r\n    if(room == undefined || room.controller === undefined) throw Error(\"Room or Controller was undefined in upgrade...\")\r\n\r\n    var roomName = room.name;\r\n    //if (room.energyAvailable < 1000) return;\r\n    if (this.creep.carry.energy < this.creep.carryCapacity) {\r\n\r\n      if (this.collectFromContainer(roomName)) return;\r\n      if (room.energyCapacityAvailable > 1200) {\r\n        if (this.creep.carry.energy > 0) {\r\n          this.request.status = \"IN_PROGRESS\"\r\n        }\r\n        else {\r\n          this.creep.travelTo(room.controller);\r\n        }\r\n        \r\n        return;\r\n      }\r\n      if (this.collectFromDroppedEnergy(roomName)) return;\r\n      if (this.collectFromTombstone(roomName)) return;\r\n      if (this.collectFromStorage(roomName)) return;\r\n      \r\n      \r\n      this.collectFromSource(roomName);\r\n\r\n    }\r\n    else this.request.status = \"IN_PROGRESS\";\r\n  }\r\n  protected continue(): void {\r\n    super.continue();\r\n    if (this.request.status == \"FINISHED\") return;\r\n\r\n    if (this.creep.room.name != this.request.roomName) {\r\n      this.creep.moveTo(new RoomPosition(25, 25, this.request.roomName));\r\n      return;\r\n    }\r\n    //const creep = Game.creeps[this.request.assignedTo];\r\n    if (this.creep.carry.energy == 0) {\r\n      this.request.status = \"PREPARE\";\r\n      return;\r\n    }\r\n    const info = this.request as UpgradeRequest\r\n    let controller = Game.getObjectById(info.targetID) as StructureController;\r\n    var sign = controller.sign as SignDefinition;\r\n    if (sign == undefined || sign.username != \"KeyserSoze\") {\r\n      var result = this.creep.signController(controller, \"The greatest trick the devil ever pulled was convincing the world he did not exist.\");\r\n      if (result == ERR_NOT_IN_RANGE) this.creep.moveTo(controller);\r\n    }\r\n\r\n    if (this.creep.upgradeController(controller) == ERR_NOT_IN_RANGE) {\r\n      this.creep.moveTo(controller, { visualizePathStyle: { stroke: '#ffffff' } });\r\n    }\r\n    \r\n  }\r\n  constructor(taskInfo: CreepTaskRequest) {\r\n    super(taskInfo);\r\n  }\r\n\r\n  static addRequests(roomName: string, maxPerRoom: number): void {\r\n    let controller = Game.rooms[roomName].controller as StructureController;\r\n    var upgraderCount = utils.creepCount(roomName, \"ROLE_UPGRADER\");\r\n    if (controller == undefined || upgraderCount == 0) return;\r\n    let tasksNeeded = upgraderCount - CreepTaskQueue.totalCount(roomName, \"Upgrade\");\r\n    for (let i = 0; i < tasksNeeded; i++) {\r\n      CreepTaskQueue.addPendingRequest(new UpgradeRequest(roomName, controller.id, upgraderCount));\r\n    }\r\n  }\r\n}\r\n\r\n","import { CreepTask } from \"tasks/CreepTask\";\r\nimport { CreepTaskRequest } from \"tasks/CreepTaskRequest\";\r\nimport { CreepTaskQueue } from \"../CreepTaskQueue\";\r\nimport * as utils from \"utils/utils\"\r\n\r\nexport class FillTowerRequest extends CreepTaskRequest {\r\n  static RefillThreshold: number = .75\r\n  priority: number = 1\r\n  requiredRole: CreepRole[] = [\"ROLE_CARRIER\"];\r\n  name = \"FillTower\";\r\n  maxConcurrent = 1;\r\n  constructor(roomName: string, towerID: string) {\r\n    super(roomName, `⚗`, towerID);\r\n  }\r\n}\r\n\r\nexport class FillTower extends CreepTask {\r\n  protected init(): void {\r\n    super.init();\r\n    this.request.status = \"PREPARE\";\r\n  }\r\n  protected prepare(): void {\r\n    super.prepare();\r\n    if (this.request.status == \"FINISHED\") return;\r\n\r\n    var room = Game.rooms[this.request.roomName];\r\n    var roomMem = room.memory as RoomMemory;\r\n    if (this.creep.carry.energy == 0) {\r\n\r\n      \r\n      if(this.collectFromTombstone(room.name)) return;\r\n      else if (this.collectFromDroppedEnergy(room.name)) return;\r\n      else if (this.collectFromMasterLink(room.name)) return;\r\n      else if (this.collectFromStorage(room.name)) return;\r\n      else if (this.collectFromContainer(room.name)) return;\r\n      //this.collectFromSource(room.name);\r\n\r\n    }\r\n    else this.request.status = \"IN_PROGRESS\";\r\n  }\r\n  protected continue(): void {\r\n    super.continue();\r\n    if (this.request.status == \"FINISHED\") return;\r\n    const tower = Game.getObjectById(this.request.targetID) as StructureTower;\r\n    if (tower.energy == tower.energyCapacity) {\r\n      this.request.status = \"FINISHED\";\r\n      return;\r\n    }\r\n    let result = this.creep.transfer(tower, RESOURCE_ENERGY)\r\n    if (result == ERR_NOT_IN_RANGE) {\r\n      this.creep.moveTo(tower, { visualizePathStyle: { stroke: '#ffffff' } });\r\n    }\r\n    else if (result == OK) {\r\n      this.request.status = \"FINISHED\";\r\n    }\r\n  }\r\n\r\n  static addRequests(roomName: string): void {\r\n    let room = Game.rooms[roomName];\r\n    const towers = room.find(FIND_MY_STRUCTURES)\r\n      .filter(t => t.structureType == \"tower\"\r\n        && t.energy < t.energyCapacity * FillTowerRequest.RefillThreshold) as StructureTower[];\r\n\r\n    let sorted = towers.sort((a, b) => a.energy - b.energy);\r\n    //console.log(\"sorted\" + sorted.map(s => s.energy))\r\n\r\n    for (const id in sorted) {\r\n      let tower = sorted[id] as StructureTower;\r\n      let request = new FillTowerRequest(roomName, tower.id);\r\n      if (CreepTaskQueue.totalCount(roomName, request.name) < request.maxConcurrent) {\r\n        CreepTaskQueue.addPendingRequest(request);\r\n      }\r\n    }\r\n  }\r\n  constructor(taskInfo: CreepTaskRequest) {\r\n    super(taskInfo);\r\n  }\r\n\r\n}\r\n","export abstract class StructureTaskRequest implements ITaskRequest\r\n{\r\n\tstatus: TaskStatus;\r\n\tabstract name: string;\r\n\tabstract priority: number;\r\n\ttargetID: string;\r\n\troomName: string;\r\n\tassignedTo: string = \"\";\r\n\tabstract maxConcurrent: number;\r\n\tisCreepTask: boolean = false;\r\n\tconstructor(roomName: string, targetID: string = \"\")\r\n\t{\r\n\t\tthis.roomName = roomName;\r\n\t\tthis.targetID = targetID;\r\n\t\tthis.status = \"PENDING\"\r\n\t}\r\n}\r\n","import { Task } from \"./Task\";\r\n//import { StructureTaskRequest } from \"./StructureTaskRequest\";\r\nexport abstract class StructureTask extends Task {\r\n  public request: StructureTaskRequest;\r\n  building: AnyOwnedStructure;\r\n  room: Room;\r\n\r\n  constructor(taskInfo: ITaskRequest) {\r\n    super(taskInfo);\r\n\r\n    this.request = taskInfo as StructureTaskRequest;\r\n    const building = Game.getObjectById(this.request.assignedTo) as AnyOwnedStructure;\r\n    this.building = building;\r\n    this.room = Game.rooms[this.request.roomName];\r\n\r\n    if (building == undefined) {\r\n      this.request.status = \"FINISHED\";\r\n      return;\r\n    }\r\n  }\r\n  protected init(): void {\r\n    const building = Game.getObjectById(this.request.assignedTo) as AnyOwnedStructure;\r\n    if (building == undefined) {\r\n      this.request.status = \"FINISHED\";\r\n      return;\r\n    }\r\n    this.building = building;\r\n  }\r\n  protected prepare(): void {\r\n    const building = Game.getObjectById(this.request.assignedTo) as AnyOwnedStructure;\r\n    if (building == undefined || building == null) {\r\n      console.log(\"building was null in prepare\")\r\n      this.request.status = \"FINISHED\";\r\n    }\r\n    this.building = building;\r\n  }\r\n\r\n  protected continue(): void {\r\n    const building = Game.getObjectById(this.request.assignedTo) as AnyOwnedStructure;\r\n    if (building == undefined || building == null) {\r\n      console.log(\"building was null in continue\")\r\n      this.request.status = \"FINISHED\";\r\n    }\r\n    this.building = building;\r\n  }\r\n  protected finish(): void {\r\n   // console.log(`StructureTask Finish: ${this.request.roomName}: ${this.request.name}: ${this.request.assignedTo}`);\r\n    const building = Game.getObjectById(this.request.assignedTo) as AnyOwnedStructure;\r\n    if (building == undefined) {\r\n      console.log(\"building was undefined.\")\r\n    }\r\n    var room = building.room as Room;\r\n    var mem = room.memory as RoomMemory;\r\n    var towers = mem.towers;\r\n    var mine = towers[this.request.assignedTo] as SmartStructure;\r\n    if(mine == undefined) console.log(\"not yet...\")\r\n   // console.log(\"Structure Task assigned to \"  + this.request.assignedTo)\r\n    if (mine != undefined) {\r\n      var towerMem = mine.memory as StructureMemory;\r\n      towerMem.idle = true;\r\n      towerMem.currentTask = \"\";\r\n      \r\n    }\r\n    //else throw Error(\"What?\")\r\n    \r\n  }\r\n}\r\n","import { StructureTaskRequest } from \"tasks/StructureTaskRequest\";\r\nimport { StructureTask } from \"tasks/StructureTask\";\r\nimport { StructureTaskQueue } from \"../StructureTaskQueue\";\r\n\r\nexport class TowerAttackRequest extends StructureTaskRequest {\r\n  priority: number = 0\r\n  name: string = \"TowerAttack\";\r\n  maxConcurrent: number = 6;\r\n  constructor(roomName: string, hostileID: string) {\r\n    super(roomName, hostileID)\r\n  }\r\n\r\n}\r\nexport class TowerAttack extends StructureTask {\r\n\r\n  protected init(): void {\r\n    super.init();\r\n    this.request.status = \"PREPARE\";\r\n  }\r\n  protected prepare(): void {\r\n    super.prepare();\r\n    this.request.status = \"IN_PROGRESS\"\r\n  }\r\n  protected continue(): void {\r\n    super.continue();\r\n    if (this.request.status == \"FINISHED\") return;\r\n    let attackRequest = this.request as TowerAttackRequest;\r\n    let hostile = Game.getObjectById(attackRequest.targetID) as Creep;\r\n    let tower = Game.getObjectById(attackRequest.assignedTo) as StructureTower;\r\n    if (hostile == undefined || hostile.hits == 0) {\r\n      this.request.status = \"FINISHED\";\r\n      return;\r\n    }\r\n    var entrances = this.room.memory.baseEntranceRamparts.concat(this.room.memory.baseEntranceWalls);\r\n\r\n    var shortest = 50;\r\n\r\n    _.forEach(entrances, entrance => {\r\n      var inRange = hostile.pos.inRangeTo(entrance.x, entrance.y, 3);\r\n      if (inRange) tower.attack(hostile);\r\n    });\r\n\r\n    //for (var i in entrances) {\r\n    //  var e = entrances[i];\r\n    //  if (e == undefined) continue;\r\n    //  var range = e.getRangeTo(hostile);\r\n    //  if (range < shortest) {\r\n    //    shortest = range;\r\n    //  }\r\n    //}\r\n    //if (shortest > 5) return;\r\n    //console.log(shortest);\r\n    //tower.attack(hostile);\r\n  }\r\n  constructor(request: StructureTaskRequest) {\r\n    super(request);\r\n  }\r\n\r\n  static addTask(roomName: string) {\r\n    let room = Game.rooms[roomName];\r\n    const targets = room.find(FIND_HOSTILE_CREEPS)\r\n\r\n    const sorted = _.sortBy(targets, t => t.hits)\r\n\r\n    var maxConcurrent = new TowerAttackRequest(roomName, \"\").maxConcurrent;\r\n\r\n    var currentCount = StructureTaskQueue.totalCount(roomName, \"TowerAttack\");\r\n\r\n    if (sorted.length == 0) return;\r\n    for (var i = currentCount; i < maxConcurrent; ) {\r\n      _.each(sorted, t => {\r\n        StructureTaskQueue.addPendingRequest(new TowerAttackRequest(roomName, t.id))\r\n        i++;\r\n      });\r\n    }\r\n\r\n  }\r\n}\r\n","import { StructureTask } from \"tasks/StructureTask\";\r\nimport { StructureTaskRequest } from \"tasks/StructureTaskRequest\";\r\nimport { StructureTaskQueue } from \"tasks/StructureTaskQueue\";\r\nimport { CreepTaskQueue } from \"../CreepTaskQueue\";\r\n\r\nexport class TowerRepairRequest extends StructureTaskRequest {\r\n  priority: number = 2;\r\n  name: string = \"TowerRepair\";\r\n  maxConcurrent: number = 3;\r\n  static maxHitPoints: number = 1200000;\r\n  constructor(roomName: string, siteID: string) {\r\n    super(roomName, siteID)\r\n  }\r\n\r\n}\r\nexport class TowerRepair extends StructureTask {\r\n\r\n  protected init(): void {\r\n    super.init();\r\n    this.request.status = \"PREPARE\";\r\n  }\r\n  protected prepare(): void {\r\n    super.prepare();\r\n    this.request.status = \"IN_PROGRESS\"\r\n  }\r\n  protected continue(): void {\r\n    super.continue();\r\n    if (this.request.status == \"FINISHED\") return;\r\n    //console.log(\"continue start: \" + this.request.targetID)\r\n    const site = Game.getObjectById(this.request.targetID) as AnyStructure;\r\n    const tower = Game.getObjectById(this.request.assignedTo) as StructureTower;\r\n    if (tower == null || site == null) {\r\n      console.log(\"something went wrong\")\r\n    }\r\n    if (tower.energy < tower.energyCapacity * .5) {\r\n      this.request.status = \"FINISHED\";\r\n      return;\r\n    }\r\n    \r\n    var status = tower.repair(site);\r\n    if (status == OK) {\r\n      this.request.status = \"FINISHED\";\r\n    }\r\n\r\n    \r\n  }\r\n  \r\n  constructor(taskInfo: StructureTaskRequest) {\r\n    super(taskInfo);\r\n  }\r\n  static addTask(roomName: string) {\r\n    const room = Game.rooms[roomName];\r\n    const targets = room.find(FIND_STRUCTURES)\r\n      .filter(structure => structure.hits < structure.hitsMax * .75 && structure.hits < TowerRepairRequest.maxHitPoints)\r\n\r\n    const sorted = _.sortBy(targets, t => t.hits);\r\n    var target = _.first(sorted);\r\n    if (target != undefined) {\r\n      if (CreepTaskQueue.active(roomName, \"Dismantle\", target.id).length == 0) {\r\n        StructureTaskQueue.addPendingRequest(new TowerRepairRequest(roomName, target.id));\r\n      }\r\n      \r\n    }\r\n\r\n  }\r\n}\r\n","import { CreepTask } from \"tasks/CreepTask\";\r\nimport { CreepTaskRequest } from \"tasks/CreepTaskRequest\";\r\nimport { CreepTaskQueue } from \"tasks/CreepTaskQueue\";\r\nimport * as utils from \"utils/utils\"\r\n\r\n\r\nexport class FillStorageRequest extends CreepTaskRequest {\r\n  priority: number = 4;\r\n  name = \"FillStorage\";\r\n  requiredRole : CreepRole[] = [\"ROLE_CARRIER\"]\r\n  maxConcurrent = 1;\r\n  constructor(roomName: string, restockID: string) {\r\n    super(roomName, `💰`, restockID);\r\n  }\r\n}\r\n\r\nexport class FillStorage extends CreepTask {\r\n  \r\n\r\n  sources: Source[] = []\r\n  protected init(): void {\r\n    super.init();\r\n\r\n    var fillStorage = this.request as FillStorageRequest;\r\n\r\n    //console.log(\"status after init\" + Task.getStatus(this.request.status))\r\n    this.request.status = \"PREPARE\";\r\n  }\r\n\r\n  protected prepare(): void {\r\n    super.prepare();\r\n    if (this.request.status == \"FINISHED\") return;\r\n    const restockInfo = this.request as FillStorageRequest;\r\n    var room = Game.rooms[this.request.roomName];\r\n    var roomMem = room.memory as RoomMemory;\r\n    //this.collectFromContainer(this.request.roomName, creep.id);\r\n\r\n    //temp code...\r\n\r\n\r\n    if (this.creep.carry.energy == 0) {\r\n      \r\n      if(this.collectFromDroppedEnergy(room.name)) return;\r\n      if (this.collectFromTombstone(room.name)) return;\r\n      if (this.collectFromMasterLink(room.name)) return;\r\n      if (this.collectFromContainer(room.name)) return;\r\n      //this.collectFromSource(room.name);\r\n\r\n    }\r\n    else {\r\n      this.request.status = \"IN_PROGRESS\";\r\n    }\r\n  }\r\n  protected continue(): void {\r\n    super.continue();\r\n    if (this.request.status == \"FINISHED\") return;\r\n    const creep = Game.creeps[this.request.assignedTo];\r\n\r\n    let storages = creep.room.find(FIND_MY_STRUCTURES).filter(s => s.structureType == \"storage\") as StructureStorage[]\r\n    const sortedByRange = _.sortBy(storages, s => this.creep.pos.getRangeTo(s));\r\n    //console.log(\"sorted ranges: \" + JSON.stringify(sortedByRange))\r\n    \r\n    if (sortedByRange.length == 0) {\r\n      this.request.status = \"FINISHED\";\r\n    }\r\n    else {\r\n      const result = creep.transfer(sortedByRange[0], _.findKey(creep.carry) as ResourceConstant)\r\n      const target = sortedByRange[0]\r\n      if (result == ERR_NOT_IN_RANGE) {\r\n        creep.moveTo(target, { visualizePathStyle: { stroke: '#ffffff' } });\r\n      }\r\n      if (_.findKey(creep.carry) == undefined) {\r\n        this.request.status = \"FINISHED\";\r\n      }\r\n      //else if (result == OK) {\r\n      //  this.request.status = \"FINISHED\";\r\n      //}\r\n      //else {\r\n      //  this.request.status = \"FINISHED\";\r\n      //}\r\n    }\r\n  }\r\n  constructor(taskInfo: CreepTaskRequest) {\r\n    super(taskInfo);\r\n  }\r\n\r\n  static addRequests(roomName: string) {\r\n\r\n    const room = Game.rooms[roomName];\r\n    let storages = room.find(FIND_MY_STRUCTURES).filter(s => s.structureType == \"storage\") as StructureStorage[];\r\n    //let workers = utils.creepNamesByRole(roomName,\"ROLE_WORKER\").filter(name => {\r\n    //  const worker = Game.creeps[name] as Creep;\r\n    //  return worker.carry.energy > 0;\r\n    //})\r\n    //if (workers.length == 0) return;\r\n\r\n    for (const targetID in storages) {\r\n      let restockable = storages[targetID];\r\n      if (restockable.store.energy == restockable.storeCapacity) continue;\r\n      let request = new FillStorageRequest(roomName, restockable.id);\r\n      let existingTaskCount = CreepTaskQueue.totalCount(roomName, request.name);\r\n      let maxConcurrentCount = request.maxConcurrent;\r\n\r\n      if (existingTaskCount < maxConcurrentCount) {\r\n        CreepTaskQueue.addPendingRequest(request)\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { CreepTaskRequest } from \"tasks/CreepTaskRequest\";\r\nimport { CreepTask } from \"tasks/CreepTask\";\r\nimport { CreepTaskQueue } from \"tasks/CreepTaskQueue\";\r\nimport { Traveler } from \"Traveler\";\r\n\r\nexport class FillContainersRequest extends CreepTaskRequest {\r\n  name: string = \"FillContainers\";\r\n  priority: number = 1;\r\n  requiredRole: CreepRole[] = [\"ROLE_CARRIER\"];\r\n  maxConcurrent: number = 1;\r\n  constructor(roomName: string, restockID: string) {\r\n    super(roomName, `💰2`, restockID);\r\n  }\r\n\r\n}\r\n\r\nexport class FillContainers extends CreepTask {\r\n\r\n  protected init(): void {\r\n    super.init();\r\n\r\n    //var fillStorage = this.request as FillContainersRequest;\r\n\r\n    //console.log(\"status after init\" + Task.getStatus(this.request.status))\r\n    this.request.status = \"PREPARE\";\r\n  }\r\n\r\n  protected prepare(): void {\r\n    super.prepare();\r\n    if (this.request.status == \"FINISHED\") return;\r\n    //const restockInfo = this.request as FillStorageRequest;\r\n    var room = Game.rooms[this.request.roomName];\r\n\r\n    if (this.creep.carry.energy == this.creep.carryCapacity) {\r\n      this.request.status = \"IN_PROGRESS\";\r\n      return;\r\n    }\r\n\r\n    if (this.collectFromTombstone(room.name)) return;\r\n    else if (this.collectFromDroppedEnergy(room.name)) return;\r\n    else if (this.collectFromMasterLink(room.name)) return;\r\n    else if (this.collectFromStorage(room.name)) return;\r\n    else if (this.collectFromContainer(room.name)) return;\r\n\r\n  }\r\n  protected continue(): void {\r\n    super.continue();\r\n    if (this.request.status == \"FINISHED\") return;\r\n    //const creep = Game.creeps[this.request.assignedTo];\r\n    var room = Game.rooms[this.request.roomName];\r\n    var roomMem = room.memory as RoomMemory;\r\n    let storages = room.find(FIND_STRUCTURES).filter(s => {\r\n      if (s.structureType == \"container\" && s.store.energy < s.storeCapacity) {\r\n        var smartContainer = roomMem.containers[s.id];\r\n        return smartContainer.shouldFill;\r\n      }\r\n      return false;\r\n    }) as StructureContainer[];\r\n    if (storages.length == 0) {\r\n      this.request.status = \"FINISHED\";\r\n      return;\r\n    }\r\n\r\n    const closest = _.first(_.sortBy(storages, s => this.creep.pos.getRangeTo(s)))\r\n\r\n    const result = this.creep.transfer(closest, RESOURCE_ENERGY)\r\n    if (result == ERR_NOT_IN_RANGE) {\r\n      Traveler.travelTo(this.creep, closest);\r\n      //this.creep.moveTo(closest, { visualizePathStyle: { stroke: '#ffffff' } });\r\n    }\r\n    else {\r\n      this.request.status = \"FINISHED\";\r\n    }\r\n    //else if (result == OK) {\r\n    //  this.request.status = \"FINISHED\";\r\n    //}\r\n    //else {\r\n    //  this.request.status = \"FINISHED\";\r\n    //}\r\n  }\r\n  constructor(taskInfo: CreepTaskRequest) {\r\n    super(taskInfo);\r\n  }\r\n\r\n  static addRequests(roomName: string) {\r\n\r\n    const room = Game.rooms[roomName];\r\n    const roomMem = room.memory as RoomMemory;\r\n    //let storages = room.find(FIND_MY_STRUCTURES).filter(s => s.structureType == \"storage\") as StructureStorage[];\r\n    let containers = room.find(FIND_STRUCTURES).filter(s => {\r\n      if (s.structureType == \"container\" && s.store.energy < s.storeCapacity / 2) {\r\n        var smartContainer = roomMem.containers[s.id];\r\n        return smartContainer.shouldFill;\r\n      }\r\n      return false;\r\n    }) as StructureContainer[];\r\n    if (containers.length == 0) return;\r\n    //let workers = utils.creepNamesByRole(roomName,\"ROLE_WORKER\").filter(name => {\r\n    //  const worker = Game.creeps[name] as Creep;\r\n    //  return worker.carry.energy > 0;\r\n    //})\r\n    //if (workers.length == 0) return;\r\n    var reqTemplate = new FillContainersRequest(roomName, \"\")\r\n    let existingTaskCount = CreepTaskQueue.totalCount(roomName, reqTemplate.name);\r\n    let maxConcurrentCount = reqTemplate.maxConcurrent;\r\n\r\n    for (var i = existingTaskCount; i < maxConcurrentCount;) {\r\n      _.each(containers, c => {\r\n        CreepTaskQueue.addPendingRequest(new FillContainersRequest(roomName, c.id))\r\n        i++;\r\n      });\r\n    }\r\n\r\n\r\n    for (const targetID in containers) {\r\n      let restockable = containers[targetID];\r\n\r\n      let request = new FillContainersRequest(roomName, restockable.id);\r\n\r\n\r\n      if (existingTaskCount < maxConcurrentCount) {\r\n        CreepTaskQueue.addPendingRequest(request)\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { CreepTaskRequest } from \"tasks/CreepTaskRequest\";\r\nimport { CreepTask } from \"tasks/CreepTask\";\r\nimport { CreepTaskQueue } from \"tasks/CreepTaskQueue\";\r\n\r\nexport class RemoteUpgradeRequest extends CreepTaskRequest {\r\n  priority: number = 2;\r\n  requiredRole: CreepRole[] = [\"ROLE_REMOTE_UPGRADER\"];\r\n  name = \"RemoteUpgrade\";\r\n  maxConcurrent = 3;\r\n  constructor(roomName: string, remoteControllerID: string) {\r\n    super(roomName, `👀2`, remoteControllerID);\r\n  }\r\n}\r\nexport class RemoteUpgrade extends CreepTask {\r\n\r\n  protected init(): void {\r\n    super.init();\r\n    if (this.request.status == \"FINISHED\") return;\r\n\r\n    var controller = Game.getObjectById(this.request.targetID) as StructureController;\r\n    if (this.creep.room.name == controller.pos.roomName) {\r\n      this.request.status = \"PREPARE\";\r\n    }\r\n    else {\r\n      if (this.creep.room.name == controller.pos.roomName) {\r\n        console.log(\"prep time\")\r\n        this.creep.moveTo(controller);\r\n        this.request.status = \"PREPARE\";\r\n      }\r\n      else this.creep.moveTo(controller);\r\n      if (this.creep.pos.roomName != controller.room.name || this.creep.room.name == controller.room.name && this.borderPosition(this.creep.pos)) {\r\n        console.log(\"it happened: \" + this.creep.pos.roomName + \", \" + this.creep.room.name)\r\n        this.creep.moveTo(new RoomPosition(25, 25, controller.room.name));\r\n      }\r\n\r\n\r\n    }\r\n\r\n  }\r\n  private borderPosition(pos: RoomPosition): boolean {\r\n    return (this.creep.pos.x * this.creep.pos.y === 0 || this.creep.pos.x === 49 || this.creep.pos.y === 49);\r\n  }\r\n\r\n  protected prepare(): void {\r\n    super.prepare();\r\n    if (this.request.status == \"FINISHED\") return;\r\n    var room = this.creep.room;\r\n    var roomMem = this.creep.room.memory as RoomMemory;\r\n    //if (room.energyAvailable < 1000) return;\r\n    if (this.creep.carry.energy < this.creep.carryCapacity) {\r\n\r\n      //if (this.collectFromContainer(room.name)) return;\r\n      //if (room.energyCapacityAvailable > 1300) return;\r\n      //if (this.collectFromDroppedEnergy(room.name)) return;\r\n      //if (this.collectFromTombstone(room.name)) return;\r\n      //if (this.collectFromStorage(room.name)) return;\r\n\r\n\r\n      this.collectFromSource(room.name);\r\n\r\n    }\r\n    else this.request.status = \"IN_PROGRESS\";\r\n\r\n  }\r\n  protected continue(): void {\r\n    super.continue();\r\n    if (this.request.status == \"FINISHED\") return;\r\n    if (this.creep.room.name != this.request.roomName) {\r\n      this.creep.moveTo(new RoomPosition(25, 25, this.request.roomName));\r\n      return;\r\n    }\r\n    if (this.creep.carry.energy == 0) {\r\n      this.request.status = \"PREPARE\";\r\n      return;\r\n    }\r\n    let controller = Game.getObjectById(this.request.targetID) as StructureController;\r\n    if (this.creep.upgradeController(controller) == ERR_NOT_IN_RANGE) {\r\n      this.creep.moveTo(controller, { visualizePathStyle: { stroke: '#ffffff' } });\r\n    }\r\n\r\n  }\r\n\r\n  static addRequests(roomName: string): void {\r\n\r\n    //var room = Game.rooms[this.creep.room.name];\r\n    var flags = Game.flags;\r\n    for (var id in flags) {\r\n      var flag = flags[id];\r\n      if (flag.color == COLOR_BLUE && flag.secondaryColor == COLOR_BLUE) {\r\n        var room = flag.room as Room;\r\n        if (room == undefined) return;\r\n        var controller = room.controller as StructureController;\r\n        if (controller == undefined) return;\r\n        var request = new RemoteUpgradeRequest(roomName, controller.id);\r\n        let existingTaskCount = CreepTaskQueue.totalCount(roomName, request.name);\r\n        let maxConcurrentCount = request.maxConcurrent;\r\n        if (existingTaskCount < maxConcurrentCount) {\r\n          CreepTaskQueue.addPendingRequest(request);\r\n        }\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n  constructor(taskInfo: CreepTaskRequest) {\r\n    super(taskInfo);\r\n  }\r\n\r\n}\r\n","import { CreepTask } from \"tasks/CreepTask\";\r\nimport { CreepTaskRequest } from \"tasks/CreepTaskRequest\";\r\nimport { CreepTaskQueue } from \"tasks/CreepTaskQueue\";\r\n\r\nexport class ScoutRequest extends CreepTaskRequest {\r\n  priority: number = 2;\r\n  requiredRole: CreepRole[] = [\"ROLE_SCOUT\"];\r\n  name = \"Scout\";\r\n  maxConcurrent = 3;\r\n  maxPerRoom = 1;\r\n  claiming: boolean = false;\r\n  constructor(sourceRoomName: string, flagID: string, claiming: boolean = false) {\r\n    super(sourceRoomName, `👀`, flagID);\r\n    this.claiming = claiming\r\n  }\r\n}\r\n\r\n\r\nexport class Scout extends CreepTask {\r\n\r\n  protected init(): void {\r\n    super.init();\r\n    this.request.status = \"PREPARE\";\r\n  }\r\n\r\n  protected prepare(): void {\r\n    super.prepare();\r\n    if (this.request.status == \"FINISHED\") return;\r\n\r\n    var scoutFlagID = this.request.targetID;\r\n    var flags = Game.flags;\r\n    var ourFlag = flags[scoutFlagID] as Flag;\r\n    if (ourFlag == undefined) {\r\n      throw Error(\"Flag was undefined?\")\r\n    }\r\n\r\n    var targetPos = new RoomPosition(25, 25, ourFlag.pos.roomName);\r\n\r\n    this.creep.moveTo(targetPos);\r\n\r\n    if (this.creep.room.name == ourFlag.pos.roomName) {\r\n      this.request.status = \"IN_PROGRESS\";\r\n    }\r\n\r\n  }\r\n  protected continue(): void {\r\n    super.continue();\r\n    if (this.request.status == \"FINISHED\") return;\r\n    const creep = Game.creeps[this.request.assignedTo];\r\n    var req = this.request as ScoutRequest;\r\n    //creep.say(\"got here!\");\r\n    var controller = creep.room.controller as StructureController;\r\n    if (controller == undefined) throw new Error(\"Can't put a claim flag in a room w/o a controller... derp\");\r\n\r\n    var result = req.claiming ? creep.claimController(controller) : creep.reserveController(controller);\r\n    if (result == ERR_NOT_IN_RANGE) {\r\n      creep.moveTo(controller)\r\n    }\r\n\r\n  }\r\n\r\n  static addRequests(roomName: string): void {\r\n\r\n    //var room = Game.rooms[this.creep.room.name];\r\n    var flags = Game.flags;\r\n    for (var id in flags) {\r\n      var flag = flags[id] as Flag;\r\n      //blue/blue = scout, blue/white  = claim\r\n      if (flag.color == COLOR_BLUE) {\r\n        var targetRoomName = flag.pos.roomName;\r\n        var sourceRoomName = flag.name;\r\n\r\n        if (sourceRoomName != roomName) continue;\r\n\r\n        //var room = Game.rooms[targetRoomName];\r\n        //if (room != undefined\r\n        //  && room.controller != undefined\r\n        //  && room.controller.reservation != undefined\r\n        //  && room.controller.reservation.username == \"KeyserSoze\"\r\n        //  && room.controller.reservation.ticksToEnd > 2000) {\r\n        //  console.log(\"not adding scout request for \" + roomName)\r\n        //  continue;\r\n        //}\r\n\r\n        var request = new ScoutRequest(sourceRoomName, id)\r\n        var currentActive = CreepTaskQueue.active(roomName, request.name);\r\n        var currentPending = CreepTaskQueue.pending(roomName, request.name);\r\n\r\n        var count = 0;\r\n        for (var i in currentActive) {\r\n          var current = currentActive[i] as CreepTaskRequest;\r\n          if (current.targetID == id) count++;\r\n        }\r\n        for (var i in currentPending) {\r\n          var current = currentPending[i] as CreepTaskRequest;\r\n          if (current.targetID == id) count++;\r\n        }\r\n\r\n        //console.log(\"Current Scout task count for \" + roomName + \": \" + count)\r\n        if (count > 0) return;\r\n\r\n        if (flag.secondaryColor == COLOR_BLUE) {\r\n          request.claiming = true;\r\n          CreepTaskQueue.addPendingRequest(request);\r\n        }\r\n        else if (flag.secondaryColor == COLOR_WHITE) {\r\n          CreepTaskQueue.addPendingRequest(request);\r\n        }\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n  constructor(taskInfo: CreepTaskRequest) {\r\n    super(taskInfo);\r\n  }\r\n\r\n}\r\n","//import { SmartLink } from \"utils/memory\"\r\nimport * as utils from \"utils/utils\";\r\nimport { CreepTaskQueue } from \"tasks/CreepTaskQueue\";\r\nimport { StructureTaskQueue } from \"tasks/StructureTaskQueue\";\r\nimport { Mine } from \"tasks/creep/Mine\";\r\nimport { StructureTask } from \"tasks/StructureTask\";\r\n//import { StructureTaskRequest } from \"tasks/StructureTaskRequest\";\r\nimport { CreepTaskRequest } from \"tasks/CreepTaskRequest\";\r\nimport { PickupEnergy } from \"tasks/creep/PickupEnergy\";\r\nimport { Restock } from \"tasks/creep/Restock\";\r\nimport { Build, Dismantle } from \"tasks/creep/Build\";\r\nimport { Upgrade, Defend } from \"tasks/creep/Upgrade\";\r\nimport { FillTower } from \"tasks/creep/FillTower\";\r\nimport { TowerAttack } from \"tasks/structure/TowerAttack\";\r\nimport { TowerRepair } from \"tasks/structure/TowerRepair\";\r\nimport { FillStorage } from \"FillStorage\";\r\nimport { FillContainers } from \"FillContainers\";\r\nimport { RemoteUpgrade } from \"RemoteUpgrade\";\r\nimport { Scout } from \"Scout\";\r\nimport { Task } from \"tasks/Task\";\r\n\r\n\r\n\r\nexport class TaskManager {\r\n  static runLinks(roomName: string): void {\r\n    var room = Game.rooms[roomName];\r\n    if (room == undefined) return;\r\n\r\n    var roomMem = room.memory as RoomMemory;\r\n    if (roomMem == undefined) throw Error(\"Room Memory was undefined in runLinks\");\r\n\r\n    var links = roomMem.links;\r\n\r\n    var master = _.find(links, l => l.linkMode == \"MASTER_RECEIVE\") as SmartLink;\r\n    if (master == undefined) return;\r\n\r\n    var masterLink = Game.getObjectById(master.linkID) as StructureLink;\r\n\r\n    var slaves = _.filter(links, l => {\r\n      var link = Game.getObjectById(l.linkID) as StructureLink;\r\n      l.linkMode == \"SLAVE_RECEIVE\" && link.energy < link.energyCapacity\r\n    }) as SmartLink[];\r\n\r\n    var senders = _.filter(links, l => {\r\n      //console.log(\"link id: \" + l.roomName + l.linkID)\r\n      var link = Game.getObjectById(l.linkID) as StructureLink;\r\n      return l.linkMode == \"SEND\" && link.energy > 0;\r\n    }) as SmartLink[];\r\n    //console.log(\"senders: \" + senders.length);\r\n    for (var i in senders) {\r\n      var smartLink = senders[i] as SmartLink;\r\n      //console.log(smartLink.linkID);\r\n      var link = Game.getObjectById(smartLink.linkID) as StructureLink;\r\n      //console.log(\"sending\")\r\n      if (masterLink.energy < masterLink.energyCapacity) {\r\n        var roomFor = masterLink.energyCapacity - masterLink.energy;\r\n        if (roomFor > link.energy) roomFor = link.energy;\r\n        link.transferEnergy(masterLink, roomFor)\r\n      }\r\n      else {\r\n        var sortedSlaves = _.sortBy(slaves, s => {\r\n          var slaveLink = Game.getObjectById(s.linkID) as StructureLink;\r\n          return slaveLink.energy;\r\n        });\r\n\r\n        let target = Game.getObjectById(_.first(sortedSlaves).linkID) as StructureLink;\r\n        if (target != undefined && target.energy < target.energyCapacity - 10) {\r\n          var roomFor = target.energyCapacity - target.energy;\r\n          link.transferEnergy(target, roomFor)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private static runTask(task: Task) {\r\n\r\n    //if (!task.request.isCreepTask) console.log(\"running structure task!\")\r\n    \r\n    \r\n    task.run();\r\n\r\n    if (task.request.status == \"FINISHED\") {\r\n      if (task.request.isCreepTask) TaskManager.removeWorkerTasks(task.request);\r\n      else {\r\n        //console.log(\"removing structure task!\")\r\n        TaskManager.removeStructureTasks(task.request);\r\n      }\r\n      return;\r\n    }\r\n  }\r\n  private static removeWorkerTasks(request: ITaskRequest): void {\r\n\r\n    const roomMem = Game.rooms[request.roomName].memory as RoomMemory;\r\n    delete roomMem.activeWorkerRequests[request.assignedTo];\r\n  }\r\n  private static removeStructureTasks(request: ITaskRequest): void {\r\n\r\n    //console.log(\"removing structure task: \" + request.name)\r\n    const roomMem = Game.rooms[request.roomName].memory as RoomMemory;\r\n    delete roomMem.activeStructureRequests[request.assignedTo];\r\n  }\r\n  private static continueActiveRequests(roomName: string) {\r\n\r\n    const activeWorkerTasks = CreepTaskQueue.allActive(roomName);\r\n    //console.log(Object.keys(activeWorkerTasks).length);\r\n\r\n    _.each(activeWorkerTasks, request => {\r\n\r\n      if (Game.creeps[request.assignedTo] === undefined) {\r\n        request.status == \"FINISHED\";\r\n      }\r\n           \r\n      if (request.name == \"Mine\") TaskManager.runTask(new Mine(request));\r\n      else if (request.name == \"PickupEnergy\") TaskManager.runTask(new PickupEnergy(request))\r\n      else if (request.name == \"Restock\") TaskManager.runTask(new Restock(request));\r\n      else if (request.name == \"Upgrade\") TaskManager.runTask(new Upgrade(request))\r\n      else if (request.name == \"Build\") TaskManager.runTask(new Build(request));\r\n      else if (request.name == \"FillTower\") TaskManager.runTask(new FillTower(request))\r\n      else if (request.name == \"FillStorage\") TaskManager.runTask(new FillStorage(request))\r\n      else if (request.name == \"FillContainers\") TaskManager.runTask(new FillContainers(request))\r\n      else if (request.name == \"Scout\") TaskManager.runTask(new Scout(request))\r\n      else if (request.name == \"Defend\") TaskManager.runTask(new Defend(request))\r\n      else if (request.name == \"RemoteUpgrade\") TaskManager.runTask(new RemoteUpgrade(request))\r\n      else if (request.name == \"Dismantle\") TaskManager.runTask(new Dismantle(request))\r\n      else { console.log(\"Request not found...\" + request.name)}\r\n\r\n    })\r\n    \r\n    let activeStructureTasks = StructureTaskQueue.allActive(roomName);\r\n    _.each(activeStructureTasks, request => {\r\n      if (Game.getObjectById(request.assignedTo) as AnyOwnedStructure === undefined) {\r\n        request.status == \"FINISHED\";\r\n      }\r\n      \r\n      if (request.name == \"TowerRepair\") TaskManager.runTask(new TowerRepair(request));\r\n      if (request.name == \"TowerAttack\") TaskManager.runTask(new TowerAttack(request));\r\n    })\r\n    \r\n  }\r\n  private static addBuildingTasks(roomName: string) {\r\n    //console.log(\"add attack\")\r\n    \r\n    TowerAttack.addTask(roomName);\r\n    //console.log(\"add repair\")\r\n    TowerRepair.addTask(roomName);\r\n    //console.log(\"finished building tasks\")\r\n  }\r\n  private static addPendingRequests(roomName: string, energyLevel: number): void {\r\n\r\n    //PickupEnergy.addRequests(roomName);\r\n    Restock.addRequests(roomName, energyLevel);\r\n    Mine.addRequests(roomName, energyLevel);\r\n    //TransferEnergy.addRequests(roomName);\r\n    FillTower.addRequests(roomName);\r\n    Build.addRequests(roomName);\r\n    Upgrade.addRequests(roomName, 6);\r\n    FillStorage.addRequests(roomName)\r\n    FillContainers.addRequests(roomName)\r\n    Scout.addRequests(roomName);\r\n    Dismantle.addRequests(roomName);\r\n    //Defend.addRequests(roomName, 3);\r\n    RemoteUpgrade.addRequests(roomName);\r\n    //console.log(\"finished adding pending worker requests\");\r\n  }\r\n  static Run(roomName: string, energyLevel: number): void {\r\n\r\n    this.addBuildingTasks(roomName);\r\n    this.runLinks(roomName);\r\n    this.continueActiveRequests(roomName);\r\n\r\n    this.addPendingRequests(roomName, energyLevel);\r\n    this.assignPendingRequests(roomName);\r\n  }\r\n\r\n\r\n  private static assignPendingRequests(roomName: string) {\r\n    let idleCreeps = utils.findIdleCreeps(roomName);\r\n    //console.log(`found ${idleCreeps.length} idle creeps for ${roomName}`)\r\n    //var flags = Game.flags;\r\n    //var found = false;\r\n    //for (var id in flags) {\r\n    //  var flag = flags[id] as Flag;\r\n    //  if (flag.name == roomName) {\r\n    //    var more = utils.findIdleCreeps(flag.pos.roomName){\r\n\r\n    //    }\r\n    //    idleCreeps.push(utils.findIdleCreeps(flag.pos.roomName))\r\n    //    break;\r\n    //  }\r\n    //}\r\n\r\n\r\n    for (let id in idleCreeps) {\r\n      let creep = idleCreeps[id] as Creep;\r\n      if (creep != undefined) {\r\n        let mem = creep.memory as CreepMemory;\r\n        //if (mem.role ==\"ROLE_SCOUT\") {\r\n        //  console.log(\"found a scout: \" + creep.name + \" in room \" + creep.pos.roomName);\r\n        //}\r\n\r\n        if (mem.idle) {\r\n          CreepTaskQueue.startPendingRequest(creep.name, roomName)\r\n        }\r\n      }\r\n    }\r\n\r\n    let idleStructures = utils.findIdleSmartStructures(roomName);\r\n    for (let id in idleStructures) {\r\n      let structure = idleStructures[id] as SmartStructure;\r\n      if (structure != undefined) {\r\n        let memory = structure.memory as StructureMemory;\r\n        if (memory.idle) {\r\n          //console.log(\"id: \" + structure.id)\r\n          StructureTaskQueue.startTask(structure.id, roomName);\r\n        }\r\n      }\r\n    }\r\n    //console.log(\"finished assigning pending\")\r\n    // let stillIdleCreeps = utils.findIdleCreeps(roomName);\r\n    // for (let id in stillIdleCreeps)\r\n    // {\r\n    // \tlet creep = stillIdleCreeps[id];\r\n    // \tlet m = creep.memory as CreepMemory\r\n    // \tcreep.moveTo(Game.getObjectById(m.spawnID) as StructureSpawn)\r\n    // }\r\n  }\r\n\r\n}\r\n","import { SmartSource, SmartContainer, SmartLink } from \"utils/memory\";\r\nimport { CreepManager } from \"CreepFactory\";\r\nimport * as utils from \"utils/utils\";\r\nimport { TaskManager } from \"taskManager\";\r\n//import { name } from 'faker';\r\n//import * as Fake from 'faker';\r\n\r\nexport let creeps: Creep[];\r\nexport let creepCount: number = 0;\r\n\r\nexport class RoomManager {\r\n  loadResources(roomName: string): void {\r\n    const room = Game.rooms[roomName];\r\n    const roomMem = room.memory as RoomMemory\r\n    const resources = room.find(FIND_DROPPED_RESOURCES) as Resource[];\r\n    //console.log(JSON.stringify(resources))\r\n    const sorted = _.sortBy(resources, r => r.amount);\r\n    roomMem.activeResourcePileIDs = sorted.map(u => u.id);\r\n\r\n  }\r\n  creeps: Array<Creep> = [];\r\n  creepCount: number = 0;\r\n\r\n\r\n  public Run(roomName: string): void {\r\n\r\n    //this.test(roomName);\r\n    //console.log(`Faker Test: ${name.findName()}`)\r\n    this.loadCreeps(roomName);\r\n    var energyLevel = this.getRoomEnergyLevel(roomName);\r\n    this.loadResources(roomName);\r\n    \r\n    this.loadSmartContainers(roomName);\r\n    this.loadLinks(roomName);\r\n    this.loadHarvestingSpots(roomName);\r\n    this.loadSmartStructures(roomName);\r\n    CreepManager.spawnMissingCreeps(roomName, energyLevel);\r\n\r\n    TaskManager.Run(roomName, energyLevel);\r\n  }\r\n  _defaultSpawn: string = \"\";\r\n\r\n  private loadCreeps(roomName: string) {\r\n    let room = Game.rooms[roomName];\r\n    creeps = room.find(FIND_MY_CREEPS);\r\n    let spawn = room.find(FIND_MY_SPAWNS)[0];\r\n    if (spawn != undefined) this._defaultSpawn = spawn.id;\r\n    creepCount = creeps.length;\r\n    for (let id in creeps) {\r\n      let creep = creeps[id];\r\n      let mem = creep.memory as CreepMemory;\r\n      if (mem.alive === undefined || mem.alive == false) {\r\n        const memory: CreepMemory =\r\n        {\r\n          spawnID: (spawn != undefined ? spawn.id : this._defaultSpawn),\r\n          idle: true,\r\n          alive: true,\r\n          role: utils.getRole(creep.name),\r\n          currentTask: \"\",\r\n          _trav: 0,\r\n          _travel: 0\r\n        };\r\n        creep.memory = memory;\r\n      }\r\n    }\r\n    //console.log(\"creeps loaded: \" + creeps.length)\r\n  }\r\n  private loadSmartStructures(roomName: string) {\r\n\r\n    let room = Game.rooms[roomName]\r\n    let memory = room.memory as RoomMemory;\r\n    if (Object.keys(memory.towers).length == 0) {\r\n      memory.towers = {};\r\n      let structures = room.find(FIND_STRUCTURES);\r\n      let smartStructures = _.filter(structures, function (structure) {\r\n        return (\r\n          structure.structureType == \"tower\"\r\n        );\r\n      });\r\n      for (let id in smartStructures) {\r\n        let structure = smartStructures[id];\r\n        const newStructureMemory: StructureMemory =\r\n        {\r\n          idle: true,\r\n          alive: true,\r\n          currentTask: \"\"\r\n        }\r\n        const smartStructure: SmartStructure =\r\n        {\r\n          id: structure.id,\r\n          memory: newStructureMemory\r\n        }\r\n\r\n        memory.towers[structure.id] = smartStructure;\r\n      }\r\n    }\r\n\r\n\r\n  }\r\n  //private test(roomName: string) {\r\n\r\n  //  var flags = Game.flags;\r\n  //  for (var id in flags) {\r\n  //    var flag = flags[id];\r\n  //    if (flag.color == COLOR_WHITE && flag.secondaryColor == COLOR_WHITE) {\r\n  //      var room = flag.room as Room;\r\n  //      if (room != undefined) {\r\n  //        console.log(\"found a future room flag! \" + room.name);\r\n  //        var scoutCount = utils.creepCountAllRooms(\"ROLE_SCOUT\");\r\n  //        if (scoutCount > 0) return;\r\n\r\n  //        CreepManager.trySpawnCreep(_.first(utils.findSpawns(roomName)) as StructureSpawn,\"ROLE_SCOUT\", this.getRoomEnergyLevel(roomName));\r\n  //      }\r\n  //    }\r\n  //  }\r\n  //}\r\n\r\n  private getRoomEnergyLevel(roomID: string): number {\r\n    let room = Game.rooms[roomID];\r\n    if (creeps.length < 3 && room.energyAvailable < 800) return 1;\r\n\r\n    let cap = room.energyCapacityAvailable;\r\n\r\n    if (cap < 550) return 1;\r\n    else if (cap <= 950) return 2;\r\n    else if (cap <= 1500) return 3;\r\n    else if (cap <= 3500) return 4;\r\n    else return 5;\r\n  }\r\n  private loadSmartContainers(roomName: string) {\r\n    let room = Game.rooms[roomName];\r\n    let roomMemory = room.memory as RoomMemory;\r\n\r\n    //if (Object.keys(roomMemory.harvestLocations).length > 0) return;\r\n    //console.log(\"loading smart containers\")\r\n    let sources = room.find(FIND_SOURCES);\r\n    let controller = _.first(room.find(FIND_STRUCTURES).filter(s => s.structureType == \"controller\"));\r\n    let containers = room.find(FIND_STRUCTURES).filter(s => s.structureType == \"container\");\r\n\r\n    _.each(containers, c => {\r\n      var rangeToSources = sources.map(s => s.pos.getRangeTo(c));\r\n\r\n      var sorted = _.sortBy(rangeToSources, s => s);\r\n      if (_.first(sorted) == 1) {\r\n        //miner depository\r\n        let smart = new SmartContainer(roomName, c.id, false, [\"ROLE_WORKER\",\"ROLE_CARRIER\",\"ROLE_UPGRADER\"])\r\n        roomMemory.containers[c.id] = smart;\r\n      }\r\n      else {\r\n        //probably container withdraw point\r\n        let smart = new SmartContainer(roomName, c.id, true, [\"ROLE_UPGRADER\"])\r\n        roomMemory.containers[c.id] = smart;\r\n      }\r\n\r\n    })\r\n\r\n  }\r\n  private loadLinks(roomName: string) {\r\n    let room = Game.rooms[roomName];\r\n    let roomMemory = room.memory as RoomMemory;\r\n\r\n    //if (Object.keys(roomMemory.harvestLocations).length > 0) return;\r\n    //console.log(\"loading smart containers\")\r\n    let sources = room.find(FIND_SOURCES);\r\n    let controller = _.first(room.find(FIND_STRUCTURES).filter(s => s.structureType == \"controller\"));\r\n    let storage = _.first(room.find(FIND_STRUCTURES).filter(s => s.structureType == \"storage\"))\r\n    let links = room.find(FIND_MY_STRUCTURES).filter(s => s.structureType == \"link\");\r\n    let smartContainers = roomMemory.containers;\r\n\r\n    if (room.name == \"W6S43\") {\r\n      //console.log(\"links: \" + JSON.stringify(links))\r\n    }\r\n\r\n    _.each(links, c => {\r\n      var rangeToSources = sources.map(s => s.pos.getRangeTo(c));\r\n      var rangeToStorage = storage.pos.getRangeTo(c);\r\n      var sorted = _.sortBy(rangeToSources, s => s);\r\n      if (_.first(sorted) <= 2) {\r\n        let smart = new SmartLink(roomName, c.id, \"SEND\")\r\n        roomMemory.links[c.id] = smart;\r\n      }\r\n      else if (rangeToStorage == 1) {\r\n        //storage link\r\n        let smart = new SmartLink(roomName, c.id, \"MASTER_RECEIVE\")\r\n        roomMemory.links[c.id] = smart;\r\n\r\n      }\r\n      else {\r\n        let valids: StructureController[] = [];\r\n        for (var s in smartContainers) {\r\n          var smart = smartContainers[s];\r\n          if (smart.shouldFill) {\r\n            valids.push(Game.getObjectById(s) as StructureController);\r\n          }\r\n        }\r\n        var closestRanges = _.sortBy(valids.map(container => container.pos.getRangeTo(c)), n => n)\r\n        var closest = _.first(closestRanges);\r\n        if (closest == 1) {\r\n          let smart = new SmartLink(roomName, c.id, \"SLAVE_RECEIVE\")\r\n          roomMemory.links[c.id] = smart;\r\n        }\r\n\r\n      }\r\n\r\n    })\r\n\r\n  }\r\n  private loadHarvestingSpots(roomName: string) {\r\n    let room = Game.rooms[roomName];\r\n    let roomMemory = room.memory as RoomMemory;\r\n\r\n    if (Object.keys(roomMemory.harvestLocations).length > 0) return;\r\n    //console.log(\"loading harvesting spots\")\r\n    let sources = room.find(FIND_SOURCES);\r\n    let links = roomMemory.links;\r\n\r\n    let spots: { [index: string]: SmartSource } = {};\r\n\r\n    for (const sourceID in sources) {\r\n      let source = sources[sourceID];\r\n      const spot: SmartSource = {\r\n        sourceID: source.id,\r\n        roomName: roomName,\r\n        assignedTo: [],\r\n        linkID: \"\"\r\n      }\r\n      \r\n      for (var i in links) {\r\n        var link = Game.getObjectById(i) as StructureLink;\r\n        if (source.pos.getRangeTo(link) <= 2) {\r\n          //harvesting spot has link;\r\n          spot.linkID = link.id;\r\n        }\r\n      }\r\n      spots[source.id] = spot;\r\n      //spots.push(spot);\r\n    }\r\n    roomMemory.harvestLocations = spots;\r\n    // \tlet sourcePosition = source.pos as RoomPosition;\r\n    // \tlet right = room.getPositionAt(sourcePosition.x + 1, sourcePosition.y);\r\n    // \tif (right != null) possibles.push(new HarvestSpot(source.id, right));\r\n\r\n    // \tlet left = room.getPositionAt(sourcePosition.x - 1, sourcePosition.y)\r\n    // \tif (left != null) possibles.push(new HarvestSpot(source.id, left));\r\n\r\n    // \tlet top = room.getPositionAt(sourcePosition.x, sourcePosition.y - 1)\r\n    // \tif (top != null) possibles.push(new HarvestSpot(source.id, top));\r\n\r\n    // \tlet bot = room.getPositionAt(sourcePosition.x, sourcePosition.y + 1)\r\n    // \tif (bot != null) possibles.push(new HarvestSpot(source.id, bot));\r\n\r\n    // \tlet tr = room.getPositionAt(sourcePosition.x + 1, sourcePosition.y - 1)\r\n    // \tif (tr != null) possibles.push(new HarvestSpot(source.id, tr));\r\n\r\n    // \tlet tl = room.getPositionAt(sourcePosition.x - 1, sourcePosition.y - 1)\r\n    // \tif (tl != null) possibles.push(new HarvestSpot(source.id, tl));\r\n\r\n    // \tlet br = room.getPositionAt(sourcePosition.x + 1, sourcePosition.y + 1)\r\n    // \tif (br != null) possibles.push(new HarvestSpot(source.id, br));\r\n\r\n    // \tlet bl = room.getPositionAt(sourcePosition.x - 1, sourcePosition.y + 1)\r\n    // \tif (bl != null) possibles.push(new HarvestSpot(source.id, bl));\r\n\r\n    // }\r\n    // for (const id in possibles)\r\n    // {\r\n    // \tlet possible = possibles[id];\r\n    // \tif (possible.pos !== null)\r\n    // \t{\r\n    // \t\tconst found: string = possible.pos.lookFor(LOOK_TERRAIN) as any;\r\n    // \t\tif (found != \"wall\")\r\n    // \t\t{\r\n    // \t\t\tspots.push(possible);\r\n    // \t\t}\r\n    // \t}\r\n    // }\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n","import { ErrorMapper } from \"utils/ErrorMapper\";\r\nimport { RoomManager } from \"roomManager\";\r\nimport * as MemUtils from \"utils/memory\"\r\n\r\nconst rm = new RoomManager();\r\nlet initialized = false;\r\nfunction memoryInit() {\r\n\r\n  console.log(\"Initializing Game\");\r\n  delete Memory.flags;\r\n  delete Memory.spawns;\r\n  delete Memory.creeps;\r\n  delete Memory.rooms;\r\n\r\n  const mem = Memory;\r\n  mem.creeps = {};\r\n  mem.rooms = {};\r\n  mem.spawns = {};\r\n  mem.flags = {};\r\n\r\n  mem.uuid = getTotalCreepCount();\r\n  mem.memVersion = MemUtils.MemoryVersion;\r\n}\r\nfunction getTotalCreepCount(): number {\r\n  let totalcreepCount = 0;\r\n  for (const i in Game.rooms) {\r\n    const room: Room = Game.rooms[i];\r\n    let creeps = room.find(FIND_MY_CREEPS);\r\n    totalcreepCount += creeps.length;\r\n  }\r\n  return totalcreepCount;\r\n}\r\nfunction InitializeGame() {\r\n  if (Memory.memVersion === undefined ||\r\n    Memory.memVersion !== MemUtils.MemoryVersion ||\r\n    (Memory.memVersion == 0 && !initialized)) {\r\n    initialized = true;\r\n    memoryInit();\r\n  }\r\n  if (!Memory.uuid || Memory.uuid > 10000) {\r\n    Memory.uuid = getTotalCreepCount();\r\n  }\r\n  InitializeRoomMemory();\r\n}\r\nfunction InitializeRoomMemory() {\r\n  for (var i in Game.rooms) {\r\n    const room: Room = Game.rooms[i];\r\n    let roomMemory = Memory.rooms[room.name];\r\n    if (roomMemory === undefined || roomMemory.pendingWorkerRequests == undefined) {\r\n      console.log(`Init room memory for ${room.name}.`);\r\n      Memory.rooms[room.name] = {} as RoomMemory;\r\n      MemUtils.initRoomMemory(room.name);\r\n      roomMemory = Memory.rooms[room.name];\r\n    }\r\n  }\r\n}\r\nfunction mainLoop() {\r\n  InitializeGame();\r\n\r\n  for (const i in Game.rooms) {\r\n    const room: Room = Game.rooms[i];\r\n    rm.Run(room.name);\r\n  }\r\n\r\n  MemUtils.cleanupCreeps();\r\n}\r\n\r\nexport const loop = ErrorMapper.wrapLoop(mainLoop);\r\n\r\n"],"names":["ArraySet","require$$0","quickSort","require$$1","base64VLQ","SourceMapConsumer","utils.Search2","utils.creepCount","utils.creepCountAllRooms","utils.findSpawns","utils.getRole","tslib_1.__extends","utils.findClosestContainer","utils.creepNamesByRole","utils.getRestockables","utils.findIdleCreeps","utils.findIdleSmartStructures","creepCount","MemUtils.MemoryVersion","creeps","MemUtils.initRoomMemory","MemUtils.cleanupCreeps"],"mappings":"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"};